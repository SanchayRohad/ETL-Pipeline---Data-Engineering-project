{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":9198669,"sourceType":"datasetVersion","datasetId":5561340}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"markdown","source":"# ETL Pipelines with World Bank Datasets\n\n\nThis project demonstrates the construction of an ETL pipeline using World Bank datasets. It involves extracting socio-economic indicators and historical project lending data, transforming them for analysis, and loading the processed data into a structured format. The resulting pipeline enables comprehensive insights into global development trends and economic indicators.\n\nThe data originates from two key sources:\n1. [World Bank Indicator Data](https://data.worldbank.org/indicator): A collection of socio-economic metrics for various countries, such as population size, land usage, and government debt.\n2. [World Bank Project Data](https://datacatalog.worldbank.org/search/dataset/0037800): A dataset documenting World Bank lending activities, with records dating back to 1947.","metadata":{}},{"cell_type":"markdown","source":"# Outline of this notebook\n\n## Extract-->Transform-->Load\n\n1) **Extracting data** from sources like CSV, JSON and APIs\n2) **Transformation of data** includes steps:-\n    a)combining data from all different sources.\n    b)data cleaning (removing/cleaning all unnecessary data like duplicates, outliers, dummy variables, missing data, etc).\n    c)scaling and  engineering features.\n3) **Load** sending the transformed data to new database\n\n### Goal\n\nThe goal of the notebook is to combine these data sets together so that you can run a machine learning model predicting World Bank Project total costs.\n","metadata":{}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-19T05:55:49.687717Z","iopub.execute_input":"2024-08-19T05:55:49.688661Z","iopub.status.idle":"2024-08-19T05:55:49.697526Z","shell.execute_reply.started":"2024-08-19T05:55:49.688624Z","shell.execute_reply":"2024-08-19T05:55:49.696201Z"},"trusted":true},"execution_count":16,"outputs":[{"name":"stdout","text":"/kaggle/input/worldbank-dataset/populationData.db\n/kaggle/input/worldbank-dataset/populationData.json\n/kaggle/input/worldbank-dataset/gdp_data.csv\n/kaggle/input/worldbank-dataset/electricity_access_percent.csv\n/kaggle/input/worldbank-dataset/populationData.xml\n/kaggle/input/worldbank-dataset/mystery.csv\n/kaggle/input/worldbank-dataset/populationData.csv\n/kaggle/input/worldbank-dataset/projects_data.csv\n/kaggle/input/worldbank-dataset/rural_population_percent.csv\n","output_type":"stream"}]},{"cell_type":"markdown","source":"#### Extracting data from a csv file","metadata":{}},{"cell_type":"code","source":"# import the projects_data.csv file using the pandas library\ndf_projects = pd.read_csv('../input/worldbank-dataset/projects_data.csv', dtype='str')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T07:23:16.086770Z","iopub.execute_input":"2024-08-19T07:23:16.087243Z","iopub.status.idle":"2024-08-19T07:23:16.858240Z","shell.execute_reply.started":"2024-08-19T07:23:16.087210Z","shell.execute_reply":"2024-08-19T07:23:16.856881Z"},"trusted":true},"execution_count":142,"outputs":[]},{"cell_type":"code","source":"# Run the cell below to see what the data looks like\ndf_projects.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.253116Z","iopub.execute_input":"2024-08-19T05:55:50.254030Z","iopub.status.idle":"2024-08-19T05:55:50.288162Z","shell.execute_reply.started":"2024-08-19T05:55:50.253983Z","shell.execute_reply":"2024-08-19T05:55:50.286601Z"},"trusted":true},"execution_count":18,"outputs":[{"execution_count":18,"output_type":"execute_result","data":{"text/plain":"        id  regionname                                        countryname  \\\n0  P162228       Other                                        World;World   \n1  P163962      Africa  Democratic Republic of the Congo;Democratic Re...   \n2  P167672  South Asia  People's Republic of Bangladesh;People's Repub...   \n3  P158768  South Asia  Islamic  Republic of Afghanistan;Islamic  Repu...   \n4  P161364      Africa  Federal Republic of Nigeria;Federal Republic o...   \n\n  prodline                  lendinginstr lendinginstrtype  \\\n0       RE  Investment Project Financing               IN   \n1       PE  Investment Project Financing               IN   \n2       PE  Investment Project Financing               IN   \n3       PE  Investment Project Financing               IN   \n4       PE  Investment Project Financing               IN   \n\n  envassesmentcategorycode supplementprojectflg productlinetype  \\\n0                        C                    N               L   \n1                        B                    N               L   \n2                      NaN                    Y               L   \n3                        A                    N               L   \n4                        B                    N               L   \n\n  projectstatusdisplay  ... mjtheme3name mjtheme4name mjtheme5name  \\\n0               Active  ...          NaN          NaN          NaN   \n1               Active  ...          NaN          NaN          NaN   \n2               Active  ...          NaN          NaN          NaN   \n3               Active  ...          NaN          NaN          NaN   \n4               Active  ...          NaN          NaN          NaN   \n\n                                            location  \\\n0                                                NaN   \n1                                                NaN   \n2                                                NaN   \n3                                                NaN   \n4  0002327546!$!Ogun State!$!7!$!3.58333!$!NG;000...   \n\n                                            GeoLocID  \\\n0                                                NaN   \n1                                                NaN   \n2                                                NaN   \n3                                                NaN   \n4  0002327546;0002328925;0002565340;0002565343;00...   \n\n                                          GeoLocName                 Latitude  \\\n0                                                NaN                      NaN   \n1                                                NaN                      NaN   \n2                                                NaN                      NaN   \n3                                                NaN                      NaN   \n4  Ogun State;Niger State;Abia State;Edo;Kebbi St...  7;10;5.41667;6.5;11.5;8   \n\n                Longitude            Country Unnamed: 56  \n0                     NaN                NaN         NaN  \n1                     NaN                NaN         NaN  \n2                     NaN                NaN         NaN  \n3                     NaN                NaN         NaN  \n4  3.58333;6;7.5;6;4;10.5  NG;NG;NG;NG;NG;NG         NaN  \n\n[5 rows x 57 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>regionname</th>\n      <th>countryname</th>\n      <th>prodline</th>\n      <th>lendinginstr</th>\n      <th>lendinginstrtype</th>\n      <th>envassesmentcategorycode</th>\n      <th>supplementprojectflg</th>\n      <th>productlinetype</th>\n      <th>projectstatusdisplay</th>\n      <th>...</th>\n      <th>mjtheme3name</th>\n      <th>mjtheme4name</th>\n      <th>mjtheme5name</th>\n      <th>location</th>\n      <th>GeoLocID</th>\n      <th>GeoLocName</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Country</th>\n      <th>Unnamed: 56</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>P162228</td>\n      <td>Other</td>\n      <td>World;World</td>\n      <td>RE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>C</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>P163962</td>\n      <td>Africa</td>\n      <td>Democratic Republic of the Congo;Democratic Re...</td>\n      <td>PE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>B</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>P167672</td>\n      <td>South Asia</td>\n      <td>People's Republic of Bangladesh;People's Repub...</td>\n      <td>PE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>Y</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>P158768</td>\n      <td>South Asia</td>\n      <td>Islamic  Republic of Afghanistan;Islamic  Repu...</td>\n      <td>PE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>A</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>P161364</td>\n      <td>Africa</td>\n      <td>Federal Republic of Nigeria;Federal Republic o...</td>\n      <td>PE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>B</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0002327546!$!Ogun State!$!7!$!3.58333!$!NG;000...</td>\n      <td>0002327546;0002328925;0002565340;0002565343;00...</td>\n      <td>Ogun State;Niger State;Abia State;Edo;Kebbi St...</td>\n      <td>7;10;5.41667;6.5;11.5;8</td>\n      <td>3.58333;6;7.5;6;4;10.5</td>\n      <td>NG;NG;NG;NG;NG;NG</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 57 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# count the number of null values in the data set\ndf_projects.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.289278Z","iopub.execute_input":"2024-08-19T05:55:50.289629Z","iopub.status.idle":"2024-08-19T05:55:50.379811Z","shell.execute_reply.started":"2024-08-19T05:55:50.289598Z","shell.execute_reply":"2024-08-19T05:55:50.378610Z"},"trusted":true},"execution_count":19,"outputs":[{"execution_count":19,"output_type":"execute_result","data":{"text/plain":"id                              0\nregionname                      0\ncountryname                     0\nprodline                        0\nlendinginstr                  246\nlendinginstrtype              246\nenvassesmentcategorycode     5811\nsupplementprojectflg           53\nproductlinetype                 0\nprojectstatusdisplay            4\nstatus                          4\nproject_name                    0\nboardapprovaldate            1504\nboard_approval_month         1504\nclosingdate                  3349\nlendprojectcost               125\nibrdcommamt                     0\nidacommamt                      0\ntotalamt                        0\ngrantamt                        0\nborrower                     5919\nimpagency                    6097\nurl                             0\nprojectdoc                  18248\nmajorsector_percent         18248\nsector1                         0\nsector2                      8721\nsector3                     11761\nsector4                     13872\nsector5                     15535\nsector                        638\nmjsector1                   18248\nmjsector2                   18248\nmjsector3                   18248\nmjsector4                   18248\nmjsector5                   18248\nmjsector                      638\ntheme1                          0\ntheme2                       8395\ntheme3                      10764\ntheme4                      13014\ntheme5                      15320\ntheme                       18248\ngoal                         6115\nfinancier                   11188\nmjtheme1name                18248\nmjtheme2name                18248\nmjtheme3name                18248\nmjtheme4name                18248\nmjtheme5name                18248\nlocation                    13922\nGeoLocID                    13922\nGeoLocName                  13923\nLatitude                    13922\nLongitude                   13922\nCountry                     14045\nUnnamed: 56                 18248\ndtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"Notice that the number 18248 shows up multiple times. There is also a countryname column with 0 missing values and a Country column with 14045 missing values. This data set clearly has some issues that will need to be solved in the transform part of the pipeline.\n\nNext, output the shape of the data frame","metadata":{}},{"cell_type":"code","source":"df_projects.shape","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.382857Z","iopub.execute_input":"2024-08-19T05:55:50.383387Z","iopub.status.idle":"2024-08-19T05:55:50.391314Z","shell.execute_reply.started":"2024-08-19T05:55:50.383346Z","shell.execute_reply":"2024-08-19T05:55:50.390021Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"(18248, 57)"},"metadata":{}}]},{"cell_type":"code","source":"df_json = pd.read_json('../input/worldbank-dataset/populationData.json',orient='records')\ndf_json.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.393231Z","iopub.execute_input":"2024-08-19T05:55:50.393623Z","iopub.status.idle":"2024-08-19T05:55:50.541446Z","shell.execute_reply.started":"2024-08-19T05:55:50.393576Z","shell.execute_reply":"2024-08-19T05:55:50.540188Z"},"trusted":true},"execution_count":21,"outputs":[{"execution_count":21,"output_type":"execute_result","data":{"text/plain":"  Country Name Country Code     Indicator Name Indicator Code       1960  \\\n0        Aruba          ABW  Population, total    SP.POP.TOTL    54211.0   \n1  Afghanistan          AFG  Population, total    SP.POP.TOTL  8996351.0   \n2       Angola          AGO  Population, total    SP.POP.TOTL  5643182.0   \n3      Albania          ALB  Population, total    SP.POP.TOTL  1608800.0   \n4      Andorra          AND  Population, total    SP.POP.TOTL    13411.0   \n\n        1961       1962       1963       1964       1965  ...        2008  \\\n0    55438.0    56225.0    56695.0    57032.0    57360.0  ...    101353.0   \n1  9166764.0  9345868.0  9533954.0  9731361.0  9938414.0  ...  27294031.0   \n2  5753024.0  5866061.0  5980417.0  6093321.0  6203299.0  ...  21759420.0   \n3  1659800.0  1711319.0  1762621.0  1814135.0  1864791.0  ...   2947314.0   \n4    14375.0    15370.0    16412.0    17469.0    18549.0  ...     83861.0   \n\n         2009        2010        2011        2012        2013        2014  \\\n0    101453.0    101669.0    102053.0    102577.0    103187.0    103795.0   \n1  28004331.0  28803167.0  29708599.0  30696958.0  31731688.0  32758020.0   \n2  22549547.0  23369131.0  24218565.0  25096150.0  25998340.0  26920466.0   \n3   2927519.0   2913021.0   2905195.0   2900401.0   2895092.0   2889104.0   \n4     84462.0     84449.0     83751.0     82431.0     80788.0     79223.0   \n\n         2015        2016        2017  \n0    104341.0    104822.0    105264.0  \n1  33736494.0  34656032.0  35530081.0  \n2  27859305.0  28813463.0  29784193.0  \n3   2880703.0   2876101.0   2873457.0  \n4     78014.0     77281.0     76965.0  \n\n[5 rows x 62 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>Country Code</th>\n      <th>Indicator Name</th>\n      <th>Indicator Code</th>\n      <th>1960</th>\n      <th>1961</th>\n      <th>1962</th>\n      <th>1963</th>\n      <th>1964</th>\n      <th>1965</th>\n      <th>...</th>\n      <th>2008</th>\n      <th>2009</th>\n      <th>2010</th>\n      <th>2011</th>\n      <th>2012</th>\n      <th>2013</th>\n      <th>2014</th>\n      <th>2015</th>\n      <th>2016</th>\n      <th>2017</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Aruba</td>\n      <td>ABW</td>\n      <td>Population, total</td>\n      <td>SP.POP.TOTL</td>\n      <td>54211.0</td>\n      <td>55438.0</td>\n      <td>56225.0</td>\n      <td>56695.0</td>\n      <td>57032.0</td>\n      <td>57360.0</td>\n      <td>...</td>\n      <td>101353.0</td>\n      <td>101453.0</td>\n      <td>101669.0</td>\n      <td>102053.0</td>\n      <td>102577.0</td>\n      <td>103187.0</td>\n      <td>103795.0</td>\n      <td>104341.0</td>\n      <td>104822.0</td>\n      <td>105264.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>Population, total</td>\n      <td>SP.POP.TOTL</td>\n      <td>8996351.0</td>\n      <td>9166764.0</td>\n      <td>9345868.0</td>\n      <td>9533954.0</td>\n      <td>9731361.0</td>\n      <td>9938414.0</td>\n      <td>...</td>\n      <td>27294031.0</td>\n      <td>28004331.0</td>\n      <td>28803167.0</td>\n      <td>29708599.0</td>\n      <td>30696958.0</td>\n      <td>31731688.0</td>\n      <td>32758020.0</td>\n      <td>33736494.0</td>\n      <td>34656032.0</td>\n      <td>35530081.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Angola</td>\n      <td>AGO</td>\n      <td>Population, total</td>\n      <td>SP.POP.TOTL</td>\n      <td>5643182.0</td>\n      <td>5753024.0</td>\n      <td>5866061.0</td>\n      <td>5980417.0</td>\n      <td>6093321.0</td>\n      <td>6203299.0</td>\n      <td>...</td>\n      <td>21759420.0</td>\n      <td>22549547.0</td>\n      <td>23369131.0</td>\n      <td>24218565.0</td>\n      <td>25096150.0</td>\n      <td>25998340.0</td>\n      <td>26920466.0</td>\n      <td>27859305.0</td>\n      <td>28813463.0</td>\n      <td>29784193.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>Population, total</td>\n      <td>SP.POP.TOTL</td>\n      <td>1608800.0</td>\n      <td>1659800.0</td>\n      <td>1711319.0</td>\n      <td>1762621.0</td>\n      <td>1814135.0</td>\n      <td>1864791.0</td>\n      <td>...</td>\n      <td>2947314.0</td>\n      <td>2927519.0</td>\n      <td>2913021.0</td>\n      <td>2905195.0</td>\n      <td>2900401.0</td>\n      <td>2895092.0</td>\n      <td>2889104.0</td>\n      <td>2880703.0</td>\n      <td>2876101.0</td>\n      <td>2873457.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Andorra</td>\n      <td>AND</td>\n      <td>Population, total</td>\n      <td>SP.POP.TOTL</td>\n      <td>13411.0</td>\n      <td>14375.0</td>\n      <td>15370.0</td>\n      <td>16412.0</td>\n      <td>17469.0</td>\n      <td>18549.0</td>\n      <td>...</td>\n      <td>83861.0</td>\n      <td>84462.0</td>\n      <td>84449.0</td>\n      <td>83751.0</td>\n      <td>82431.0</td>\n      <td>80788.0</td>\n      <td>79223.0</td>\n      <td>78014.0</td>\n      <td>77281.0</td>\n      <td>76965.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 62 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Combining Data\nThere are two csv files:\n\nrural_population_percent.csv\nelectricity_access_percent.csv\nThey both come from the World Bank Indicators data.\n\nhttps://data.worldbank.org/indicator/SP.RUR.TOTL.ZS\nhttps://data.worldbank.org/indicator/EG.ELC.ACCS.ZS\nThe rural populaton data represents the percent of a country's population that is rural over time. The electricity access data shows the percentage of people with access to electricity.\n\nI will combine these two data sets together into one pandas data frame.\n\nCombine the two data sets using the pandas concat method. In other words, find the union of the two data sets.","metadata":{}},{"cell_type":"code","source":"f = open(\"../input/worldbank-dataset/rural_population_percent.csv\")\nfor i in range(10):\n    line = f.readline()\n    print('line: ', i, line)\nf.close()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.543088Z","iopub.execute_input":"2024-08-19T05:55:50.543508Z","iopub.status.idle":"2024-08-19T05:55:50.551478Z","shell.execute_reply.started":"2024-08-19T05:55:50.543470Z","shell.execute_reply":"2024-08-19T05:55:50.550308Z"},"trusted":true},"execution_count":22,"outputs":[{"name":"stdout","text":"line:  0 ﻿\"Data Source\",\"World Development Indicators\",\n\nline:  1 \n\nline:  2 \"Last Updated Date\",\"2018-06-28\",\n\nline:  3 \n\nline:  4 \"Country Name\",\"Country Code\",\"Indicator Name\",\"Indicator Code\",\"1960\",\"1961\",\"1962\",\"1963\",\"1964\",\"1965\",\"1966\",\"1967\",\"1968\",\"1969\",\"1970\",\"1971\",\"1972\",\"1973\",\"1974\",\"1975\",\"1976\",\"1977\",\"1978\",\"1979\",\"1980\",\"1981\",\"1982\",\"1983\",\"1984\",\"1985\",\"1986\",\"1987\",\"1988\",\"1989\",\"1990\",\"1991\",\"1992\",\"1993\",\"1994\",\"1995\",\"1996\",\"1997\",\"1998\",\"1999\",\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\n\nline:  5 \"Aruba\",\"ABW\",\"Rural population (% of total population)\",\"SP.RUR.TOTL.ZS\",\"49.224\",\"49.239\",\"49.254\",\"49.27\",\"49.285\",\"49.3\",\"49.315\",\"49.33\",\"49.346\",\"49.361\",\"49.376\",\"49.391\",\"49.407\",\"49.422\",\"49.437\",\"49.452\",\"49.468\",\"49.483\",\"49.498\",\"49.513\",\"49.528\",\"49.544\",\"49.559\",\"49.574\",\"49.589\",\"49.605\",\"49.62\",\"49.635\",\"49.65\",\"49.665\",\"49.681\",\"49.696\",\"50.002\",\"50.412\",\"50.823\",\"51.233\",\"51.644\",\"52.054\",\"52.464\",\"52.873\",\"53.283\",\"53.661\",\"54.028\",\"54.394\",\"54.76\",\"55.125\",\"55.489\",\"55.853\",\"56.217\",\"56.579\",\"56.941\",\"57.302\",\"57.636\",\"57.942\",\"58.221\",\"58.472\",\"58.696\",\"58.893\",\n\nline:  6 \"Afghanistan\",\"AFG\",\"Rural population (% of total population)\",\"SP.RUR.TOTL.ZS\",\"91.779\",\"91.492\",\"91.195\",\"90.89\",\"90.574\",\"90.25\",\"89.915\",\"89.57\",\"89.214\",\"88.848\",\"88.471\",\"88.083\",\"87.684\",\"87.274\",\"86.851\",\"86.417\",\"85.971\",\"85.513\",\"85.042\",\"84.565\",\"84.319\",\"84.07\",\"83.818\",\"83.563\",\"83.304\",\"83.042\",\"82.777\",\"82.509\",\"82.237\",\"81.962\",\"81.684\",\"81.403\",\"81.118\",\"80.83\",\"80.538\",\"80.243\",\"79.945\",\"79.644\",\"79.339\",\"79.03\",\"78.718\",\"78.404\",\"78.085\",\"77.763\",\"77.438\",\"77.105\",\"76.763\",\"76.413\",\"76.054\",\"75.687\",\"75.311\",\"74.926\",\"74.532\",\"74.129\",\"73.718\",\"73.297\",\"72.868\",\"72.43\",\n\nline:  7 \"Angola\",\"AGO\",\"Rural population (% of total population)\",\"SP.RUR.TOTL.ZS\",\"89.565\",\"89.202\",\"88.796\",\"88.376\",\"87.942\",\"87.496\",\"87.035\",\"86.559\",\"86.068\",\"85.564\",\"85.043\",\"84.566\",\"84.125\",\"83.676\",\"83.215\",\"82.745\",\"82.263\",\"81.772\",\"81.27\",\"80.758\",\"80.234\",\"79.701\",\"79.157\",\"78.602\",\"78.035\",\"77.459\",\"76.872\",\"76.275\",\"75.666\",\"75.048\",\"74.418\",\"73.779\",\"73.128\",\"72.47\",\"71.8\",\"71.12\",\"70.43\",\"69.732\",\"69.025\",\"68.308\",\"67.581\",\"66.848\",\"66.105\",\"65.355\",\"64.595\",\"63.831\",\"63.058\",\"62.278\",\"61.491\",\"60.701\",\"59.903\",\"59.1\",\"58.301\",\"57.51\",\"56.726\",\"55.95\",\"55.181\",\"54.422\",\n\nline:  8 \"Albania\",\"ALB\",\"Rural population (% of total population)\",\"SP.RUR.TOTL.ZS\",\"69.295\",\"69.057\",\"68.985\",\"68.914\",\"68.842\",\"68.77\",\"68.698\",\"68.626\",\"68.554\",\"68.452\",\"68.26\",\"68.067\",\"67.873\",\"67.679\",\"67.484\",\"67.288\",\"67.092\",\"66.895\",\"66.698\",\"66.5\",\"66.238\",\"65.976\",\"65.713\",\"65.448\",\"65.183\",\"64.917\",\"64.65\",\"64.381\",\"64.112\",\"63.842\",\"63.572\",\"63.3\",\"62.751\",\"62.201\",\"61.646\",\"61.089\",\"60.527\",\"59.965\",\"59.399\",\"58.831\",\"58.259\",\"57.565\",\"56.499\",\"55.427\",\"54.349\",\"53.269\",\"52.185\",\"51.098\",\"50.009\",\"48.924\",\"47.837\",\"46.753\",\"45.67\",\"44.617\",\"43.591\",\"42.593\",\"41.624\",\"40.684\",\n\nline:  9 \"Andorra\",\"AND\",\"Rural population (% of total population)\",\"SP.RUR.TOTL.ZS\",\"41.55\",\"39.017\",\"36.538\",\"34.128\",\"31.795\",\"29.555\",\"27.407\",\"25.359\",\"23.412\",\"21.576\",\"19.845\",\"18.22\",\"16.699\",\"15.284\",\"13.968\",\"12.748\",\"11.618\",\"10.58\",\"9.622\",\"8.743\",\"7.93600000000001\",\"7.2\",\"6.526\",\"5.911\",\"5.351\",\"4.84099999999999\",\"4.675\",\"4.822\",\"4.973\",\"5.128\",\"5.288\",\"5.47\",\"5.676\",\"5.889\",\"6.11\",\"6.339\",\"6.575\",\"6.81999999999999\",\"7.07299999999999\",\"7.334\",\"7.605\",\"7.944\",\"8.35899999999999\",\"8.79300000000001\",\"9.249\",\"9.705\",\"10.162\",\"10.637\",\"11.133\",\"11.648\",\"12.183\",\"12.74\",\"13.292\",\"13.835\",\"14.367\",\"14.885\",\"15.388\",\"15.873\",\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df_rural = pd.read_csv('../input/worldbank-dataset/rural_population_percent.csv',skiprows=4)\ndf_rural.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.553286Z","iopub.execute_input":"2024-08-19T05:55:50.553827Z","iopub.status.idle":"2024-08-19T05:55:50.603314Z","shell.execute_reply.started":"2024-08-19T05:55:50.553757Z","shell.execute_reply":"2024-08-19T05:55:50.602041Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"  Country Name Country Code                            Indicator Name  \\\n0        Aruba          ABW  Rural population (% of total population)   \n1  Afghanistan          AFG  Rural population (% of total population)   \n2       Angola          AGO  Rural population (% of total population)   \n3      Albania          ALB  Rural population (% of total population)   \n4      Andorra          AND  Rural population (% of total population)   \n\n   Indicator Code    1960    1961    1962    1963    1964    1965  ...  \\\n0  SP.RUR.TOTL.ZS  49.224  49.239  49.254  49.270  49.285  49.300  ...   \n1  SP.RUR.TOTL.ZS  91.779  91.492  91.195  90.890  90.574  90.250  ...   \n2  SP.RUR.TOTL.ZS  89.565  89.202  88.796  88.376  87.942  87.496  ...   \n3  SP.RUR.TOTL.ZS  69.295  69.057  68.985  68.914  68.842  68.770  ...   \n4  SP.RUR.TOTL.ZS  41.550  39.017  36.538  34.128  31.795  29.555  ...   \n\n     2009    2010    2011    2012    2013    2014    2015    2016    2017  \\\n0  56.579  56.941  57.302  57.636  57.942  58.221  58.472  58.696  58.893   \n1  75.687  75.311  74.926  74.532  74.129  73.718  73.297  72.868  72.430   \n2  60.701  59.903  59.100  58.301  57.510  56.726  55.950  55.181  54.422   \n3  48.924  47.837  46.753  45.670  44.617  43.591  42.593  41.624  40.684   \n4  11.648  12.183  12.740  13.292  13.835  14.367  14.885  15.388  15.873   \n\n   Unnamed: 62  \n0          NaN  \n1          NaN  \n2          NaN  \n3          NaN  \n4          NaN  \n\n[5 rows x 63 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>Country Code</th>\n      <th>Indicator Name</th>\n      <th>Indicator Code</th>\n      <th>1960</th>\n      <th>1961</th>\n      <th>1962</th>\n      <th>1963</th>\n      <th>1964</th>\n      <th>1965</th>\n      <th>...</th>\n      <th>2009</th>\n      <th>2010</th>\n      <th>2011</th>\n      <th>2012</th>\n      <th>2013</th>\n      <th>2014</th>\n      <th>2015</th>\n      <th>2016</th>\n      <th>2017</th>\n      <th>Unnamed: 62</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Aruba</td>\n      <td>ABW</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>49.224</td>\n      <td>49.239</td>\n      <td>49.254</td>\n      <td>49.270</td>\n      <td>49.285</td>\n      <td>49.300</td>\n      <td>...</td>\n      <td>56.579</td>\n      <td>56.941</td>\n      <td>57.302</td>\n      <td>57.636</td>\n      <td>57.942</td>\n      <td>58.221</td>\n      <td>58.472</td>\n      <td>58.696</td>\n      <td>58.893</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>91.779</td>\n      <td>91.492</td>\n      <td>91.195</td>\n      <td>90.890</td>\n      <td>90.574</td>\n      <td>90.250</td>\n      <td>...</td>\n      <td>75.687</td>\n      <td>75.311</td>\n      <td>74.926</td>\n      <td>74.532</td>\n      <td>74.129</td>\n      <td>73.718</td>\n      <td>73.297</td>\n      <td>72.868</td>\n      <td>72.430</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Angola</td>\n      <td>AGO</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>89.565</td>\n      <td>89.202</td>\n      <td>88.796</td>\n      <td>88.376</td>\n      <td>87.942</td>\n      <td>87.496</td>\n      <td>...</td>\n      <td>60.701</td>\n      <td>59.903</td>\n      <td>59.100</td>\n      <td>58.301</td>\n      <td>57.510</td>\n      <td>56.726</td>\n      <td>55.950</td>\n      <td>55.181</td>\n      <td>54.422</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>69.295</td>\n      <td>69.057</td>\n      <td>68.985</td>\n      <td>68.914</td>\n      <td>68.842</td>\n      <td>68.770</td>\n      <td>...</td>\n      <td>48.924</td>\n      <td>47.837</td>\n      <td>46.753</td>\n      <td>45.670</td>\n      <td>44.617</td>\n      <td>43.591</td>\n      <td>42.593</td>\n      <td>41.624</td>\n      <td>40.684</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Andorra</td>\n      <td>AND</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>41.550</td>\n      <td>39.017</td>\n      <td>36.538</td>\n      <td>34.128</td>\n      <td>31.795</td>\n      <td>29.555</td>\n      <td>...</td>\n      <td>11.648</td>\n      <td>12.183</td>\n      <td>12.740</td>\n      <td>13.292</td>\n      <td>13.835</td>\n      <td>14.367</td>\n      <td>14.885</td>\n      <td>15.388</td>\n      <td>15.873</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 63 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"f = open(\"../input/worldbank-dataset/electricity_access_percent.csv\")\nfor i in range(10):\n    line = f.readline()\n    print('line: ', i, line)\nf.close()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.605587Z","iopub.execute_input":"2024-08-19T05:55:50.606543Z","iopub.status.idle":"2024-08-19T05:55:50.613879Z","shell.execute_reply.started":"2024-08-19T05:55:50.606510Z","shell.execute_reply":"2024-08-19T05:55:50.612642Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"line:  0 ﻿\"Data Source\",\"World Development Indicators\",\n\nline:  1 \n\nline:  2 \"Last Updated Date\",\"2018-06-28\",\n\nline:  3 \n\nline:  4 \"Country Name\",\"Country Code\",\"Indicator Name\",\"Indicator Code\",\"1960\",\"1961\",\"1962\",\"1963\",\"1964\",\"1965\",\"1966\",\"1967\",\"1968\",\"1969\",\"1970\",\"1971\",\"1972\",\"1973\",\"1974\",\"1975\",\"1976\",\"1977\",\"1978\",\"1979\",\"1980\",\"1981\",\"1982\",\"1983\",\"1984\",\"1985\",\"1986\",\"1987\",\"1988\",\"1989\",\"1990\",\"1991\",\"1992\",\"1993\",\"1994\",\"1995\",\"1996\",\"1997\",\"1998\",\"1999\",\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\n\nline:  5 \"Aruba\",\"ABW\",\"Access to electricity (% of population)\",\"EG.ELC.ACCS.ZS\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"88.4453506469727\",\"88.7808456420898\",\"89.1158294677734\",\"89.44775390625\",\"89.7735595703125\",\"90.0901870727539\",\"90.3945846557617\",\"90.6836776733398\",\"90.9544219970703\",\"91.2037506103516\",\"91.6603980031457\",\"91.6380920410156\",\"91.8337173461914\",\"92.0230484008789\",\"92.2121658325195\",\"92.4071197509765\",\"92.6139831542969\",\"92.8388214111328\",\"93.086166381836\",\"93.3545455932617\",\"93.3562921509542\",\"93.9423751831055\",\"94.2558135986328\",\"94.5782623291016\",\"94.9067230224609\",\"95.2381820678711\",\"95.5701446533203\",\"\",\n\nline:  6 \"Afghanistan\",\"AFG\",\"Access to electricity (% of population)\",\"EG.ELC.ACCS.ZS\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"0.00999999977648258\",\"0.00999999977648258\",\"0.00999999977648258\",\"0.00999999977648258\",\"0.00999999977648258\",\"0.00999999977648258\",\"0.00999999977648258\",\"0.00999999977648258\",\"0.0219771377742291\",\"0.179634585976601\",\"0.959755897521973\",\"0.77653694152832\",\"6.26739358901977\",\"11.7519664764404\",\"17.2363185882568\",\"23\",\"28.2286128997803\",\"33.7486801147461\",\"42.4\",\"44.8548851013184\",\"42.7\",\"43.2220189082037\",\"69.1\",\"67.2595520019531\",\"89.5\",\"71.5\",\"84.1371383666992\",\"\",\n\nline:  7 \"Angola\",\"AGO\",\"Access to electricity (% of population)\",\"EG.ELC.ACCS.ZS\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"11.3978080749512\",\"12.5793790817261\",\"13.7604398727417\",\"14.9384412765503\",\"16.1103248596191\",\"17.2730312347412\",\"18.4235019683838\",\"19.5586757659912\",\"20.6754951477051\",\"21.7709007263184\",\"22.843355178833\",\"20\",\"24.939094543457\",\"25.9745082855225\",\"27.0097007751465\",\"28.0507354736328\",\"29.1036758422852\",\"37.5\",\"31.2680130004883\",\"32.3824691772461\",\"33.514949798584\",\"34.6\",\"35.821964263916\",\"36.9904899597168\",\"32\",\"42\",\"40.5206069946289\",\"\",\n\nline:  8 \"Albania\",\"ALB\",\"Access to electricity (% of population)\",\"EG.ELC.ACCS.ZS\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"\",\n\nline:  9 \"Andorra\",\"AND\",\"Access to electricity (% of population)\",\"EG.ELC.ACCS.ZS\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"100\",\"\",\n\n","output_type":"stream"}]},{"cell_type":"code","source":"df_electricity = pd.read_csv('../input/worldbank-dataset/electricity_access_percent.csv',skiprows=4)\ndf_electricity.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.616012Z","iopub.execute_input":"2024-08-19T05:55:50.616460Z","iopub.status.idle":"2024-08-19T05:55:50.655830Z","shell.execute_reply.started":"2024-08-19T05:55:50.616403Z","shell.execute_reply":"2024-08-19T05:55:50.654657Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"  Country Name Country Code                           Indicator Name  \\\n0        Aruba          ABW  Access to electricity (% of population)   \n1  Afghanistan          AFG  Access to electricity (% of population)   \n2       Angola          AGO  Access to electricity (% of population)   \n3      Albania          ALB  Access to electricity (% of population)   \n4      Andorra          AND  Access to electricity (% of population)   \n\n   Indicator Code  1960  1961  1962  1963  1964  1965  ...        2009  \\\n0  EG.ELC.ACCS.ZS   NaN   NaN   NaN   NaN   NaN   NaN  ...   93.354546   \n1  EG.ELC.ACCS.ZS   NaN   NaN   NaN   NaN   NaN   NaN  ...   44.854885   \n2  EG.ELC.ACCS.ZS   NaN   NaN   NaN   NaN   NaN   NaN  ...   32.382469   \n3  EG.ELC.ACCS.ZS   NaN   NaN   NaN   NaN   NaN   NaN  ...  100.000000   \n4  EG.ELC.ACCS.ZS   NaN   NaN   NaN   NaN   NaN   NaN  ...  100.000000   \n\n         2010        2011        2012        2013        2014        2015  \\\n0   93.356292   93.942375   94.255814   94.578262   94.906723   95.238182   \n1   42.700000   43.222019   69.100000   67.259552   89.500000   71.500000   \n2   33.514950   34.600000   35.821964   36.990490   32.000000   42.000000   \n3  100.000000  100.000000  100.000000  100.000000  100.000000  100.000000   \n4  100.000000  100.000000  100.000000  100.000000  100.000000  100.000000   \n\n         2016  2017  Unnamed: 62  \n0   95.570145   NaN          NaN  \n1   84.137138   NaN          NaN  \n2   40.520607   NaN          NaN  \n3  100.000000   NaN          NaN  \n4  100.000000   NaN          NaN  \n\n[5 rows x 63 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>Country Code</th>\n      <th>Indicator Name</th>\n      <th>Indicator Code</th>\n      <th>1960</th>\n      <th>1961</th>\n      <th>1962</th>\n      <th>1963</th>\n      <th>1964</th>\n      <th>1965</th>\n      <th>...</th>\n      <th>2009</th>\n      <th>2010</th>\n      <th>2011</th>\n      <th>2012</th>\n      <th>2013</th>\n      <th>2014</th>\n      <th>2015</th>\n      <th>2016</th>\n      <th>2017</th>\n      <th>Unnamed: 62</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Aruba</td>\n      <td>ABW</td>\n      <td>Access to electricity (% of population)</td>\n      <td>EG.ELC.ACCS.ZS</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>93.354546</td>\n      <td>93.356292</td>\n      <td>93.942375</td>\n      <td>94.255814</td>\n      <td>94.578262</td>\n      <td>94.906723</td>\n      <td>95.238182</td>\n      <td>95.570145</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>Access to electricity (% of population)</td>\n      <td>EG.ELC.ACCS.ZS</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>44.854885</td>\n      <td>42.700000</td>\n      <td>43.222019</td>\n      <td>69.100000</td>\n      <td>67.259552</td>\n      <td>89.500000</td>\n      <td>71.500000</td>\n      <td>84.137138</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Angola</td>\n      <td>AGO</td>\n      <td>Access to electricity (% of population)</td>\n      <td>EG.ELC.ACCS.ZS</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>32.382469</td>\n      <td>33.514950</td>\n      <td>34.600000</td>\n      <td>35.821964</td>\n      <td>36.990490</td>\n      <td>32.000000</td>\n      <td>42.000000</td>\n      <td>40.520607</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>Access to electricity (% of population)</td>\n      <td>EG.ELC.ACCS.ZS</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Andorra</td>\n      <td>AND</td>\n      <td>Access to electricity (% of population)</td>\n      <td>EG.ELC.ACCS.ZS</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>100.000000</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 63 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"remove the Unnamed:62 column from each data set","metadata":{}},{"cell_type":"code","source":"df_rural.drop(['Unnamed: 62'],axis=1,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.660917Z","iopub.execute_input":"2024-08-19T05:55:50.661280Z","iopub.status.idle":"2024-08-19T05:55:50.668728Z","shell.execute_reply.started":"2024-08-19T05:55:50.661249Z","shell.execute_reply":"2024-08-19T05:55:50.667552Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"df_electricity.drop(['Unnamed: 62'],axis=1,inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.670124Z","iopub.execute_input":"2024-08-19T05:55:50.670474Z","iopub.status.idle":"2024-08-19T05:55:50.678921Z","shell.execute_reply.started":"2024-08-19T05:55:50.670444Z","shell.execute_reply":"2024-08-19T05:55:50.677570Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"df_rural.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.680455Z","iopub.execute_input":"2024-08-19T05:55:50.680827Z","iopub.status.idle":"2024-08-19T05:55:50.715126Z","shell.execute_reply.started":"2024-08-19T05:55:50.680767Z","shell.execute_reply":"2024-08-19T05:55:50.712840Z"},"trusted":true},"execution_count":28,"outputs":[{"execution_count":28,"output_type":"execute_result","data":{"text/plain":"  Country Name Country Code                            Indicator Name  \\\n0        Aruba          ABW  Rural population (% of total population)   \n1  Afghanistan          AFG  Rural population (% of total population)   \n2       Angola          AGO  Rural population (% of total population)   \n3      Albania          ALB  Rural population (% of total population)   \n4      Andorra          AND  Rural population (% of total population)   \n\n   Indicator Code    1960    1961    1962    1963    1964    1965  ...  \\\n0  SP.RUR.TOTL.ZS  49.224  49.239  49.254  49.270  49.285  49.300  ...   \n1  SP.RUR.TOTL.ZS  91.779  91.492  91.195  90.890  90.574  90.250  ...   \n2  SP.RUR.TOTL.ZS  89.565  89.202  88.796  88.376  87.942  87.496  ...   \n3  SP.RUR.TOTL.ZS  69.295  69.057  68.985  68.914  68.842  68.770  ...   \n4  SP.RUR.TOTL.ZS  41.550  39.017  36.538  34.128  31.795  29.555  ...   \n\n     2008    2009    2010    2011    2012    2013    2014    2015    2016  \\\n0  56.217  56.579  56.941  57.302  57.636  57.942  58.221  58.472  58.696   \n1  76.054  75.687  75.311  74.926  74.532  74.129  73.718  73.297  72.868   \n2  61.491  60.701  59.903  59.100  58.301  57.510  56.726  55.950  55.181   \n3  50.009  48.924  47.837  46.753  45.670  44.617  43.591  42.593  41.624   \n4  11.133  11.648  12.183  12.740  13.292  13.835  14.367  14.885  15.388   \n\n     2017  \n0  58.893  \n1  72.430  \n2  54.422  \n3  40.684  \n4  15.873  \n\n[5 rows x 62 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>Country Code</th>\n      <th>Indicator Name</th>\n      <th>Indicator Code</th>\n      <th>1960</th>\n      <th>1961</th>\n      <th>1962</th>\n      <th>1963</th>\n      <th>1964</th>\n      <th>1965</th>\n      <th>...</th>\n      <th>2008</th>\n      <th>2009</th>\n      <th>2010</th>\n      <th>2011</th>\n      <th>2012</th>\n      <th>2013</th>\n      <th>2014</th>\n      <th>2015</th>\n      <th>2016</th>\n      <th>2017</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Aruba</td>\n      <td>ABW</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>49.224</td>\n      <td>49.239</td>\n      <td>49.254</td>\n      <td>49.270</td>\n      <td>49.285</td>\n      <td>49.300</td>\n      <td>...</td>\n      <td>56.217</td>\n      <td>56.579</td>\n      <td>56.941</td>\n      <td>57.302</td>\n      <td>57.636</td>\n      <td>57.942</td>\n      <td>58.221</td>\n      <td>58.472</td>\n      <td>58.696</td>\n      <td>58.893</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>91.779</td>\n      <td>91.492</td>\n      <td>91.195</td>\n      <td>90.890</td>\n      <td>90.574</td>\n      <td>90.250</td>\n      <td>...</td>\n      <td>76.054</td>\n      <td>75.687</td>\n      <td>75.311</td>\n      <td>74.926</td>\n      <td>74.532</td>\n      <td>74.129</td>\n      <td>73.718</td>\n      <td>73.297</td>\n      <td>72.868</td>\n      <td>72.430</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Angola</td>\n      <td>AGO</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>89.565</td>\n      <td>89.202</td>\n      <td>88.796</td>\n      <td>88.376</td>\n      <td>87.942</td>\n      <td>87.496</td>\n      <td>...</td>\n      <td>61.491</td>\n      <td>60.701</td>\n      <td>59.903</td>\n      <td>59.100</td>\n      <td>58.301</td>\n      <td>57.510</td>\n      <td>56.726</td>\n      <td>55.950</td>\n      <td>55.181</td>\n      <td>54.422</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>69.295</td>\n      <td>69.057</td>\n      <td>68.985</td>\n      <td>68.914</td>\n      <td>68.842</td>\n      <td>68.770</td>\n      <td>...</td>\n      <td>50.009</td>\n      <td>48.924</td>\n      <td>47.837</td>\n      <td>46.753</td>\n      <td>45.670</td>\n      <td>44.617</td>\n      <td>43.591</td>\n      <td>42.593</td>\n      <td>41.624</td>\n      <td>40.684</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Andorra</td>\n      <td>AND</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>41.550</td>\n      <td>39.017</td>\n      <td>36.538</td>\n      <td>34.128</td>\n      <td>31.795</td>\n      <td>29.555</td>\n      <td>...</td>\n      <td>11.133</td>\n      <td>11.648</td>\n      <td>12.183</td>\n      <td>12.740</td>\n      <td>13.292</td>\n      <td>13.835</td>\n      <td>14.367</td>\n      <td>14.885</td>\n      <td>15.388</td>\n      <td>15.873</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 62 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df = pd.concat([df_rural, df_electricity])","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.716854Z","iopub.execute_input":"2024-08-19T05:55:50.717374Z","iopub.status.idle":"2024-08-19T05:55:50.726100Z","shell.execute_reply.started":"2024-08-19T05:55:50.717333Z","shell.execute_reply":"2024-08-19T05:55:50.723616Z"},"trusted":true},"execution_count":29,"outputs":[]},{"cell_type":"code","source":"df.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.727597Z","iopub.execute_input":"2024-08-19T05:55:50.727993Z","iopub.status.idle":"2024-08-19T05:55:50.762885Z","shell.execute_reply.started":"2024-08-19T05:55:50.727963Z","shell.execute_reply":"2024-08-19T05:55:50.761702Z"},"trusted":true},"execution_count":30,"outputs":[{"execution_count":30,"output_type":"execute_result","data":{"text/plain":"  Country Name Country Code                            Indicator Name  \\\n0        Aruba          ABW  Rural population (% of total population)   \n1  Afghanistan          AFG  Rural population (% of total population)   \n2       Angola          AGO  Rural population (% of total population)   \n3      Albania          ALB  Rural population (% of total population)   \n4      Andorra          AND  Rural population (% of total population)   \n\n   Indicator Code    1960    1961    1962    1963    1964    1965  ...  \\\n0  SP.RUR.TOTL.ZS  49.224  49.239  49.254  49.270  49.285  49.300  ...   \n1  SP.RUR.TOTL.ZS  91.779  91.492  91.195  90.890  90.574  90.250  ...   \n2  SP.RUR.TOTL.ZS  89.565  89.202  88.796  88.376  87.942  87.496  ...   \n3  SP.RUR.TOTL.ZS  69.295  69.057  68.985  68.914  68.842  68.770  ...   \n4  SP.RUR.TOTL.ZS  41.550  39.017  36.538  34.128  31.795  29.555  ...   \n\n     2008    2009    2010    2011    2012    2013    2014    2015    2016  \\\n0  56.217  56.579  56.941  57.302  57.636  57.942  58.221  58.472  58.696   \n1  76.054  75.687  75.311  74.926  74.532  74.129  73.718  73.297  72.868   \n2  61.491  60.701  59.903  59.100  58.301  57.510  56.726  55.950  55.181   \n3  50.009  48.924  47.837  46.753  45.670  44.617  43.591  42.593  41.624   \n4  11.133  11.648  12.183  12.740  13.292  13.835  14.367  14.885  15.388   \n\n     2017  \n0  58.893  \n1  72.430  \n2  54.422  \n3  40.684  \n4  15.873  \n\n[5 rows x 62 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>Country Code</th>\n      <th>Indicator Name</th>\n      <th>Indicator Code</th>\n      <th>1960</th>\n      <th>1961</th>\n      <th>1962</th>\n      <th>1963</th>\n      <th>1964</th>\n      <th>1965</th>\n      <th>...</th>\n      <th>2008</th>\n      <th>2009</th>\n      <th>2010</th>\n      <th>2011</th>\n      <th>2012</th>\n      <th>2013</th>\n      <th>2014</th>\n      <th>2015</th>\n      <th>2016</th>\n      <th>2017</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Aruba</td>\n      <td>ABW</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>49.224</td>\n      <td>49.239</td>\n      <td>49.254</td>\n      <td>49.270</td>\n      <td>49.285</td>\n      <td>49.300</td>\n      <td>...</td>\n      <td>56.217</td>\n      <td>56.579</td>\n      <td>56.941</td>\n      <td>57.302</td>\n      <td>57.636</td>\n      <td>57.942</td>\n      <td>58.221</td>\n      <td>58.472</td>\n      <td>58.696</td>\n      <td>58.893</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>91.779</td>\n      <td>91.492</td>\n      <td>91.195</td>\n      <td>90.890</td>\n      <td>90.574</td>\n      <td>90.250</td>\n      <td>...</td>\n      <td>76.054</td>\n      <td>75.687</td>\n      <td>75.311</td>\n      <td>74.926</td>\n      <td>74.532</td>\n      <td>74.129</td>\n      <td>73.718</td>\n      <td>73.297</td>\n      <td>72.868</td>\n      <td>72.430</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Angola</td>\n      <td>AGO</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>89.565</td>\n      <td>89.202</td>\n      <td>88.796</td>\n      <td>88.376</td>\n      <td>87.942</td>\n      <td>87.496</td>\n      <td>...</td>\n      <td>61.491</td>\n      <td>60.701</td>\n      <td>59.903</td>\n      <td>59.100</td>\n      <td>58.301</td>\n      <td>57.510</td>\n      <td>56.726</td>\n      <td>55.950</td>\n      <td>55.181</td>\n      <td>54.422</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>69.295</td>\n      <td>69.057</td>\n      <td>68.985</td>\n      <td>68.914</td>\n      <td>68.842</td>\n      <td>68.770</td>\n      <td>...</td>\n      <td>50.009</td>\n      <td>48.924</td>\n      <td>47.837</td>\n      <td>46.753</td>\n      <td>45.670</td>\n      <td>44.617</td>\n      <td>43.591</td>\n      <td>42.593</td>\n      <td>41.624</td>\n      <td>40.684</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Andorra</td>\n      <td>AND</td>\n      <td>Rural population (% of total population)</td>\n      <td>SP.RUR.TOTL.ZS</td>\n      <td>41.550</td>\n      <td>39.017</td>\n      <td>36.538</td>\n      <td>34.128</td>\n      <td>31.795</td>\n      <td>29.555</td>\n      <td>...</td>\n      <td>11.133</td>\n      <td>11.648</td>\n      <td>12.183</td>\n      <td>12.740</td>\n      <td>13.292</td>\n      <td>13.835</td>\n      <td>14.367</td>\n      <td>14.885</td>\n      <td>15.388</td>\n      <td>15.873</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 62 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"## Cleaning Data\nEvery data set might have its own issues whether that involves missing values, duplicated entries, data entry mistakes, etc. In this notebook, I'll do some data cleaning on the World Bank projects and World Bank indicators data sets.","metadata":{}},{"cell_type":"code","source":"df_indicator = pd.read_csv('../input/worldbank-dataset/populationData.csv', skiprows=4)\ndf_indicator.drop(['Unnamed: 62'], axis=1, inplace=True)\n\n# read in the projects data set with all columns type string\ndf_projects = pd.read_csv('../input/worldbank-dataset/projects_data.csv', dtype=str)\ndf_projects.drop(['Unnamed: 56'], axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:50.764324Z","iopub.execute_input":"2024-08-19T05:55:50.764656Z","iopub.status.idle":"2024-08-19T05:55:51.375630Z","shell.execute_reply.started":"2024-08-19T05:55:50.764627Z","shell.execute_reply":"2024-08-19T05:55:51.374640Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"markdown","source":"Dropping Duplicates\n","metadata":{}},{"cell_type":"code","source":"df_indicator[['Country Name', 'Country Code']].drop_duplicates()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:51.376876Z","iopub.execute_input":"2024-08-19T05:55:51.377197Z","iopub.status.idle":"2024-08-19T05:55:51.397740Z","shell.execute_reply.started":"2024-08-19T05:55:51.377167Z","shell.execute_reply":"2024-08-19T05:55:51.396448Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"     Country Name Country Code\n0           Aruba          ABW\n1     Afghanistan          AFG\n2          Angola          AGO\n3         Albania          ALB\n4         Andorra          AND\n..            ...          ...\n259        Kosovo          XKX\n260   Yemen, Rep.          YEM\n261  South Africa          ZAF\n262        Zambia          ZMB\n263      Zimbabwe          ZWE\n\n[264 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>Country Code</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Aruba</td>\n      <td>ABW</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Angola</td>\n      <td>AGO</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Andorra</td>\n      <td>AND</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>259</th>\n      <td>Kosovo</td>\n      <td>XKX</td>\n    </tr>\n    <tr>\n      <th>260</th>\n      <td>Yemen, Rep.</td>\n      <td>YEM</td>\n    </tr>\n    <tr>\n      <th>261</th>\n      <td>South Africa</td>\n      <td>ZAF</td>\n    </tr>\n    <tr>\n      <th>262</th>\n      <td>Zambia</td>\n      <td>ZMB</td>\n    </tr>\n    <tr>\n      <th>263</th>\n      <td>Zimbabwe</td>\n      <td>ZWE</td>\n    </tr>\n  </tbody>\n</table>\n<p>264 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_projects['countryname'].unique()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:51.399385Z","iopub.execute_input":"2024-08-19T05:55:51.399739Z","iopub.status.idle":"2024-08-19T05:55:51.412569Z","shell.execute_reply.started":"2024-08-19T05:55:51.399708Z","shell.execute_reply":"2024-08-19T05:55:51.411430Z"},"trusted":true},"execution_count":33,"outputs":[{"execution_count":33,"output_type":"execute_result","data":{"text/plain":"array(['World;World',\n       'Democratic Republic of the Congo;Democratic Republic of the Congo',\n       \"People's Republic of Bangladesh;People's Republic of Bangladesh\",\n       'Islamic  Republic of Afghanistan;Islamic  Republic of Afghanistan',\n       'Federal Republic of Nigeria;Federal Republic of Nigeria',\n       'Republic of Tunisia;Republic of Tunisia',\n       'Lebanese Republic;Lebanese Republic',\n       'Democratic Socialist Republic of Sri Lan;Democratic Socialist Republic of Sri Lan',\n       'Nepal;Nepal', 'Kyrgyz Republic;Kyrgyz Republic',\n       'Hashemite Kingdom of Jordan;Hashemite Kingdom of Jordan',\n       'Republic of the Union of Myanmar;Republic of the Union of Myanmar',\n       'Arab Republic of Egypt;Arab Republic of Egypt',\n       'United Republic of Tanzania;United Republic of Tanzania',\n       'Federal Democratic Republic of Ethiopia;Federal Democratic Republic of Ethiopia',\n       'Burkina Faso;Burkina Faso',\n       'Republic of Uzbekistan;Republic of Uzbekistan', 'Romania;Romania',\n       'Republic of Ghana;Republic of Ghana',\n       'Republic of Ecuador;Republic of Ecuador',\n       'Socialist Republic of Vietnam;Socialist Republic of Vietnam',\n       \"People's Republic of China;People's Republic of China\",\n       'Republic of Senegal;Republic of Senegal', 'Grenada;Grenada',\n       'Co-operative Republic of Guyana;Co-operative Republic of Guyana',\n       'Central Africa;Central Africa',\n       'Republic of Indonesia;Republic of Indonesia',\n       'Republic of Kenya;Republic of Kenya',\n       'Kingdom of Cambodia;Kingdom of Cambodia',\n       'Republic of Angola;Republic of Angola',\n       'Republic of India;Republic of India', 'Africa;Africa',\n       'Republic of Zambia;Republic of Zambia',\n       'Republic of Panama;Republic of Panama',\n       'Kingdom of Tonga;Kingdom of Tonga',\n       'Islamic Republic of Pakistan;Islamic Republic of Pakistan',\n       'Republic of Niger;Republic of Niger',\n       'Republic of Uganda;Republic of Uganda',\n       'Republic of Madagascar;Republic of Madagascar',\n       'Plurinational State of Bolivia;Plurinational State of Bolivia',\n       'Kingdom of Morocco;Kingdom of Morocco',\n       'Republic of Djibouti;Republic of Djibouti',\n       'Somali Democratic Republic;Somali Democratic Republic',\n       'Republic of Maldives;Republic of Maldives',\n       'Central African Republic;Central African Republic',\n       'Western Africa;Western Africa',\n       'Republic of Cabo Verde;Republic of Cabo Verde',\n       \"Republic of Cote d'Ivoire;Republic of Cote d'Ivoire\",\n       'Montenegro;Montenegro', 'West Bank and Gaza;West Bank and Gaza',\n       'Republic of Haiti;Republic of Haiti',\n       'Republic of Guinea-Bissau;Republic of Guinea-Bissau',\n       'Samoa;Samoa', 'Republic of Congo;Republic of Congo',\n       'Federated States of Micronesia;Federated States of Micronesia',\n       'Republic of the Marshall Islands;Republic of the Marshall Islands',\n       'Republic of Rwanda;Republic of Rwanda',\n       'Republic of Albania;Republic of Albania',\n       'Republic of Burundi;Republic of Burundi',\n       'Argentine Republic;Argentine Republic',\n       'Pacific Islands;Pacific Islands',\n       'Republic of Turkey;Republic of Turkey',\n       'Democratic Republic of Sao Tome and Prin;Democratic Republic of Sao Tome and Prin',\n       'Republic of The Gambia;Republic of The Gambia',\n       \"Lao People's Democratic Republic;Lao People's Democratic Republic\",\n       'Republic of Liberia;Republic of Liberia',\n       'Republic of Benin;Republic of Benin',\n       'Republic of Mozambique;Republic of Mozambique',\n       'Kingdom of Bhutan;Kingdom of Bhutan',\n       'Republic of Cameroon;Republic of Cameroon',\n       'Republic of Chad;Republic of Chad',\n       'Republic of Guinea;Republic of Guinea',\n       'Republic of Yemen;Republic of Yemen',\n       'Commonwealth of Dominica;Commonwealth of Dominica',\n       'Republic of Palau;Republic of Palau',\n       'Republic of Malawi;Republic of Malawi',\n       'Republic of Serbia;Republic of Serbia',\n       'Republic of Iraq;Republic of Iraq',\n       'Republic of the Philippines;Republic of the Philippines',\n       'Solomon Islands;Solomon Islands',\n       'Republic of Fiji;Republic of Fiji',\n       'United Mexican States;United Mexican States',\n       'Republic of Colombia;Republic of Colombia',\n       'Republic of Peru;Republic of Peru',\n       'Republic of Mali;Republic of Mali',\n       'Islamic Republic of Mauritania;Islamic Republic of Mauritania',\n       'Republic of Nicaragua;Republic of Nicaragua',\n       'Republic of Belarus;Republic of Belarus', 'Jamaica;Jamaica',\n       'Ukraine;Ukraine', 'Republic of Togo;Republic of Togo',\n       'Republic of Guatemala;Republic of Guatemala',\n       'Republic of Sierra Leone;Republic of Sierra Leone',\n       'Republic of Moldova;Republic of Moldova',\n       'Republic of Armenia;Republic of Armenia',\n       'Republic of Costa Rica;Republic of Costa Rica',\n       'Republic of Tajikistan;Republic of Tajikistan',\n       'Latin America;Latin America',\n       'Federative Republic of Brazil;Federative Republic of Brazil',\n       'Bosnia and Herzegovina;Bosnia and Herzegovina',\n       'Republic of Suriname;Republic of Suriname', 'Mongolia;Mongolia',\n       'Oriental Republic of Uruguay;Oriental Republic of Uruguay',\n       'Republic of Kiribati;Republic of Kiribati',\n       'Kingdom of Lesotho;Kingdom of Lesotho', 'Tuvalu;Tuvalu',\n       'Southern Africa;Southern Africa', 'Georgia;Georgia',\n       'Gabonese Republic;Gabonese Republic',\n       'Republic of Chile;Republic of Chile',\n       'Republic of Kosovo;Republic of Kosovo',\n       'Dominican Republic;Dominican Republic',\n       'Organization of Eastern Caribbean States;Organization of Eastern Caribbean States',\n       'Caribbean;Caribbean', 'Republic of Zimbabwe;Republic of Zimbabwe',\n       'Republic of Mauritius;Republic of Mauritius',\n       'The Independent State of Papua New Guine;The Independent State of Papua New Guine',\n       'Republic of Vanuatu;Republic of Vanuatu',\n       'Eastern Africa;Eastern Africa',\n       'St. Vincent and the Grenadines;St. Vincent and the Grenadines',\n       'Republic of Honduras;Republic of Honduras',\n       'Republic of South Sudan;Republic of South Sudan',\n       'Republic of Croatia;Republic of Croatia',\n       'Democratic Republic of Timor-Leste;Democratic Republic of Timor-Leste',\n       'Republic of South Africa;Republic of South Africa',\n       'Republic of Botswana;Republic of Botswana',\n       'Republic of Kazakhstan;Republic of Kazakhstan',\n       'Republic of Azerbaijan;Republic of Azerbaijan',\n       'Kingdom of Swaziland;Kingdom of Swaziland',\n       'Union of the Comoros;Union of the Comoros',\n       'Turkmenistan;Turkmenistan',\n       'Europe and Central Asia;Europe and Central Asia',\n       'South Asia;South Asia',\n       'Macedonia; former Yugoslav Republic of;Macedonia; former Yugoslav Republic of',\n       'St. Lucia;St. Lucia', 'Belize;Belize',\n       'Republic of Namibia;Republic of Namibia',\n       'Republic of the Sudan;Republic of the Sudan',\n       'Republic of Paraguay;Republic of Paraguay',\n       'Western Balkans;Western Balkans',\n       'East Asia and Pacific;East Asia and Pacific',\n       'Republic of Bulgaria;Republic of Bulgaria',\n       'Central Asia;Central Asia',\n       'Republic of Seychelles;Republic of Seychelles',\n       'Kingdom of Thailand;Kingdom of Thailand',\n       'Republic of Poland;Republic of Poland',\n       'Multi-Regional;Multi-Regional',\n       'Republic of El Salvador;Republic of El Salvador',\n       'Caucasus;Caucasus', 'Russian Federation;Russian Federation',\n       'Middle East and North Africa;Middle East and North Africa',\n       'Antigua and Barbuda;Antigua and Barbuda',\n       'Central America;Central America',\n       'Commonwealth of The Bahamas;Commonwealth of The Bahamas',\n       'Republic of Trinidad and Tobago;Republic of Trinidad and Tobago',\n       \"Socialist People's Libyan Arab Jamahiriy;Socialist People's Libyan Arab Jamahiriy\",\n       'Czech Republic;Czech Republic',\n       'Republic of Latvia;Republic of Latvia', 'Mekong;Mekong',\n       'American Samoa;American Samoa',\n       'Syrian Arab Republic;Syrian Arab Republic', 'Asia;Asia',\n       'Andean Countries;Andean Countries', 'Hungary;Hungary',\n       'Republic of Equatorial Guinea;Republic of Equatorial Guinea',\n       \"People's Democratic Republic of Algeria;People's Democratic Republic of Algeria\",\n       'Barbados;Barbados', 'Malaysia;Malaysia',\n       'State of Eritrea;State of Eritrea', 'Mercosur;Mercosur',\n       'Slovak Republic;Slovak Republic',\n       'Republica Bolivariana de Venezuela;Republica Bolivariana de Venezuela',\n       'Islamic Republic of Iran;Islamic Republic of Iran',\n       'Republic of Lithuania;Republic of Lithuania',\n       'St. Kitts and Nevis;St. Kitts and Nevis',\n       'Republic of Korea;Republic of Korea',\n       'Republic of Slovenia;Republic of Slovenia',\n       'Republic of Estonia;Republic of Estonia',\n       'Red Sea and Gulf of Aden;Red Sea and Gulf of Aden',\n       'Aral Sea;Aral Sea', 'Republic of Cyprus;Republic of Cyprus',\n       'Socialist Federal Republic of Yugoslavia;Socialist Federal Republic of Yugoslavia',\n       'Portuguese Republic;Portuguese Republic',\n       'Sultanate of Oman;Sultanate of Oman',\n       'Hellenic Republic;Hellenic Republic',\n       'Kingdom of Spain;Kingdom of Spain', 'Ireland;Ireland',\n       'Republic of Singapore;Republic of Singapore',\n       'State of Israel;State of Israel',\n       'Republic of Finland;Republic of Finland',\n       'Republic of Iceland;Republic of Iceland',\n       'New Zealand;New Zealand', 'Taiwan; China;Taiwan; China',\n       'EU Accession Countries;EU Accession Countries',\n       'Sint Maarten;Sint Maarten', 'Japan;Japan',\n       'Italian Republic;Italian Republic',\n       'Kingdom of Norway;Kingdom of Norway',\n       'Republic of Malta;Republic of Malta',\n       'Kingdom of Denmark;Kingdom of Denmark',\n       'Republic of Austria;Republic of Austria',\n       'Commonwealth of Australia;Commonwealth of Australia',\n       'Kingdom of Belgium;Kingdom of Belgium',\n       'Kingdom of the Netherlands;Kingdom of the Netherlands',\n       'Grand Duchy of Luxembourg;Grand Duchy of Luxembourg',\n       'French Republic;French Republic'], dtype=object)"},"metadata":{}}]},{"cell_type":"code","source":"df_projects['Official Country Name'] = df_projects['countryname'].str.split(';').str.get(0)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:51.413814Z","iopub.execute_input":"2024-08-19T05:55:51.414215Z","iopub.status.idle":"2024-08-19T05:55:51.452506Z","shell.execute_reply.started":"2024-08-19T05:55:51.414184Z","shell.execute_reply":"2024-08-19T05:55:51.451563Z"},"trusted":true},"execution_count":34,"outputs":[]},{"cell_type":"code","source":"# install and import the pycountry library\n!pip install pycountry\nfrom pycountry import countries","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:55:51.453916Z","iopub.execute_input":"2024-08-19T05:55:51.454330Z","iopub.status.idle":"2024-08-19T05:56:08.755150Z","shell.execute_reply.started":"2024-08-19T05:55:51.454291Z","shell.execute_reply":"2024-08-19T05:56:08.753753Z"},"trusted":true},"execution_count":35,"outputs":[{"name":"stdout","text":"Collecting pycountry\n  Downloading pycountry-24.6.1-py3-none-any.whl.metadata (12 kB)\nDownloading pycountry-24.6.1-py3-none-any.whl (6.3 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.3/6.3 MB\u001b[0m \u001b[31m22.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hInstalling collected packages: pycountry\nSuccessfully installed pycountry-24.6.1\n","output_type":"stream"}]},{"cell_type":"code","source":"# Run this code cell to see an example of how the library works\ncountries.get(name='Spain')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:56:08.757632Z","iopub.execute_input":"2024-08-19T05:56:08.758235Z","iopub.status.idle":"2024-08-19T05:56:08.770013Z","shell.execute_reply.started":"2024-08-19T05:56:08.758181Z","shell.execute_reply":"2024-08-19T05:56:08.768857Z"},"trusted":true},"execution_count":36,"outputs":[{"execution_count":36,"output_type":"execute_result","data":{"text/plain":"Country(alpha_2='ES', alpha_3='ESP', flag='🇪🇸', name='Spain', numeric='724', official_name='Kingdom of Spain')"},"metadata":{}}]},{"cell_type":"code","source":"# Run this code cell to see how you can also look up countries without specifying the key\ncountries.lookup('Kingdom of Spain')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:56:08.771665Z","iopub.execute_input":"2024-08-19T05:56:08.772138Z","iopub.status.idle":"2024-08-19T05:56:08.782688Z","shell.execute_reply.started":"2024-08-19T05:56:08.772106Z","shell.execute_reply":"2024-08-19T05:56:08.781520Z"},"trusted":true},"execution_count":37,"outputs":[{"execution_count":37,"output_type":"execute_result","data":{"text/plain":"Country(alpha_2='ES', alpha_3='ESP', flag='🇪🇸', name='Spain', numeric='724', official_name='Kingdom of Spain')"},"metadata":{}}]},{"cell_type":"markdown","source":"The goal is to add the ISO codes to the projects data set. To start, use the pycountry library to make a dictionary mapping the unique countries in 'Official Country Name' to the ISO code.\n\nIterate through the unique countries in df_projects['Official Country Name']. Create a dictionary mapping the 'Country Name' to the alpha_3 ISO abbreviations.\n\nThe dictionary should look like: {'Kingdom of Spain':'ESP'}\n\nIf a country name cannot be found in the pycountry library, add it to a list called country_not_found.","metadata":{}},{"cell_type":"code","source":"# set up the libraries and variables\nfrom collections import defaultdict\ncountry_not_found = [] # stores countries not found in the pycountry library\nproject_country_abbrev_dict = defaultdict(str) # set up an empty dictionary of string values\n\n# iterate through the country names in df_projects. \n# Create a dictionary mapping the country name to the alpha_3 ISO code\nfor country in df_projects['Official Country Name'].drop_duplicates().sort_values():\n    try: \n        # look up the country name in the pycountry library\n        # store the country name as the dictionary key and the ISO-3 code as the value\n        project_country_abbrev_dict[country] = countries.lookup(country).alpha_3\n    except:\n        # If the country name is not in the pycountry library, then print out the country name\n        # And store the results in the country_not_found list\n        print(country, ' not found')\n        country_not_found.append(country)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:56:08.784447Z","iopub.execute_input":"2024-08-19T05:56:08.784859Z","iopub.status.idle":"2024-08-19T05:56:08.804735Z","shell.execute_reply.started":"2024-08-19T05:56:08.784819Z","shell.execute_reply":"2024-08-19T05:56:08.803410Z"},"trusted":true},"execution_count":38,"outputs":[{"name":"stdout","text":"Africa  not found\nAndean Countries  not found\nAral Sea  not found\nAsia  not found\nCaribbean  not found\nCaucasus  not found\nCentral Africa  not found\nCentral America  not found\nCentral Asia  not found\nCo-operative Republic of Guyana  not found\nCommonwealth of Australia  not found\nDemocratic Republic of Sao Tome and Prin  not found\nDemocratic Republic of the Congo  not found\nDemocratic Socialist Republic of Sri Lan  not found\nEU Accession Countries  not found\nEast Asia and Pacific  not found\nEastern Africa  not found\nEurope and Central Asia  not found\nIslamic  Republic of Afghanistan  not found\nKingdom of Swaziland  not found\nLatin America  not found\nMacedonia  not found\nMekong  not found\nMercosur  not found\nMiddle East and North Africa  not found\nMulti-Regional  not found\nOrganization of Eastern Caribbean States  not found\nOriental Republic of Uruguay  not found\nPacific Islands  not found\nRed Sea and Gulf of Aden  not found\nRepublic of Congo  not found\nRepublic of Cote d'Ivoire  not found\nRepublic of Korea  not found\nRepublic of Kosovo  not found\nRepublic of Niger  not found\nRepublic of Rwanda  not found\nRepublic of Togo  not found\nRepublic of Turkey  not found\nRepublic of the Union of Myanmar  not found\nRepublica Bolivariana de Venezuela  not found\nSint Maarten  not found\nSocialist Federal Republic of Yugoslavia  not found\nSocialist People's Libyan Arab Jamahiriy  not found\nSocialist Republic of Vietnam  not found\nSomali Democratic Republic  not found\nSouth Asia  not found\nSouthern Africa  not found\nSt. Kitts and Nevis  not found\nSt. Lucia  not found\nSt. Vincent and the Grenadines  not found\nState of Eritrea  not found\nThe Independent State of Papua New Guine  not found\nWest Bank and Gaza  not found\nWestern Africa  not found\nWestern Balkans  not found\nWorld  not found\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Quite a few country names were not in the pycountry library. Some of these are regions like \"South Asia\" or \"Southern Africa\", so it makes sense that these would not show up in the pycountry library.\n\nPart 3 - Making a Manual Mapping\n\nPerhaps some of these missing df_projects countries are already in the indicators data set. In the next cell, check if any of the countries in the country_not_found list are in the indicator list of countries","metadata":{}},{"cell_type":"code","source":"# Run this cell to iterate through the country_not_found list and check if the country name is in the df_indicator data set\nindicator_countries = df_indicator[['Country Name', 'Country Code']].drop_duplicates().sort_values(by='Country Name')\n\nfor country in country_not_found:\n    if country in indicator_countries['Country Name'].tolist():\n        print(country)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:56:08.806249Z","iopub.execute_input":"2024-08-19T05:56:08.806587Z","iopub.status.idle":"2024-08-19T05:56:08.818850Z","shell.execute_reply.started":"2024-08-19T05:56:08.806551Z","shell.execute_reply":"2024-08-19T05:56:08.817504Z"},"trusted":true},"execution_count":39,"outputs":[{"name":"stdout","text":"South Asia\nSt. Kitts and Nevis\nSt. Lucia\nSt. Vincent and the Grenadines\nWest Bank and Gaza\nWorld\n","output_type":"stream"}]},{"cell_type":"markdown","source":"Unfortunately, there aren't too many country names that match between df_indicator and df_projects. This is where data cleaning becomes especially tedious, but in this case, we've done a lot of the work for you.\n\nWe've manually created a dictionary that maps all of the countries in country_not_found to the ISO-3 alpha codes. You could try to do this programatically using some sophisticated string matching rules. That might be worth your time for a larger data set. But in this case, it's probably faster to type out the dictionary.","metadata":{}},{"cell_type":"code","source":"country_not_found_mapping = {'Co-operative Republic of Guyana': 'GUY',\n             'Commonwealth of Australia':'AUS',\n             'Democratic Republic of Sao Tome and Prin':'STP',\n             'Democratic Republic of the Congo':'COD',\n             'Democratic Socialist Republic of Sri Lan':'LKA',\n             'East Asia and Pacific':'EAS',\n             'Europe and Central Asia': 'ECS',\n             'Islamic  Republic of Afghanistan':'AFG',\n             'Latin America':'LCN',\n              'Caribbean':'LCN',\n             'Macedonia':'MKD',\n             'Middle East and North Africa':'MEA',\n             'Oriental Republic of Uruguay':'URY',\n             'Republic of Congo':'COG',\n             \"Republic of Cote d'Ivoire\":'CIV',\n             'Republic of Korea':'KOR',\n             'Republic of Niger':'NER',\n             'Republic of Kosovo':'XKX',\n             'Republic of Rwanda':'RWA',\n              'Republic of The Gambia':'GMB',\n              'Republic of Togo':'TGO',\n              'Republic of the Union of Myanmar':'MMR',\n              'Republica Bolivariana de Venezuela':'VEN',\n              'Sint Maarten':'SXM',\n              \"Socialist People's Libyan Arab Jamahiriy\":'LBY',\n              'Socialist Republic of Vietnam':'VNM',\n              'Somali Democratic Republic':'SOM',\n              'South Asia':'SAS',\n              'St. Kitts and Nevis':'KNA',\n              'St. Lucia':'LCA',\n              'St. Vincent and the Grenadines':'VCT',\n              'State of Eritrea':'ERI',\n              'The Independent State of Papua New Guine':'PNG',\n              'West Bank and Gaza':'PSE',\n              'World':'WLD'}","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:56:08.820543Z","iopub.execute_input":"2024-08-19T05:56:08.821023Z","iopub.status.idle":"2024-08-19T05:56:08.830949Z","shell.execute_reply.started":"2024-08-19T05:56:08.820979Z","shell.execute_reply":"2024-08-19T05:56:08.829743Z"},"trusted":true},"execution_count":40,"outputs":[]},{"cell_type":"markdown","source":"Next, update the project_country_abbrev_dict variable with these new values","metadata":{}},{"cell_type":"code","source":"# Update the project_country_abbrev_dict with the country_not_found_mapping dictionary\n# HINT: This is relatively straightforward. Python dictionaries have a method called update(), which essentially\n# appends a dictionary to another dictionary\n\nproject_country_abbrev_dict.update(country_not_found_mapping)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:56:08.832600Z","iopub.execute_input":"2024-08-19T05:56:08.833063Z","iopub.status.idle":"2024-08-19T05:56:08.844373Z","shell.execute_reply.started":"2024-08-19T05:56:08.833019Z","shell.execute_reply":"2024-08-19T05:56:08.843220Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"markdown","source":"### Make a 'Country Code' Column\n\nNext, create a 'Country Code' column in the data_projects data frame. Use the project_country_abbrev_dict and df_projects['Country Name'] column to create a new columns called 'Country 'Code'.","metadata":{}},{"cell_type":"code","source":"# Use the project_country_abbrev_dict and the df_projects['Country Name'] column to make a new column\n# of the alpha-3 country codes. This new column should be called 'Country Code'.\n\n# HINT: Use the apply method and a lambda function\n# HINT: The lambda function will use the project_country_abbrev_dict that maps the country name to the ISO code\n# https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.apply.html\n\ndf_projects['Country Code'] = df_projects['Official Country Name'].apply(lambda x: project_country_abbrev_dict[x])","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:56:08.846306Z","iopub.execute_input":"2024-08-19T05:56:08.846756Z","iopub.status.idle":"2024-08-19T05:56:08.864114Z","shell.execute_reply.started":"2024-08-19T05:56:08.846713Z","shell.execute_reply":"2024-08-19T05:56:08.862851Z"},"trusted":true},"execution_count":42,"outputs":[]},{"cell_type":"code","source":"# Run this code cell to see which projects in the df_projects data frame still have no country code abbreviation.\n# In other words, these projects do not have a matching population value in the df_indicator data frame.\ndf_projects[df_projects['Country Code'] == '']","metadata":{"execution":{"iopub.status.busy":"2024-08-19T05:56:08.865479Z","iopub.execute_input":"2024-08-19T05:56:08.865908Z","iopub.status.idle":"2024-08-19T05:56:08.916407Z","shell.execute_reply.started":"2024-08-19T05:56:08.865859Z","shell.execute_reply":"2024-08-19T05:56:08.915206Z"},"trusted":true},"execution_count":43,"outputs":[{"execution_count":43,"output_type":"execute_result","data":{"text/plain":"            id               regionname  \\\n31     P166648                   Africa   \n39     P163752                   Africa   \n58     P164728                   Africa   \n69     P161329                   Africa   \n103    P164468    East Asia and Pacific   \n...        ...                      ...   \n18197  P009134  Europe and Central Asia   \n18215  P008873  Europe and Central Asia   \n18221  P008872  Europe and Central Asia   \n18222  P008874  Europe and Central Asia   \n18228  P009133  Europe and Central Asia   \n\n                                             countryname prodline  \\\n31                         Central Africa;Central Africa       RE   \n39                                         Africa;Africa       PE   \n58                                         Africa;Africa       PE   \n69                         Western Africa;Western Africa       PE   \n103                      Pacific Islands;Pacific Islands       PE   \n...                                                  ...      ...   \n18197  Socialist Federal Republic of Yugoslavia;Socia...       PE   \n18215              Republic of Turkey;Republic of Turkey       PE   \n18221              Republic of Turkey;Republic of Turkey       PE   \n18222              Republic of Turkey;Republic of Turkey       PE   \n18228  Socialist Federal Republic of Yugoslavia;Socia...       PE   \n\n                       lendinginstr lendinginstrtype envassesmentcategorycode  \\\n31     Investment Project Financing               IN                        B   \n39     Investment Project Financing               IN                        A   \n58     Investment Project Financing               IN                      NaN   \n69     Investment Project Financing               IN                        B   \n103    Investment Project Financing               IN                      NaN   \n...                             ...              ...                      ...   \n18197    Structural Adjustment Loan               AD                      NaN   \n18215   Financial Intermediary Loan               IN                      NaN   \n18221      Specific Investment Loan               IN                      NaN   \n18222      Specific Investment Loan               IN                      NaN   \n18228      Specific Investment Loan               IN                      NaN   \n\n      supplementprojectflg productlinetype projectstatusdisplay  ...  \\\n31                       N               L               Active  ...   \n39                       N               L               Active  ...   \n58                       Y               L               Active  ...   \n69                       N               L               Active  ...   \n103                      Y               L               Active  ...   \n...                    ...             ...                  ...  ...   \n18197                    N               L               Closed  ...   \n18215                    N               L               Closed  ...   \n18221                    N               L               Closed  ...   \n18222                    N               L               Closed  ...   \n18228                    N               L               Closed  ...   \n\n      mjtheme4name mjtheme5name  \\\n31             NaN          NaN   \n39             NaN          NaN   \n58             NaN          NaN   \n69             NaN          NaN   \n103            NaN          NaN   \n...            ...          ...   \n18197          NaN          NaN   \n18215          NaN          NaN   \n18221          NaN          NaN   \n18222          NaN          NaN   \n18228          NaN          NaN   \n\n                                                location  \\\n31                                                   NaN   \n39                                                   NaN   \n58                                                   NaN   \n69                                                   NaN   \n103    0002134431!$!Republic of Vanuatu!$!-16!$!167!$...   \n...                                                  ...   \n18197                                                NaN   \n18215                                                NaN   \n18221                                                NaN   \n18222                                                NaN   \n18228                                                NaN   \n\n                    GeoLocID                     GeoLocName       Latitude  \\\n31                       NaN                            NaN            NaN   \n39                       NaN                            NaN            NaN   \n58                       NaN                            NaN            NaN   \n69                       NaN                            NaN            NaN   \n103    0002134431;0002135171  Republic of Vanuatu;Port-Vila  -16;-17.73381   \n...                      ...                            ...            ...   \n18197                    NaN                            NaN            NaN   \n18215                    NaN                            NaN            NaN   \n18221                    NaN                            NaN            NaN   \n18222                    NaN                            NaN            NaN   \n18228                    NaN                            NaN            NaN   \n\n           Longitude Country                     Official Country Name  \\\n31               NaN     NaN                            Central Africa   \n39               NaN     NaN                                    Africa   \n58               NaN     NaN                                    Africa   \n69               NaN     NaN                            Western Africa   \n103    167;168.32188   VU;VU                           Pacific Islands   \n...              ...     ...                                       ...   \n18197            NaN     NaN  Socialist Federal Republic of Yugoslavia   \n18215            NaN     NaN                        Republic of Turkey   \n18221            NaN     NaN                        Republic of Turkey   \n18222            NaN     NaN                        Republic of Turkey   \n18228            NaN     NaN  Socialist Federal Republic of Yugoslavia   \n\n      Country Code  \n31                  \n39                  \n58                  \n69                  \n103                 \n...            ...  \n18197               \n18215               \n18221               \n18222               \n18228               \n\n[829 rows x 58 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>regionname</th>\n      <th>countryname</th>\n      <th>prodline</th>\n      <th>lendinginstr</th>\n      <th>lendinginstrtype</th>\n      <th>envassesmentcategorycode</th>\n      <th>supplementprojectflg</th>\n      <th>productlinetype</th>\n      <th>projectstatusdisplay</th>\n      <th>...</th>\n      <th>mjtheme4name</th>\n      <th>mjtheme5name</th>\n      <th>location</th>\n      <th>GeoLocID</th>\n      <th>GeoLocName</th>\n      <th>Latitude</th>\n      <th>Longitude</th>\n      <th>Country</th>\n      <th>Official Country Name</th>\n      <th>Country Code</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>31</th>\n      <td>P166648</td>\n      <td>Africa</td>\n      <td>Central Africa;Central Africa</td>\n      <td>RE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>B</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Central Africa</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>P163752</td>\n      <td>Africa</td>\n      <td>Africa;Africa</td>\n      <td>PE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>A</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Africa</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>58</th>\n      <td>P164728</td>\n      <td>Africa</td>\n      <td>Africa;Africa</td>\n      <td>PE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>Y</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Africa</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>69</th>\n      <td>P161329</td>\n      <td>Africa</td>\n      <td>Western Africa;Western Africa</td>\n      <td>PE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>B</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Western Africa</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>103</th>\n      <td>P164468</td>\n      <td>East Asia and Pacific</td>\n      <td>Pacific Islands;Pacific Islands</td>\n      <td>PE</td>\n      <td>Investment Project Financing</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>Y</td>\n      <td>L</td>\n      <td>Active</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>0002134431!$!Republic of Vanuatu!$!-16!$!167!$...</td>\n      <td>0002134431;0002135171</td>\n      <td>Republic of Vanuatu;Port-Vila</td>\n      <td>-16;-17.73381</td>\n      <td>167;168.32188</td>\n      <td>VU;VU</td>\n      <td>Pacific Islands</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>18197</th>\n      <td>P009134</td>\n      <td>Europe and Central Asia</td>\n      <td>Socialist Federal Republic of Yugoslavia;Socia...</td>\n      <td>PE</td>\n      <td>Structural Adjustment Loan</td>\n      <td>AD</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Closed</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Socialist Federal Republic of Yugoslavia</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>18215</th>\n      <td>P008873</td>\n      <td>Europe and Central Asia</td>\n      <td>Republic of Turkey;Republic of Turkey</td>\n      <td>PE</td>\n      <td>Financial Intermediary Loan</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Closed</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Republic of Turkey</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>18221</th>\n      <td>P008872</td>\n      <td>Europe and Central Asia</td>\n      <td>Republic of Turkey;Republic of Turkey</td>\n      <td>PE</td>\n      <td>Specific Investment Loan</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Closed</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Republic of Turkey</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>18222</th>\n      <td>P008874</td>\n      <td>Europe and Central Asia</td>\n      <td>Republic of Turkey;Republic of Turkey</td>\n      <td>PE</td>\n      <td>Specific Investment Loan</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Closed</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Republic of Turkey</td>\n      <td></td>\n    </tr>\n    <tr>\n      <th>18228</th>\n      <td>P009133</td>\n      <td>Europe and Central Asia</td>\n      <td>Socialist Federal Republic of Yugoslavia;Socia...</td>\n      <td>PE</td>\n      <td>Specific Investment Loan</td>\n      <td>IN</td>\n      <td>NaN</td>\n      <td>N</td>\n      <td>L</td>\n      <td>Closed</td>\n      <td>...</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>Socialist Federal Republic of Yugoslavia</td>\n      <td></td>\n    </tr>\n  </tbody>\n</table>\n<p>829 rows × 58 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Now the df_projects dataframe and the df_indicator dataframe have a matching column called 'Country Code'. But these two data frames can't be merged quite yet.\n\nEach project in the df_projects dataframe also has a date associated with it. The idea would be to merge the df_projects dataframe with the df_indicator dataframe so that each project also had a population value associated with it. There are still more data transformations to do in order for that to be possible.","metadata":{}},{"cell_type":"markdown","source":"## Data Types\nWhen reading in a data set, pandas will try to guess the data type of each column like float, integer, datettime, bool, etc. In Pandas, strings are called \"object\" dtypes.\n\nHowever, Pandas does not always get this right. That was the issue with the World Bank projects data. Hence, the dtype was specified as a string:\n\ndf_projects = pd.read_csv('../data/projects_data.csv', dtype=str)\nRun the code cells below to read in the indicator and projects data. Then run the following code cell to see the dtypes of the indicator data frame.","metadata":{}},{"cell_type":"code","source":"import pandas as pd\n\n# read in the population data and drop the final column\ndf_indicator = pd.read_csv('../input/worldbank-dataset/populationData.csv', skiprows=4)\ndf_indicator.drop(['Unnamed: 62'], axis=1, inplace=True)\n\n# read in the projects data set with all columns type string\ndf_projects = pd.read_csv('../input/worldbank-dataset/projects_data.csv', dtype=str)\ndf_projects.drop(['Unnamed: 56'], axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:18.584335Z","iopub.execute_input":"2024-08-19T06:06:18.584776Z","iopub.status.idle":"2024-08-19T06:06:19.235874Z","shell.execute_reply.started":"2024-08-19T06:06:18.584746Z","shell.execute_reply":"2024-08-19T06:06:19.234822Z"},"trusted":true},"execution_count":45,"outputs":[]},{"cell_type":"code","source":"df_indicator.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:23.831665Z","iopub.execute_input":"2024-08-19T06:06:23.832078Z","iopub.status.idle":"2024-08-19T06:06:23.841736Z","shell.execute_reply.started":"2024-08-19T06:06:23.832047Z","shell.execute_reply":"2024-08-19T06:06:23.840653Z"},"trusted":true},"execution_count":46,"outputs":[{"execution_count":46,"output_type":"execute_result","data":{"text/plain":"Country Name       object\nCountry Code       object\nIndicator Name     object\nIndicator Code     object\n1960              float64\n                   ...   \n2013              float64\n2014              float64\n2015              float64\n2016              float64\n2017              float64\nLength: 62, dtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"These results look reasonable. Country Name, Country Code, Indicator Name and Indicator Code were all read in as strings. The year columns, which contain the population data, were read in as floats.\n\nSince the population indicator data was read in correctly, you can run calculations on the data.Next,lets calculate sum the populations of the United States, Canada, and Mexico by year.","metadata":{}},{"cell_type":"code","source":"# Calculate the population sum by year for Canada,\n#       the United States, and Mexico.\n\n# the keepcol variable makes a list of the column names to keep. You can use this if you'd like\nkeepcol = ['Country Name']\nfor i in range(1960, 2018, 1):\n    keepcol.append(str(i))\n\n# In the df_nafta variable, store a data frame that only contains the rows for \n#      Canada, United States, and Mexico.\ndf_nafta = df_indicator[(df_indicator['Country Name'] == 'Canada') | \n             (df_indicator['Country Name'] == 'United States') | \n            (df_indicator['Country Name'] == 'Mexico')].iloc[:,]\n\n\n# Calculate the sum of the values in each column in order to find the total population by year.\n# You can use the keepcol variable if you want to control which columns get outputted\ndf_nafta.sum(axis=0)[keepcol]","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:26.684128Z","iopub.execute_input":"2024-08-19T06:06:26.684570Z","iopub.status.idle":"2024-08-19T06:06:26.702250Z","shell.execute_reply.started":"2024-08-19T06:06:26.684534Z","shell.execute_reply":"2024-08-19T06:06:26.700881Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"Country Name    CanadaMexicoUnited States\n1960                          236754121.0\n1961                          241356126.0\n1962                          245801588.0\n1963                          250145880.0\n1964                          254478272.0\n1965                          258604043.0\n1966                          262619038.0\n1967                          266553812.0\n1968                          270344019.0\n1969                          274128481.0\n1970                          278405861.0\n1971                          283025259.0\n1972                          287367782.0\n1973                          291558995.0\n1974                          295716280.0\n1975                          300054399.0\n1976                          304176763.0\n1977                          308380884.0\n1978                          312660488.0\n1979                          317041689.0\n1980                          321178871.0\n1981                          325358195.0\n1982                          329468533.0\n1983                          333444548.0\n1984                          337307605.0\n1985                          341226707.0\n1986                          345271125.0\n1987                          349342052.0\n1988                          353477919.0\n1989                          357895891.0\n1990                          362771874.0\n1991                          368224194.0\n1992                          373861907.0\n1993                          379352863.0\n1994                          384587053.0\n1995                          389677579.0\n1996                          394753352.0\n1997                          399925939.0\n1998                          404923356.0\n1999                          409839779.0\n2000                          414651784.0\n2001                          419117923.0\n2002                          423342801.0\n2003                          427424386.0\n2004                          431795881.0\n2005                          436300827.0\n2006                          441042795.0\n2007                          445955481.0\n2008                          451001548.0\n2009                          455905328.0\n2010                          460662636.0\n2011                          465077077.0\n2012                          469572124.0\n2013                          473922844.0\n2014                          478379473.0\n2015                          482763301.0\n2016                          487210962.0\n2017                          491590537.0\ndtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"Now, run the code cell below to look at the dtypes for the projects data set. They should all be \"object\" types, ie strings, because that's what was specified in the code when reading in the csv file. As a reminder, this was the code:\n\ndf_projects = pd.read_csv('../data/projects_data.csv', dtype=str)","metadata":{}},{"cell_type":"code","source":"df_projects.dtypes","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:27.927855Z","iopub.execute_input":"2024-08-19T06:06:27.928255Z","iopub.status.idle":"2024-08-19T06:06:27.938175Z","shell.execute_reply.started":"2024-08-19T06:06:27.928224Z","shell.execute_reply":"2024-08-19T06:06:27.937142Z"},"trusted":true},"execution_count":48,"outputs":[{"execution_count":48,"output_type":"execute_result","data":{"text/plain":"id                          object\nregionname                  object\ncountryname                 object\nprodline                    object\nlendinginstr                object\nlendinginstrtype            object\nenvassesmentcategorycode    object\nsupplementprojectflg        object\nproductlinetype             object\nprojectstatusdisplay        object\nstatus                      object\nproject_name                object\nboardapprovaldate           object\nboard_approval_month        object\nclosingdate                 object\nlendprojectcost             object\nibrdcommamt                 object\nidacommamt                  object\ntotalamt                    object\ngrantamt                    object\nborrower                    object\nimpagency                   object\nurl                         object\nprojectdoc                  object\nmajorsector_percent         object\nsector1                     object\nsector2                     object\nsector3                     object\nsector4                     object\nsector5                     object\nsector                      object\nmjsector1                   object\nmjsector2                   object\nmjsector3                   object\nmjsector4                   object\nmjsector5                   object\nmjsector                    object\ntheme1                      object\ntheme2                      object\ntheme3                      object\ntheme4                      object\ntheme5                      object\ntheme                       object\ngoal                        object\nfinancier                   object\nmjtheme1name                object\nmjtheme2name                object\nmjtheme3name                object\nmjtheme4name                object\nmjtheme5name                object\nlocation                    object\nGeoLocID                    object\nGeoLocName                  object\nLatitude                    object\nLongitude                   object\nCountry                     object\ndtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"Many of these columns should be strings, so there's no problem; however, a few columns should be other data types. For example, boardapprovaldate should be a datettime and totalamt should be an integer. You'll learn about datetime formatting in the next part of the lesson. For this exercise, focus on the 'totalamt' and 'lendprojectcost' columns. Run the code cell below to see what that data looks like","metadata":{}},{"cell_type":"code","source":"df_projects[['totalamt', 'lendprojectcost']].head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:29.380602Z","iopub.execute_input":"2024-08-19T06:06:29.381667Z","iopub.status.idle":"2024-08-19T06:06:29.393450Z","shell.execute_reply.started":"2024-08-19T06:06:29.381622Z","shell.execute_reply":"2024-08-19T06:06:29.392358Z"},"trusted":true},"execution_count":49,"outputs":[{"execution_count":49,"output_type":"execute_result","data":{"text/plain":"      totalamt lendprojectcost\n0            0         500,000\n1  200,000,000     200,000,000\n2   58,330,000      50,000,000\n3   20,000,000      50,000,000\n4  100,000,000     100,000,000","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>totalamt</th>\n      <th>lendprojectcost</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>500,000</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>200,000,000</td>\n      <td>200,000,000</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>58,330,000</td>\n      <td>50,000,000</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>20,000,000</td>\n      <td>50,000,000</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>100,000,000</td>\n      <td>100,000,000</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"df_projects['totalamt'].sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:30.667961Z","iopub.execute_input":"2024-08-19T06:06:30.669064Z","iopub.status.idle":"2024-08-19T06:06:30.751302Z","shell.execute_reply.started":"2024-08-19T06:06:30.669025Z","shell.execute_reply":"2024-08-19T06:06:30.749974Z"},"trusted":true},"execution_count":50,"outputs":[{"execution_count":50,"output_type":"execute_result","data":{"text/plain":"'0200,000,00058,330,00020,000,000100,000,000500,000,000350,000,000225,000,000125,000,000329,900,000200,000,000400,000,0000150,000,0000389,000,0000530,000,000350,000,000202,000,000300,000,000500,000,000493,060,000175,000,0000230,000,00080,000,000400,000,000130,000,00030,000,00035,000,0000250,000,000200,000,000400,000,000110,000,000150,000,00074,000,000118,000,000465,000,000050,000,00090,000,000100,000,000130,000,00010,000,000460,600,000100,000,000700,000,00030,000,000280,000,00040,000,000300,000,00090,000,000150,000,000150,000,00043,000,000100,000,00015,000,00015,000,000012,000,00030,000,000100,000,000250,000,000200,000,000150,000,00025,000,000500,000,000122,100,00020,000,00007,390,000000050,000,00075,000,00060,000,00025,000,00015,000,00000300,000,00025,000,00011,000,0009,000,000130,000,000140,000,000100,000,000200,000,00070,000,000140,000,00020,000,000188,000,000200,000,000500,000,00014,200,00040,000,000150,000,000003,550,000600,000,000400,000,0000150,000,0006,000,00012,000,000100,000,000300,000,00041,000,00040,000,00015,000,00075,000,0000220,000,00080,000,000360,000,000220,000,0000150,000,000120,000,00035,000,00011,000,000021,700,000130,000,00048,000,00060,000,00036,000,00041,000,00025,000,000180,000,00090,000,000100,000,000250,000,000100,000,00020,000,00015,000,00045,000,00050,000,0000500,000,00050,000,00025,000,00040,000,00091,540,00025,000,000030,000,000200,000,000050,000,00010,000,00055,000,000190,000,000000025,000,000200,000,0000015,000,00015,000,0000030,000,000200,000,00050,000,00015,000,000450,640,00055,000,000110,000,00050,000,000145,000,000110,000,00031,100,000160,000,00051,000,00050,000,000140,000,00040,000,00030,000,000050,000,00066,000,00050,000,000200,000,000200,000,000027,800,00025,000,00020,000,00080,000,000225,200,00050,000,00060,000,000250,000,00035,000,000210,000,000600,000,00048,000,00010,000,00014,000,000000375,000,00015,000,000060,000,00045,000,00025,000,000420,000,00000026,750,00010,000,000010,000,0000486,000,00015,000,0000000300,000,00000300,000,000210,000,000110,000,000500,000,00034,890,000200,000,0001,800,00015,000,000300,000,00056,000,0000140,000,00020,000,00050,000,000020,000,0000170,000,00000120,000,00000040,000,000200,000,000200,000,00051,900,00035,000,00026,000,00080,000,000200,000,000100,000,0002,800,00093,000,000425,000,000400,000,00025,000,000125,000,000300,000,000510,000,00080,000,000150,000,00015,000,00034,000,000300,000,000300,000,000245,000,000041,900,0000500,000,000300,000,00075,000,000250,000,000200,000,000170,000,00080,000,000080,000,00060,600,00045,000,0000170,000,00000147,700,000125,000,000120,000,0001,150,000,000100,000,0000318,000,000125,000,000130,000,000120,000,00042,000,00010,000,000040,000,000020,000,0005,000,0000031,000,00018,300,000122,380,0008,750,00045,000,00002,000,0000020,000,0000200,000,000118,610,000150,000,00028,000,000120,000,0000300,000,000400,000,0005,000,00046,000,0000000050,000,00050,130,0000160,000,00000015,000,0005,000,000010,000,00060,000,00016,000,0005,000,000150,000,00060,000,000207,600,000150,000,000150,000,0000155,000,0007,000,00010,000,000000114,000,000000200,000,000700,000,000600,000,00060,000,0000150,000,00000200,000,000119,000,00060,000,0000400,000,000200,000,000020,000,000100,000,00050,000,000160,000,00000000060,000,00082,500,00012,000,00015,700,00050,000,000055,000,000500,000,0000000300,000,000150,000,000070,000,00003,000,0000060,000,00070,000,0000100,000,0000050,000,000025,000,00030,000,00020,000,00030,000,00062,000,00050,000,000120,000,000144,900,000345,000,000200,000,00030,000,00060,000,00045,000,00056,000,000020,800,000065,000,0000153,000,0000040,000,00045,700,00030,000,000200,000,00026,500,00012,000,00095,800,000150,000,000250,000,00017,500,00060,000,00047,490,000050,000,00050,000,000150,000,000150,000,00036,000,00048,400,000611,000,00040,000,000033,630,000350,000,00010,000,00010,000,000042,000,00035,000,000137,000,000116,000,00027,000,00086,000,000100,000,00035,000,00020,000,00018,000,00025,000,00020,000,0000500,000,000100,000,00020,300,00060,000,00036,100,000127,700,00099,310,00025,200,00022,000,00020,000,00053,000,00023,000,00012,000,00006,200,000080,000,00080,000,000020,000,00070,000,00049,850,00010,000,000150,000,000072,400,000120,000,00023,300,00059,000,0000100,000,000125,000,00020,000,00038,590,0004,000,00015,000,00016,200,00050,000,000240,000,00025,000,000118,000,00050,000,00039,200,000240,000,000100,000,00072,520,00029,000,00061,620,00010,700,000300,000,0008,300,00081,000,00095,000,00080,000,00017,000,000200,000,00083,000,00015,270,00025,000,00036,000,000350,000,00045,000,00028,000,000155,000,0000097,000,0000100,000,0000026,300,0000600,000,00019,630,000150,000,000200,000,0004,000,000040,000,000236,200,00078,740,00075,000,00080,000,000145,000,00090,000,0000018,000,000200,000,00040,000,00017,000,00050,000,000225,700,00070,000,000150,000,000108,100,00040,000,00073,300,00023,330,00050,000,00060,000,00022,000,00013,330,0000370,700,000200,000,000025,000,0005,000,000035,200,000074,000,000300,000,00059,000,000103,000,00050,000,000000000101,700,00040,000,00020,000,000150,000,00045,000,00060,000,0000100,000,000030,000,00055,000,000375,000,000116,200,00018,000,00000026,000,000300,000,000150,000,00075,000,000356,700,00012,000,00000120,000,000445,000,000150,000,0000120,000,0006,000,00050,000,000010,000,00026,900,00075,000,000325,000,00050,000,0005,000,00010,000,00030,000,00074,000,0000000200,000,00035,000,0005,000,000100,000,000120,000,000185,000,00013,400,0000070,000,0000125,000,000200,000,00080,000,00065,000,00000075,000,00015,000,00029,000,00065,000,000200,000,00065,000,000450,000,0000130,000,00040,700,0000150,000,00000600,000,000100,000,000175,000,00050,000,000100,000,000210,000,000301,600,0000100,000,000050,000,000200,000,000100,000,000100,000,00010,000,000425,000,0000015,000,000096,800,000125,000,000100,000,0000147,000,000145,500,000067,000,000015,000,0000480,000,00050,000,000046,000,000130,000,000200,000,000200,000,000125,000,000100,000,00020,170,00050,000,0000150,000,00050,000,00080,000,000000003,500,00050,000,000000100,000,000250,000,000070,000,000000154,600,00068,000,000000070,000,000300,000,00066,990,000160,000,00040,000,00045,000,000100,000,00093,000,000225,000,000020,000,000200,000,00045,000,00055,000,000250,000,000200,000,00035,000,000150,000,00020,000,00025,000,00020,000,00040,000,000230,000,00045,000,000200,000,000200,000,00014,100,0002,500,0007,500,000055,800,000000000000000100,000,000235,000,000024,000,00080,000,000132,770,00041,500,000100,000,000100,000,000800,000,00001,443,820,0001,000,000,00048,000,00068,000,00045,000,00065,600,000040,000,0009,340,000040,000,0000558,270,00040,000,00075,000,00026,000,00025,000,0005,100,000100,000,000025,000,00050,000,0003,300,00050,000,000800,000,00050,000,000325,000,00062,000,000000020,000,000150,000,00075,000,00000020,000,000225,000,0005,000,0005,950,0005,000,0001,620,000150,000,00090,500,000030,000,00065,000,000125,000,00050,000,0001,900,00040,000,0000250,000,00000071,000,00000030,000,0002,800,00035,000,000070,000,000104,000,00000400,000,000250,000,00095,000,000192,000,000100,000,00020,000,000100,000,000100,000,000038,900,00039,000,0000500,000,000126,700,0000300,000,0000000024,500,000023,500,000010,500,000500,000,0005,000,000100,000,000249,000,0000005,000,00000390,000,0007,500,0005,000,0002,000,0000000003,340,000300,000,00005,000,0000018,000,00015,000,00055,000,00000200,000,00000110,000,00000064,600,000020,100,00060,000,0000100,000,00070,000,0000100,000,00000050,000,000300,000,000150,000,00055,000,00040,000,000200,000,000216,500,000045,000,00020,000,00024,000,00010,000,000150,000,00070,000,00030,000,00016,000,000040,000,0000150,000,00000100,000,000600,000,000070,000,000050,000,00095,000,000023,000,0000200,000,000110,000,000125,000,000050,000,000290,000,000040,000,0000470,000,000150,000,000201,500,00090,000,00030,000,00010,000,0000022,600,0000200,000,000150,000,00063,000,000200,000,000100,000,000500,000,0000420,000,00055,000,00066,700,00050,000,00040,000,000200,000,000120,000,000360,000,0000150,000,00068,000,00040,000,000100,000,00035,000,00055,000,00000310,000,0000977,860,0000500,000,000100,000,00075,000,000100,000,000125,000,00050,000,000125,000,00020,000,000500,000,00010,000,00056,000,000113,000,00020,000,000300,000,000300,000,000100,000,00016,620,000100,000,000175,000,000015,000,00012,000,000400,000,0007,000,0004,000,0000135,000,00020,000,00000200,000,00055,000,000148,000,000111,000,0000122,000,00025,000,000119,000,000020,000,00030,000,0000150,000,000015,000,00060,000,00025,060,000030,000,0000200,000,000020,000,000500,000,0000150,000,0005,000,00010,000,00018,500,00000125,000,000000100,000,000100,000,000150,000,00022,000,000385,000,00030,000,000010,000,00042,200,00080,000,00030,000,00045,000,000500,000,000050,000,000000200,000,00075,000,000000000029,900,000022,500,00040,500,00065,000,00050,000,000130,000,00010,000,0009,000,00000100,000,000150,000,000100,000,0002,880,00090,000,00095,000,00030,000,000010,300,00010,000,00052,390,000140,000,00050,000,000250,000,0007,750,00010,000,000250,000,000010,000,0000053,000,00065,000,000500,000,000042,000,000040,000,00012,000,00040,000,000327,470,000002,000,000420,000,000200,000,00035,000,000150,000,0000070,000,00007,100,0007,250,0000100,000,0000000120,000,00033,000,00070,000,000166,000,00088,000,00000450,000,00080,000,00040,000,000125,000,00030,000,00000001,250,000,0001,250,000,00000100,000,00030,000,0000000200,000,00035,000,0000052,500,000000100,000,000100,000,0000002,000,00028,040,0000300,000,0000000000055,000,000070,000,000500,000,000200,000,0000217,000,000120,000,000200,000,000100,000,000140,000,00034,950,0000300,000,00001,200,000,0001,000,000,0000300,000,000065,000,000120,000,000415,000,0001,500,000,00050,000,000095,000,000050,000,0000050,000,000100,000,00050,000,00055,000,00050,000,000200,000,00050,000,000250,000,000700,000,000030,000,000140,000,00080,000,000150,000,0000500,000,00095,000,000025,000,00012,000,000400,000,00000015,000,0000100,000,000176,710,000225,000,000500,000,000200,000,000010,000,00050,000,00040,890,00060,000,000560,000,00038,000,0001,000,000,00000080,000,00000100,000,00050,000,00015,000,0005,000,000200,000,000250,000,000090,590,0000178,000,000000000000500,000,000050,000,00021,000,00090,950,000700,000,00070,000,0004,000,00025,000,0000100,000,00040,000,0000150,000,000020,000,00079,000,00075,000,000134,300,000250,000,00060,000,00050,000,00040,000,0000100,000,000400,000,000300,000,000600,000,000500,000,0003,000,0000011,000,00050,000,00015,000,000080,000,00000045,000,00075,000,0000500,000,00032,000,0005,100,000000010,000,00000060,000,0000040,000,0001,500,00020,000,000700,000,0000550,000,000050,000,000504,040,0001,000,000,00050,000,000080,000,000200,000,0000040,000,000150,000,0000021,920,000050,000,000200,000,000350,000,000060,000,000150,000,000238,000,00015,000,000077,000,000650,000,000300,000,000400,000,000450,000,0001,800,00010,000,0000200,000,000400,000,0000100,000,0000200,000,00000058,000,00044,680,000200,000,0000165,000,000050,000,00060,000,0000150,000,000100,000,000200,000,00030,000,00026,400,000105,000,00010,000,00012,000,00016,000,000188,000,0003,680,0000013,790,00010,500,0001,500,0001,500,0001,320,0000500,000,00000020,000,000250,000,000100,000,00010,000,00070,000,000052,500,000350,000,000500,000,000121,000,00021,500,00000000135,000,0000176,060,000300,000,00060,000,0003,000,000125,000,000250,000,000010,000,0000124,000,00050,000,00050,000,00040,000,000308,400,000200,000,00000130,000,00035,000,000248,000,00050,000,000200,000,00022,000,000075,000,000103,000,00065,000,00065,000,00012,000,0000015,100,0000250,000,0002,000,000370,000,00012,000,00010,000,0000045,000,00015,000,00015,000,0000100,000,00000059,500,000045,000,00033,000,0000080,000,000500,000,00050,000,00000183,400,00060,000,00037,000,00069,000,000200,000,00075,000,00015,000,000300,000,00045,000,00060,000,00060,000,00000125,000,000100,000,0005,000,000500,000,000100,000,00034,800,0000100,000,00022,000,000102,500,0003,300,00000400,000,00050,000,000200,000,000150,000,00000058,760,000200,000,000300,000,000050,000,000100,000,000250,000,000150,000,000150,000,000200,000,000350,000,000400,000,00025,000,00073,600,00025,000,0006,000,00052,000,00050,000,000100,000,000080,000,00012,000,00040,710,000226,700,000074,990,0001,500,00050,000,000100,000,000173,000,000248,000,0005,000,0000187,000,00006,000,00000200,000,000100,000,00013,500,00020,000,000022,000,0000100,000,000044,000,000243,100,0000071,500,00030,000,00052,000,000075,000,000400,000,00050,000,0000000214,730,000000075,000,000300,000,000200,000,00040,000,000075,500,00040,000,0000100,000,00000045,000,000200,000,00060,000,000500,000,000065,000,000195,000,0000130,000,00000000100,000,00024,000,00050,000,00007,000,000070,000,0000000425,000,00055,000,0000025,000,000080,000,00000450,000,000250,000,000100,000,00050,000,00003,970,000130,000,000330,000,000088,000,0005,500,0006,750,0009,750,0007,000,000075,000,000250,000,00075,000,00050,000,000220,000,000170,200,00045,000,00047,500,00030,000,000138,000,000200,000,000375,000,000300,000,000400,000,0000700,000,000700,000,00000100,000,00075,000,000055,000,00090,000,000035,000,00025,000,000110,000,000070,000,00000250,500,000200,000,0000000070,000,000040,500,0009,000,0005,000,00000040,000,000063,000,0000285,000,000003,000,000050,000,00075,000,00030,000,00020,000,0000025,000,0000100,000,000100,000,000000005,000,00005,000,0000350,000,000350,000,000150,000,0000000075,000,0000100,000,00018,000,00000050,000,0000300,000,0000500,000,000474,000,000400,000,000100,000,00020,000,000600,000,00015,000,0000150,000,000150,000,0000116,000,000007,000,000300,000,0007,000,00000200,000,000150,000,000150,000,000100,000,000500,000,00030,000,000070,980,0007,500,00068,900,000095,550,000060,000,000105,000,0003,000,000000036,240,000501,250,00000030,000,0000000100,000,0000000000500,000,000500,000,000013,800,0000015,000,0000030,000,000400,000,0004,500,00000050,000,0000300,000,00050,000,000500,000,000500,000,000250,000,000020,000,000178,500,00092,100,0009,000,00025,000,00025,000,00015,000,000150,000,00045,000,0000122,000,000100,000,00050,000,000010,000,000076,400,000035,000,000300,000,00030,000,00075,000,00050,000,000400,000,00050,000,00040,000,00046,000,000500,000,000965,800,00070,000,000200,000,00015,000,00000100,000,000063,000,000150,000,0000280,000,00019,800,00035,950,0003,500,0006,500,00016,000,00092,690,000106,960,00057,000,0000050,000,000020,000,00002,000,00000101,500,00032,670,00015,440,000495,300,00050,900,000078,400,000031,000,00023,310,00024,000,000200,000,0000340,000,00050,000,0000050,000,00044,900,000050,000,00035,000,000260,790,000150,000,000107,000,0000000588,400,00025,000,00022,000,00000460,000,000020,000,0004,800,0005,000,00096,550,00026,200,00024,800,00019,400,00019,500,00055,000,000030,000,0000250,000,000250,000,000041,000,00011,890,00010,000,000060,000,00017,800,000133,540,00000000130,000,000178,500,00072,000,00099,000,00032,000,000120,000,00015,790,00014,400,00022,500,00050,000,0000012,000,00050,000,00071,000,00050,000,000050,000,000216,000,0008,200,000300,000,000332,000,00010,200,00035,000,00030,800,0001,034,800,00055,200,000750,000,00080,000,000156,000,00068,000,00080,000,00000050,000,00045,000,000000024,000,0001,006,200,00017,400,0000150,000,000100,000,00020,000,000100,000,0005,600,000250,000,00060,000,00025,500,00010,200,00060,000,000300,000,00035,600,000103,500,0006,400,00025,000,000106,000,0000147,000,0000083,000,0000380,000,000395,000,000600,000,00017,000,000400,000,000243,800,00011,300,0008,970,000206,800,00003,800,000250,000,00040,500,000158,600,000300,000,000000200,000,00000300,000,000030,000,00050,000,00015,000,000015,500,0001,100,000,00045,000,000100,000,000110,000,000102,000,0000250,000,000100,000,000150,000,0005,200,0000000100,000,000104,000,00000000017,000,000030,000,00028,000,0000200,000,000300,000,00000121,200,00010,000,00040,000,00090,000,00090,000,000300,000,000225,000,000200,000,000100,000,00030,000,000338,800,00085,000,000200,000,00000526,500,0000145,000,000203,500,0000140,000,0007,000,00000021,200,000045,000,00003,680,00070,000,000100,000,00052,000,00013,000,00015,900,00073,100,000175,000,000205,000,0000036,000,0000300,000,00015,920,000122,000,000160,000,000030,000,00030,000,000042,000,000250,000,00030,000,00050,000,00032,000,000035,000,00070,000,0009,000,0000165,000,000018,000,00035,000,00020,000,000020,000,00020,000,0000150,000,00011,900,00025,000,00042,300,000024,000,000120,000,00030,000,0008,000,000600,000,00079,100,00030,000,00065,000,00010,000,00000000040,000,0000200,000,00010,000,000047,380,00000479,000,0000153,000,000320,000,00014,000,000126,500,00000048,000,00012,000,0002,000,0000015,000,00005,500,00031,500,0000005,000,00002,000,0002,500,00024,000,0000000019,600,00040,000,0000060,000,00000180,000,0000410,000,000084,000,000210,000,0000500,000,00041,000,000140,000,000200,000,000200,000,0000100,000,0000120,000,000150,000,000100,000,00060,200,000000100,000,00025,000,00050,000,00085,300,000010,000,000900,000080,000,00030,000,000300,000,0000355,000,00040,000,00028,000,00035,000,00040,000,000032,800,00030,000,00070,000,00040,000,000300,750,0000175,000,00039,400,00003,000,00077,000,000250,000,000110,000,000130,000,00020,000,00025,000,0005,200,000100,000,0000000000100,000,00012,000,000500,000,00065,000,000212,500,000014,000,000100,000,000250,000,000100,000,00000125,000,000265,000,000025,000,00012,000,00026,000,000050,000,000006,700,000035,000,000050,000,00003,000,00080,000,000350,000,00000500,000,0000300,000,000400,000,0005,000,000050,000,000130,000,0003,500,000072,000,0006,060,00013,100,00010,000,000500,000,0000160,000,000200,000,000250,000,00097,000,00000040,000,00020,000,0005,000,000000000000000034,500,00000020,000,0002,150,0003,000,00032,000,00075,000,0000300,000,0007,000,000040,000,0000140,000,000005,000,0000060,000,00010,000,000050,000,0000022,000,0000005,000,000600,000,0000050,000,00013,000,0000360,000,00002,000,0000000050,000,000100,000,00012,300,00050,000,0000339,900,00006,400,000015,000,00050,000,00000178,000,00025,000,00020,000,000205,000,00000250,000,00000150,000,0000110,000,0000015,000,0000000325,000,0000010,000,000100,000,000200,000,000099,000,00060,000,000102,900,000585,400,00030,000,000256,400,00060,000,0000047,100,0000220,000,00010,000,000375,000,000300,000,000500,000,000360,000,0000550,000,00019,000,000039,000,000060,000,000015,000,00021,000,000080,000,000150,000,000250,000,000236,000,00020,000,00010,000,000155,000,00050,000,00020,000,00025,000,0001,307,800,00060,000,00000200,000,00016,200,000300,000,000012,500,00020,000,000000110,000,000180,000,000108,000,0000150,000,000800,000,0005,000,00090,000,000010,000,0006,000,000080,000,0000100,000,00014,000,00020,000,0005,500,000100,000,000150,000,00080,000,000100,000,00080,000,00019,000,000060,000,00010,000,0000105,000,00035,000,0000100,000,000050,000,0006,500,00040,000,00000050,000,000030,000,000012,000,000213,000,00070,000,00020,000,000150,000,000030,000,0005,000,00085,000,000100,000,000027,260,0000100,000,000216,000,00050,000,00055,000,00050,000,00004,200,00066,950,0000100,000,00075,000,000100,000,00034,500,0000016,500,00099,900,000255,000,000030,000,000070,000,00010,000,00050,000,000202,500,00026,240,0000100,000,00091,800,0000100,000,00050,000,000100,000,00050,000,000000000000012,000,000030,000,000020,000,0007,000,00025,000,00095,000,0000000150,000,00050,000,00050,000,00050,000,00020,000,0003,000,000200,000,000201,000,000203,200,00020,000,00035,000,000015,000,00075,000,00040,000,000150,000,00021,460,000300,000,000100,000,000100,000,00050,000,00019,500,00070,000,000120,000,000150,000,000150,000,0000100,000,000100,000,0000250,000,000300,000,0003,000,00055,000,00010,000,00090,000,000400,000,000050,000,0002,000,0000000160,000,0000016,500,000093,000,00070,000,000050,000,000100,000,000100,000,00050,000,000100,000,0000007,300,000060,000,00040,000,000130,000,00066,000,000100,000,00000000020,000,000045,000,0000156,000,000037,000,00040,000,00050,000,000000440,000,0000025,000,00080,000,0006,000,0000100,000,0000000201,500,000000000055,000,000070,000,00004,200,00010,000,00000000082,000,00015,000,000150,000,00045,000,00010,000,00030,000,00000100,000,000650,000,000025,000,0004,000,00040,000,0005,000,00050,000,00065,000,000102,000,00018,000,000000500,000,0000000100,000,000266,000,000300,000,000100,000,00050,000,00000120,000,00040,000,00040,000,0001,800,000066,000,00000200,000,000260,000,0005,000,000070,000,00000350,000,000100,000,00030,000,00000030,000,000200,000,00080,000,00020,000,00030,000,000018,000,00050,000,00034,100,00061,700,0000255,000,00025,000,00050,000,00024,000,00025,000,00025,000,00030,000,00000010,000,00000009,000,00036,000,000203,000,000130,000,00024,000,00084,000,000200,000,00040,000,00090,000,00070,000,00035,000,00037,000,000200,000,0000170,000,000415,000,00020,000,000600,000,0000070,000,000302,000,00040,000,0007,000,000450,000,000061,410,00050,000,000155,000,0000150,000,00029,600,000448,900,00040,000,00070,000,000000106,000,00060,000,000100,000,000000300,000,00000000020,000,0000080,000,000300,000,00005,000,0000000150,000,000300,000,000450,000,00085,000,0001,000,00021,000,000125,000,000060,000,00000075,000,00050,000,0000050,000,00050,000,000684,000,000035,000,00095,000,0000250,000,000042,000,0000030,000,00012,000,000000300,000,000060,000,000200,000,000700,000,000201,500,00050,000,00079,200,0000012,000,000135,000,000100,000,00050,000,00040,000,000125,000,00090,000,00015,000,00050,000,00043,000,00000000120,000,00025,000,000100,000,000200,000,000991,400,000000125,000,000100,000,00006,000,0005,000,000100,000,0006,000,000015,800,0001,333,000,0005,000,0005,200,0003,000,00015,000,00000176,000,00090,000,000100,000,0006,000,000017,000,00018,300,000150,000,000100,000,000000200,000,0000130,000,000100,000,0000150,000,00050,000,00010,000,00014,000,000025,000,000120,000,000017,000,00080,000,000105,260,00025,000,00015,000,000120,000,000000275,000,00050,000,00050,000,00060,000,000002,000,000,000000300,000,000080,000,000100,000,00055,600,000300,000,00050,000,00010,000,000500,000,0000011,850,00015,000,00000040,000,00046,000,00030,000,000018,000,000480,000,00061,000,00040,000,00001,068,000,0000000100,000,000200,000,000350,000,0002,000,0000000000000027,000,000150,000,000000100,000,0000050,000,00015,000,000120,000,00008,000,000075,000,000220,000,000020,820,000370,000,00055,100,0004,200,00010,000,000058,000,0000132,000,0000600,000,000180,000,000109,000,00080,000,00030,000,00020,000,00015,000,000050,000,000500,000,000292,000,000100,000,000500,000,00075,000,000300,750,000200,000,000100,000,00030,000,00014,000,00030,000,0000840,000,00010,000,000250,000,00060,000,00040,000,0001,000,0000352,000,000100,000,00070,000,000200,000,000213,000,000110,000,00010,000,0000320,000,00040,000,000300,750,00000026,000,00010,000,000013,000,00050,000,0000100,000,000200,000,0000150,000,000350,000,00000300,750,000080,000,0000100,000,000100,000,00050,000,000166,000,0005,000,00000015,000,00015,000,00010,000,00000240,000,00018,000,00080,000,00011,000,000000070,000,0000350,000,00011,000,00070,280,0000600,000,00024,000,0005,000,0008,600,000100,000,00022,000,00015,980,000250,000,000053,500,00000139,640,000025,000,00015,800,00000000000152,000,000130,000,000026,000,00028,900,000030,000,0000100,000,00021,600,00049,600,00056,800,000000560,600,00030,000,00000150,000,00097,000,000210,000,00035,000,000155,300,00030,000,0005,000,0000100,000,00035,000,00060,000,00022,910,00027,210,00011,850,0000010,200,000018,200,00010,000,00086,000,000050,000,000100,000,00070,000,00060,000,00040,000,0000100,000,0000125,000,000290,000,0000000400,000,000500,000,0009,000,000200,000,00049,000,00070,000,00020,000,00000082,000,00010,000,00013,000,0000134,900,0000060,000,00000029,290,000050,000,000100,000,00000260,000,00018,000,0000000066,000,0005,000,00000000000250,000,000172,000,000000000000070,000,000050,000,000150,000,00030,000,00000500,000,0000100,000,0000085,000,000017,200,0000150,000,000300,000,00030,000,00019,000,00000000000066,920,000023,800,0000030,000,00000175,000,000125,000,0000060,000,00039,000,00040,000,000080,000,000350,000,00040,000,000300,000,0000000000000531,190,00050,000,00050,300,000000107,330,00037,000,0000001,000,000,000043,000,00023,000,0005,000,0000150,000,00000648,000,00032,800,00050,000,00050,000,0000120,000,000200,000,00010,000,000120,000,00036,000,00059,000,00041,900,000084,700,000283,000,00029,900,00063,300,00018,000,00002,000,00030,000,00015,000,00016,000,0006,800,000000030,000,00052,000,00020,920,00030,000,000010,000,00060,000,000112,000,0000042,000,000099,000,000115,000,00092,000,0006,400,00033,000,000500,000,00002,250,00005,600,00011,000,00075,000,0003,200,0003,600,00027,500,00020,150,0005,830,00006,850,00030,000,00001,000,000150,000,000037,000,00020,000,00025,000,000010,000,00024,000,00011,000,0000160,000,0001,114,500,00070,000,00016,000,00010,000,00027,400,00067,700,00033,400,00027,880,00000100,000,00023,800,000120,000,00012,000,00048,000,000000975,000,00021,000,00052,000,0001,000,000,000015,000,000000250,000,000640,000,00039,000,000358,900,00020,700,00042,000,000710,400,000142,080,00057,000,00010,000,000101,300,00015,000,000613,500,00080,000,000200,000,00050,000,000350,000,000200,000,0000000250,000,00050,000,0004,200,00070,000,0007,100,00020,000,0000015,360,0000200,000,0000100,000,00020,000,0002,200,000000000100,000,00038,000,000300,000,00025,000,000025,000,000195,000,0000109,500,0000213,000,000700,000,00000022,000,00043,000,00021,910,000100,000,00000400,000,00012,000,00025,000,0000100,000,00097,800,00070,000,00071,000,000330,000,00080,000,00050,000,00020,000,00090,000,00050,000,00016,000,00050,000,00015,000,00040,000,00050,000,000050,000,000150,000,00078,000,00065,000,000300,000,0004,000,00041,000,00022,000,0000000000100,000,00010,000,0009,000,000100,000,0000000115,000,00065,000,00093,000,00041,000,00054,500,00039,000,0004,000,0007,000,0004,000,00019,100,00010,000,000028,000,00019,000,000200,000,0008,000,000150,000,00030,000,00006,000,000150,000,00050,000,00025,000,00020,000,00000200,000,000175,000,000180,000,000030,000,00070,000,000150,000,00013,000,0005,000,00065,300,000125,000,000000350,000,00030,000,000100,000,00000300,000,000083,800,00028,200,00050,000,00050,000,000000000150,000,00031,000,00016,000,00010,000,0006,000,000175,000,0000025,000,000160,000,000070,000,000115,000,000200,000,00012,000,000300,000,0001,950,00025,000,00060,000,000000136,700,0000205,000,0000110,000,000485,000,00000020,000,000150,000,00015,000,000480,000,00015,000,00025,000,00000010,000,00032,000,000112,650,00055,000,000088,000,0000120,000,00020,000,00001,200,000,00038,000,000104,400,000035,000,00000420,000,00030,000,0000000000000400,000,00028,800,00024,500,000000014,000,00019,500,000050,000,000001,800,00016,000,0000000026,900,00056,600,000100,000,00014,900,000380,500,000215,000,000250,000,0000751,880,00015,000,00050,000,0005,000,0000162,700,00040,000,00015,800,00025,000,0005,000,000007,980,000000000000000461,000,00012,000,00010,000,00041,600,000138,600,00038,000,000400,000,000200,000,0005,500,00019,000,00080,000,00020,000,00001,500,000,0000200,000,00010,000,00040,000,0005,000,00010,000,00085,000,0000250,000,0000330,000,000100,000,0003,000,00070,000,00055,000,00000050,000,00030,000,00025,000,000100,000,00030,000,000100,000,000021,000,00010,000,0005,000,000100,000,00025,000,00000000000024,750,000100,000,00024,000,00050,000,00040,000,000150,000,00010,000,00045,000,000000250,630,00075,000,00009,000,000150,000,000401,000,00000154,000,00020,000,0001,000,000,000600,000,000200,000,00000000078,000,0000000150,000,0000100,000,00074,700,0001,250,000,00060,000,00050,000,000010,000,00045,000,00040,000,000000030,000,00003,000,000013,000,000005,000,0005,000,00029,700,00004,200,000100,000,000015,000,0000000100,000,0006,300,000150,000,00059,120,00012,000,00050,000,00090,000,00011,000,000037,000,00016,000,00011,200,00039,000,00020,000,00015,400,000070,000,00010,000,000300,000,0000000115,000,00023,900,00030,000,000100,000,00028,700,000130,000,000075,000,000020,000,000112,910,00012,700,0008,800,000200,000,00015,000,0000015,000,000000115,800,00000220,000,000057,400,0000090,000,00000220,000,00000018,670,000150,000,000100,000,0000000000000023,000,00010,000,00030,000,00075,000,000326,780,0000050,000,0000035,000,00020,000,000050,000,000000012,700,000015,000,000000025,000,00040,000,000000029,230,0000225,000,000000200,000,000100,000,00060,000,00012,000,000145,600,00050,000,0001,045,000,00050,000,00003,000,000020,000,00014,000,0000350,000,000255,000,000120,000,000000190,000,000430,000,00006,000,00080,000,00040,000,00040,000,00090,000,000070,000,000180,000,0005,500,0008,700,00020,000,000100,000,000012,000,000025,500,00020,000,000180,400,000150,000,000025,000,0000100,000,000015,000,00006,000,000170,000,00025,400,00042,000,00010,000,00075,000,00026,510,00044,700,00020,000,00000115,000,000255,000,0000120,000,000030,000,000100,000,00000040,000,00036,100,00000100,000,0000042,510,00050,000,000220,000,00052,000,00010,000,0001,331,300,000025,000,00075,000,00050,000,0000221,960,00043,000,000175,000,0006,000,00070,000,000700,000,000500,000,0000150,000,00020,000,00007,000,0000150,000,000079,000,0000100,000,0000450,000,0002,900,0000200,000,000220,000,00070,800,000600,000,00030,000,0008,000,00012,000,00054,000,00060,000,000500,000,000035,000,00084,000,00064,150,00070,000,0000450,600,00025,000,0000495,000,00070,500,00010,000,00005,000,00049,000,00055,000,000107,000,000100,000,00010,000,00040,000,0003,000,00043,000,0005,250,00080,000,000300,000,00039,300,0005,310,00000035,000,000070,000,00080,000,0000330,000,0000163,000,000150,000,000100,000,00015,000,00012,000,000270,000,00047,770,00035,000,00022,000,00078,000,00063,660,00050,480,0002,000,000130,000,000241,600,00030,000,0001,000,000,000200,000,000500,000,00000100,000,00088,600,00016,300,000250,000,000067,000,0003,200,00040,000,00000250,000,000100,000,00050,000,00040,000,00018,000,000020,000,000700,000,00012,100,0000010,000,00010,000,0000240,000,00060,000,00022,800,00015,000,00000130,000,00064,500,00060,000,0002,100,00090,000,000257,000,000300,000,00035,000,0003,000,000100,000,0000000000012,000,0000043,000,0004,500,00013,000,00081,500,00025,000,000100,000,000030,000,000117,700,00010,000,000000650,400,000129,150,000000008,000,00003,750,000,000111,000,000065,000,00036,300,0003,250,000150,000,00065,270,000311,800,00030,000,00025,000,00090,000,000461,000,0000000000000000000120,000,00020,000,00030,400,00025,000,000100,000,000115,800,000785,000,00060,000,000149,980,00080,000,00035,000,00050,700,000019,000,000000100,000,00027,800,00025,500,000150,000,000015,000,00012,000,0001,250,000,0000228,000,00050,000,00030,000,0001,300,000,0000000000300,000,00081,700,00079,300,000750,000,00065,000,0000050,000,0009,000,0006,000,00000000030,000,000300,000,00040,000,00013,700,000143,900,00000050,000,00040,000,00015,000,0005,000,0007,000,000250,000,0000000280,000,000500,000,000200,000,00010,000,000229,000,00000000000055,000,00017,000,00010,000,00000012,250,0008,000,00080,000,000000485,000,0000200,000,00020,000,00000020,000,00020,000,00000190,000,0000150,000,000008,000,00020,000,000175,000,00003,000,000296,750,00015,500,000000000000000000000075,000,000035,000,00019,000,00034,000,000170,000,000500,000,000100,000,00040,000,000020,000,000195,450,00025,000,0000105,000,00045,000,0005,000,00025,000,00015,000,00040,000,00065,000,00012,000,00000250,000,00070,000,00030,000,0002,300,0000000190,000,0000105,230,00040,000,00000300,000,000012,000,00050,000,00012,500,000004,000,0000200,000,000020,000,000118,700,00044,000,00010,000,00016,000,000491,000,00050,000,000100,000,0001,503,750,00000114,500,00010,000,00060,000,000300,000,0004,000,000405,000,000100,000,000150,000,000100,000,000150,000,0000150,000,00050,000,000110,000,00030,000,0000030,000,00028,000,000009,000,000217,000,000025,000,0007,200,0008,000,0000000136,400,00025,000,0003,000,00024,000,0000242,660,0000480,000,000150,000,00045,000,000029,900,00015,000,0001,503,750,000075,000,000320,000,000070,000,0007,500,00020,000,000000000000000005,000,00050,000,00026,200,00065,540,000300,000,00077,820,000750,000,000250,000,00065,260,00024,300,000150,000,0001,195,000,000130,000,000001,413,210,0001,000,000,000282,650,0002,000,000,0000030,500,0000400,000,00010,000,000048,000,000075,000,0007,810,00039,500,000100,000,000147,000,0000200,000,0005,000,000015,000,000000005,000,00030,000,0008,000,000085,000,00036,600,00020,000,00000000002,000,00000020,000,000330,000,0000055,000,000130,000,000300,000,000141,220,000300,000,0000023,560,00030,000,000350,000,000030,000,000500,000,00000000422,990,00000000000166,650,000388,000,000211,700,0000005,000,000104,000,0008,100,000000190,000,00010,000,00010,000,00085,000,000060,000,000160,000,000035,000,0000225,000,00055,000,000180,620,0000197,000,00010,000,000300,000,0001,300,240,00050,000,0008,200,00016,000,00060,000,0000100,000,000000200,000,000350,000,000151,000,0005,000,00040,000,00070,360,000100,000,000175,000,000100,000,000300,000,0008,000,00000127,000,000050,000,00028,000,00070,000,000024,000,00005,000,00000180,000,000060,000,000120,000,00060,000,00040,000,00074,680,00089,200,0000225,000,00025,000,000200,000,00095,000,0008,000,00015,000,000400,000,000100,000,00002,000,00075,130,00082,000,000800,000,00090,000,00010,000,0000050,000,00025,000,000190,000,0000840,000,00050,000,00045,000,00015,000,000160,000,000450,000,00030,000,00030,000,00000020,000,000350,000,000250,000,000300,000,00035,000,0004,000,0000105,000,00020,000,000130,000,000100,000,000245,000,00025,000,00000186,000,00080,000,00030,000,000125,000,0000100,000,000500,000,00033,500,000000000007,000,00025,000,000020,220,0006,810,00000100,000,0004,000,000200,000,00025,000,000025,000,00030,600,00080,000,00025,000,00060,000,00065,000,0006,000,00005,000,000540,000,0000200,000,00010,000,0000062,200,00025,000,0003,800,0007,000,00025,000,0000075,000,00015,000,000010,000,00060,000,00090,000,0000202,000,00078,000,000100,000,00002,125,000,000400,000,0008,000,00000500,000,0005,000,000000015,700,00010,000,000044,000,00020,000,00010,030,00080,000,00000044,600,000300,000,00010,000,00064,000,000154,000,000300,000,000115,000,00085,000,00040,000,00000330,000,000130,000,0001,503,760,000400,000,00030,000,00075,000,000064,000,000253,000,0006,000,00080,000,00004,000,000027,500,00000150,000,000150,000,00012,000,00050,000,0008,000,000150,000,000100,000,0005,000,000040,000,00025,000,00020,000,000500,000,00000250,000,00040,000,00030,000,0005,000,00035,000,00000050,000,000132,700,00013,500,00010,000,00070,000,0000270,000,00080,000,00081,000,0005,000,0000000001,300,000,00050,000,0005,000,00090,000,00002,000,000,000100,000,00016,000,00046,000,00071,500,00050,000,00090,000,00000050,000,00025,000,0002,000,0008,000,000015,000,000330,000,00008,000,000025,000,000710,000,00000000400,000,0000235,000,0000600,000,00018,000,00010,000,0008,000,000000030,000,00030,000,00069,700,000450,000,00000000150,000,000110,000,000100,000,0000003,000,000000000000000000000013,950,0000500,000,0001,250,000,0000190,000,000636,500,000450,000,000120,000,00010,000,000103,000,000150,000,000401,000,000330,000,00000500,000,0003,500,000100,000,00050,000,000040,000,00040,000,00008,500,00000122,500,000087,500,00017,240,0000250,000,000200,000,00025,000,00016,200,0009,400,000750,000,000200,000,000200,000,0000050,000,00033,000,00001,900,000000149,000,000120,000,00020,000,000011,000,00020,900,00040,000,00000007,500,00020,000,00000050,000,0000000109,000,0001,010,000,0000059,000,000150,000,00090,000,000000060,000,000350,000,00020,000,00020,000,00010,000,00000130,000,0000000160,000,000030,000,0000200,000,000400,000,00030,000,0000000010,000,000600,000,000000300,750,00040,000,00040,000,0000028,300,000250,000,000112,000,00060,000,000025,000,00024,000,000240,000,00050,000,00090,000,00014,300,00016,700,0000100,000,000300,000,00020,000,000150,000,000100,000,00059,800,00020,800,0005,000,00000065,000,000000015,000,0000050,000,0000035,000,00015,000,00000030,000,00000000000000035,000,00010,000,0000370,000,00030,000,00040,000,00035,000,000004,500,00082,400,00030,000,000521,000,00057,000,0002,500,000130,700,0001,100,000,00030,000,000005,440,000006,600,0006,830,00000035,640,00098,100,00030,000,00015,000,0005,850,0003,000,0000001,560,000020,000,00050,000,00080,000,0004,000,00010,000,0000200,000,000250,000,0002,120,00035,000,0003,000,00050,000,000000035,300,00000005,000,00017,000,000050,000,000150,000,00012,000,0009,300,00040,000,00038,000,00017,500,0005,000,00017,200,0007,000,0001,000,00022,000,000015,000,00050,000,00050,000,0000150,000,000170,000,000300,000,00065,000,00025,000,00035,000,00032,000,000020,000,00050,000,000190,000,0003,000,000400,000,00030,000,00080,000,00010,000,0009,160,00015,000,00011,000,000009,000,000256,700,00030,000,0006,000,00074,500,00010,000,000120,000,00048,600,000200,000,00029,500,00060,000,00000004,000,00020,000,00013,000,00067,960,00020,000,00094,000,00028,000,0006,000,00020,000,0000109,500,0001,500,000150,000,0006,000,00013,150,00015,000,00000022,600,00005,000,0004,400,000010,000,00043,000,00015,000,00007,500,0004,000,00025,000,00020,000,000100,000,00040,000,00015,700,00020,000,0000000000500,000,00030,000,00045,000,0000150,000,0000040,000,00080,000,000175,000,00000000000200,000,00050,000,0000100,000,0000191,000,0007,200,000190,000,00026,700,00022,700,0007,900,000260,000,0000152,440,000600,000,000150,000,000200,000,0005,000,00015,900,00011,500,00042,000,000177,680,000231,190,00030,000,00010,000,000033,000,0000000100,000,0000600,000,00020,000,000232,000,00015,000,00050,000,00025,000,00010,000,00040,000,00010,000,00011,000,00014,000,000105,200,00015,000,0006,000,0001,600,00000200,000,000027,000,00050,000,00050,000,000976,000,0000550,000,000203,000,0000080,000,0006,500,00084,000,0003,000,00009,000,000300,000,00030,000,00025,000,000030,000,0006,000,00020,000,00010,000,00083,450,00040,000,0006,000,00060,000,0000200,000,00050,000,000050,000,0000025,000,000040,000,00007,700,00029,840,00040,000,0000000000550,000,00095,000,0000501,250,00000330,000,000014,000,000308,000,00060,000,000450,000,00031,130,00065,330,00075,000,00011,000,00020,000,00015,000,00009,000,0006,000,0000038,400,000120,000,0001,500,00020,000,00046,400,00060,000,000600,000,00050,000,00012,000,000060,000,0001,860,00000100,000,00017,000,00015,000,00017,000,000300,000,000070,000,00030,000,00000200,000,00024,250,00025,000,0000000044,000,00062,600,00012,940,000042,000,0000020,000,00030,000,0007,400,000037,500,00060,000,00020,000,00075,000,00018,500,00015,370,000015,000,0000021,000,00013,400,00018,900,000117,700,00020,000,000100,000,00025,000,00020,000,00025,000,000072,500,00050,000,000100,000,00030,000,00000032,760,000150,000,000300,000,00020,000,00020,000,000225,000,00012,500,000215,000,00010,000,00041,050,00000027,500,00055,000,00035,000,00004,500,00010,000,00012,000,00000025,000,000105,000,00010,000,000112,000,0001,000,0002,000,000000015,300,00042,600,00050,000,000050,930,000100,000,00060,000,000000430,000,000600,000,00015,000,000200,000,0000075,000,0000018,500,00065,000,000200,510,00018,500,00000020,000,0000000000003,900,000000033,600,0000000015,000,00068,100,00020,000,00003,000,00000000000075,000,000010,000,0000046,650,00040,000,00003,500,00075,000,00080,000,00064,000,000200,000,0000150,200,00035,900,000100,000,00022,500,000102,260,00000400,000,00003,200,000015,000,000000000011,000,000140,000,000024,800,0006,000,00025,300,000030,000,0000000000015,000,000017,000,000019,400,000100,000,000200,000,000100,000,0005,000,00012,000,00040,000,00010,000,000037,000,0005,000,00015,000,00024,000,00036,250,000090,000,00038,800,00000010,000,0000032,000,000120,000,00093,000,00045,000,00015,000,000065,000,000009,000,000086,000,00023,600,00090,000,00060,000,0000155,210,000186,000,000130,000,00015,000,0003,000,00025,000,000000000000010,000,0000200,000,000400,000,0002,500,00040,000,0000322,150,00050,000,00016,000,00068,000,00000270,000,0005,000,00002,000,00000500,000,000000201,000,00080,000,000000173,000,00025,000,00050,000,0003,000,000122,500,000600,000,00000145,000,000100,000,000045,000,000175,000,000100,000,00030,000,00010,000,0009,000,00059,400,00028,000,00043,000,000017,000,00050,000,00020,000,0005,000,00050,000,00012,000,00025,000,00049,370,0008,000,0008,270,0006,000,00010,000,000100,000,00016,000,00033,000,00050,000,00021,000,0003,350,0005,000,00015,000,00000066,700,0000000000063,000,000230,000,00020,000,00030,000,00040,000,00011,700,0008,500,0005,000,00010,000,000020,000,000207,000,000017,000,000200,000,000130,000,000100,000,000100,000,000100,000,00021,140,000000150,000,000020,000,000220,000,00010,000,000280,000,000150,000,000018,500,00015,000,0000000225,000,000100,000,000197,400,00012,100,00015,000,000133,410,000048,030,00015,000,000080,000,00010,000,00020,000,00020,400,000296,700,000100,000,00033,400,00020,000,00080,000,0000200,000,00007,500,00090,000,00010,000,00050,000,000110,000,00015,000,0008,000,00018,000,00020,000,00015,000,000100,000,000000207,700,000350,000,000102,000,00030,000,000135,500,000010,000,0008,000,00008,000,0005,000,00015,600,00050,000,00018,000,0000180,000,000000000000006,000,00003,500,00015,000,0000026,000,000100,000,0000115,000,000125,000,00065,000,00025,000,00037,310,000123,000,0000300,000,000250,000,00020,000,000190,000,000100,000,00042,000,0000269,400,000189,000,0000000010,000,00050,000,0005,000,0001,840,00025,000,000035,000,0000124,000,00025,000,00045,000,000164,500,00010,000,00016,000,000180,000,0000015,000,00068,500,00074,000,00030,000,00010,000,000100,000,00086,000,00083,750,00096,000,000184,000,0008,100,00017,270,00052,800,000150,000,00040,000,00030,000,00029,000,00050,000,00019,300,00039,400,00020,500,000000090,000,000104,800,000045,000,00022,000,00020,000,00011,000,000300,000,00028,000,00014,200,00030,000,00022,500,00022,000,0009,000,00045,000,00080,000,00015,000,000001,450,000147,000,000025,000,00025,000,00060,000,00034,960,0002,000,00032,000,000020,000,000050,000,00092,800,000200,000,0005,000,000126,700,000138,000,000000003,000,00025,000,00010,000,00024,290,000056,000,0005,000,00023,000,00000070,000,00045,650,00030,000,000200,000,000485,000,000037,000,000018,200,00000008,000,000225,000,000175,000,0005,000,0000000000000000250,000,0005,000,000124,700,0000050,000,00003,500,00050,000,000600,000,0006,500,000200,000,0005,000,0005,000,0000020,000,00000000062,300,0000100,000,000154,000,00010,000,000060,000,000180,000,00040,000,000100,000,00030,000,000050,000,000120,000,000019,000,000250,000,0000300,000,0000082,000,00000000030,000,000220,000,00010,000,00015,000,0000025,000,00075,300,000100,000,000030,000,000015,000,0000080,000,00025,000,0000000030,000,000180,000,000300,000,0000000015,000,00025,000,0009,300,000016,500,00000010,000,00040,000,00030,000,00023,500,0000320,000,00020,000,0008,500,000000060,000,000023,000,000000000037,700,000180,000,000010,000,0000000120,000,000012,000,0000030,000,000100,000,00000074,000,00017,000,0000141,830,000360,000,000170,000,000018,000,0006,000,00015,000,00060,000,00060,000,00040,000,000225,000,000154,500,0005,000,000043,000,000200,000,00048,000,00020,000,0000080,000,00035,000,00010,000,00022,500,0005,000,000131,700,00010,000,00040,000,00075,000,00000208,000,00013,000,00020,000,00037,100,0005,000,00066,800,0005,000,0000000200,000,00010,000,0000000000135,000,00000050,000,00075,000,00060,000,00021,600,0004,000,0005,000,000100,000,0000500,000,000110,000,0000120,000,00000100,000,000150,000,000137,500,00014,000,00067,500,00029,200,000200,000,000218,000,0005,000,00040,000,00054,000,0000100,000,000022,000,00015,000,000133,400,00087,300,00000150,000,0007,200,00060,000,00066,000,00020,000,000200,000,0002,000,00029,800,000030,000,00022,900,00030,000,00070,000,000036,000,0000090,000,000500,000,000140,000,00015,000,000111,500,00015,000,00098,000,00012,000,00076,000,000050,000,00058,500,0005,500,00050,000,000008,000,000180,210,00060,000,0008,000,00030,000,000110,000,000000336,000,0000501,250,00070,000,000601,500,000180,200,000037,500,000110,000,00020,000,0000006,250,00015,000,00050,000,000012,410,00090,000,00010,000,000010,000,00031,000,000100,000,000100,000,00060,000,0008,000,00001,000,0007,000,000030,000,00040,000,00020,000,000215,000,00015,000,00050,000,0004,000,00014,000,0009,000,000037,200,00000000200,000,00040,000,00000050,000,00060,000,000000033,570,00050,050,0007,000,00047,700,00015,000,0008,000,00031,500,00010,000,0009,600,00034,400,00000200,000,00050,000,00000020,000,000170,000,00016,000,00000001,300,000005,000,00045,000,00019,000,00000030,000,00029,300,000030,000,00050,000,00065,000,000015,000,000150,000,000120,000,00020,000,00025,000,0000350,000,000030,000,0007,000,000216,000,00025,000,00015,400,00040,000,00010,000,000300,760,00025,000,000070,000,000100,000,000050,000,0005,700,0000080,000,0001,500,000501,260,00035,000,00040,000,00030,000,0005,000,00025,000,00000000106,250,000090,000,00030,140,000259,600,0005,000,0003,000,00004,000,00086,330,0000046,700,0000199,020,000100,000,00025,000,00055,000,0007,000,00088,800,000015,000,00025,000,000400,000,00020,000,00049,000,0000135,000,000200,000,000025,000,00030,000,00035,000,00045,000,00030,600,0000000000000010,000,0003,500,000060,000,00015,000,00095,000,000100,000,00060,000,00025,000,000200,000,00000130,000,0000400,000,000400,000,00040,000,000100,000,000150,000,000180,000,000240,000,00080,000,00060,000,000100,000,00080,000,0000000150,000,00090,000,000125,000,000049,300,00055,000,00044,000,000010,500,000200,000,000100,000,000100,000,00010,000,00030,000,00020,000,0000085,000,00040,000,00012,000,000060,000,000200,510,0000325,000,000100,000,00030,000,000000038,030,00099,400,000020,000,00025,000,00020,000,00015,000,00065,900,00055,000,0004,000,00020,000,00040,000,00010,000,000007,000,00086,400,000007,000,00021,000,0009,800,00030,000,000250,000,000100,000,00050,000,000150,000,00022,000,00006,500,000200,000,000100,000,000500,0000000093,720,000184,900,00019,380,00085,000,00020,000,0008,000,00030,000,00060,000,00086,000,00045,870,00000120,000,00015,000,00035,000,000150,000,000000200,510,00035,000,00084,000,000150,000,00054,350,000057,640,000125,000,000000000025,000,00008,000,000200,000,00011,300,00038,000,000013,000,000100,000,00051,000,000000120,000,000149,750,00080,000,000129,800,00025,000,00030,000,00015,000,00050,000,00040,000,00015,000,00020,000,00047,000,00020,000,00015,000,000100,000,000251,260,00046,400,00030,160,000300,000,0004,800,00025,130,00025,000,000180,000,000100,000,000172,000,000100,000,000200,000,000150,000,0000100,000,000021,000,00018,000,0004,000,00024,000,00028,000,0008,000,00013,000,0002,000,000040,000,000030,000,00050,000,00018,000,00010,570,00027,000,0003,000,00018,100,000000000275,000,000325,000,00000011,300,00064,000,000180,000,000150,000,000106,000,00032,000,00017,500,00004,000,000100,000,0001,000,0008,550,00015,000,00012,500,00038,000,0003,200,0003,000,000087,000,00010,000,0007,000,00010,260,000465,400,000040,000,000030,000,0005,500,000502,520,00007,000,00080,000,000075,380,00070,000,0008,000,00030,000,000150,000,00029,500,0000184,700,0000104,000,00031,730,00002,000,0000150,000,00045,000,0000658,300,00010,000,0005,000,00025,000,0000150,000,000012,500,00025,000,00019,000,000018,200,00028,400,00082,000,0007,750,00015,000,000120,000,000224,000,000400,000,000100,000,00040,000,00086,590,00015,000,00040,000,000250,000,00045,000,0007,700,000048,000,000138,700,0007,200,000305,000,00015,700,00020,000,00010,000,00002,700,00028,000,0000260,000,000150,000,0000060,000,0005,000,000465,000,000032,200,000120,000,0000000200,000,00024,000,000100,000,000300,000,000016,000,00010,000,000011,000,0005,700,0007,500,000130,000,00067,000,00015,000,000066,000,000025,000,0005,000,00017,000,00020,000,00010,000,00050,000,000008,000,00035,000,000130,500,0002,500,00030,000,00045,680,00051,700,000160,000,00070,000,00025,000,000100,000,000015,000,000007,000,000080,000,000130,000,00039,000,0000020,000,00014,000,00040,200,00025,000,000123,000,00014,000,000104,000,000105,000,000100,000,000007,000,0000000125,000,00020,000,00075,000,00025,000,000100,000,000015,000,000050,700,000055,000,00020,000,00011,500,000100,000,0000080,000,0000027,000,00084,300,00025,000,0000006,470,00000300,000,000012,250,00061,000,00012,000,0000000000021,000,00060,000,00076,700,000300,000,00024,000,000112,640,000620,000,00080,000,0000120,000,0004,000,00059,500,0000110,830,000050,260,00045,000,00015,000,00015,000,00015,000,00075,000,000154,000,000120,000,000139,990,00040,000,0008,100,00030,000,00035,000,00000010,000,00030,000,000100,000,000100,000,000200,000,000004,800,000102,900,0000000025,000,000150,000,000120,000,00070,000,00000063,580,00052,000,000130,000,000050,000,00000220,000,00020,000,00010,000,000225,000,00050,000,000010,000,00003,000,0007,770,0000200,000,0002,000,0000125,000,0004,960,000220,000,00014,100,000065,000,0003,500,00000110,000,00018,000,0005,000,000021,510,00031,500,00000050,000,00000100,000,00020,000,00065,000,000399,500,000010,000,000160,900,00053,000,000000150,000,00023,000,000018,000,000172,000,00025,000,00040,000,00004,980,000029,900,00050,000,00040,000,00020,000,0000394,020,0000015,000,00070,000,0006,460,0000107,600,000150,000,000300,000,000100,000,00060,000,00030,300,000502,520,000104,980,0000000015,000,0005,000,00061,000,0000060,000,00025,000,00035,000,0005,000,00028,150,000150,000,000080,000,000200,000,00026,000,00000103,000,00035,000,000050,000,000125,000,00007,800,0008,800,00080,000,000125,000,00022,000,000020,000,00012,120,00039,500,00020,000,00068,000,000050,000,000000045,000,0005,000,00050,000,00060,000,0006,400,0007,000,00015,600,00024,080,000100,000,000300,000,00035,000,00036,000,00013,130,00030,000,000100,000,00022,650,0000190,00036,860,000500,000,0006,200,00075,500,00025,000,000200,000,00036,000,00000200,000,0008,000,00020,000,0003,600,00024,000,00020,000,00058,800,000200,000,00090,000,000100,000,00020,000,000105,000,00020,000,0007,470,00064,700,0000200,000,00060,000,000020,000,00040,000,00059,800,000207,000,00025,500,0001,000,000,0005,800,00040,000,00051,000,000572,200,00015,000,00034,000,000006,900,00012,000,00060,000,00051,000,00034,000,000120,000,00020,000,00010,800,0000150,000,000250,000,0005,150,0006,750,00010,000,00030,000,00019,000,0000108,000,000250,000,0007,000,000150,000,00005,000,000100,000,00043,800,000128,000,000038,000,00015,000,000015,000,00015,500,0007,000,00015,000,000047,540,00020,000,00025,300,00000279,000,00056,200,000080,000,00055,000,00030,000,000100,000,00002,500,00061,140,000037,100,00055,000,0000060,610,000150,000,00069,620,000030,000,000100,000,0006,500,00007,000,0000010,000,00009,800,00030,000,00060,000,000100,000,00040,000,0000100,000,00025,120,00000015,000,0001,750,00010,150,00023,000,000062,000,0004,500,0005,000,00065,600,0000222,470,00018,000,00013,000,000122,000,00000045,000,000500,000,00019,000,000000135,800,00000050,000,00027,000,00039,500,0000335,000,000157,800,000200,000,00051,000,00010,000,000126,000,000102,000,0009,000,00010,000,000202,030,000032,000,00091,000,00023,500,000045,000,00033,000,00051,400,00020,000,00020,000,00009,000,00021,000,00025,000,000048,700,0004,000,00013,300,00089,000,00075,500,00078,000,000200,000,00050,000,000130,340,00012,000,000100,000,0000200,000,00060,000,00045,000,00015,000,00070,000,00025,000,00040,000,00096,390,00000150,000,000505,050,000014,800,0000120,000,00007,300,000100,000,0000012,500,000030,000,000100,000,000220,000,000000133,000,00026,000,0003,000,00000070,000,00019,000,0000303,100,00003,000,000012,800,000040,000,00031,000,00095,000,000200,000,000010,710,000225,260,000083,410,00065,000,00032,000,00030,000,0004,000,00014,000,000100,000,00040,000,0005,000,000015,100,0000015,000,00020,000,000025,000,00045,000,00021,300,000303,030,00060,000,0000250,000,00084,290,000150,000,000238,000,000010,000,0005,000,00004,000,000150,000,000035,000,0000200,000,00030,000,000150,000,00042,000,000100,000,0000030,000,00070,000,000016,600,000150,000,0000178,600,0000014,600,00035,650,00000010,000,0000750,000,00065,000,00028,060,0002,700,00000240,000,000005,000,00022,000,0000000007,000,000214,000,00012,380,00062,920,00020,000,0000200,000,00066,270,000100,000,000150,000,0000000005,300,000181,000,00031,000,00021,900,00040,260,00015,000,00000080,000,0005,500,00058,400,00070,000,00020,510,000024,000,00055,000,0000120,000,00035,000,000010,940,00004,000,00021,000,00030,000,00050,000,0000018,000,000156,500,00018,000,000070,000,00021,000,0000005,000,00060,000,0000390,00020,000,0008,000,000249,800,000100,000,0005,000,000530,00013,000,00070,000,000141,000,00030,000,00041,000,00039,200,0008,400,000195,130,0009,900,0009,900,000014,820,000100,000,000250,000,000125,000,00012,120,00015,000,0007,500,0000300,000,0009,120,00050,000,00015,000,00060,000,00037,000,00045,000,000190,000,000060,000,00001,500,00025,000,000125,000,00035,000,00010,000,00035,000,00034,200,000126,800,000348,000,000200,000,00020,000,0005,000,00082,000,00030,000,000404,040,000105,600,000505,060,0003,750,00040,300,00026,800,0005,450,0007,000,00007,210,0005,500,00080,000,000060,000,00003,310,00045,000,00040,000,00034,150,00037,110,00054,030,00020,000,00059,600,000180,000,00024,000,0003,630,00052,500,00012,000,000132,000,000125,000,000050,000,00050,000,00061,500,00032,800,00056,580,000018,000,0000500,000,00075,600,00054,330,00017,100,00025,260,00020,000,00012,000,000150,000,00046,000,00012,000,00030,000,00030,000,00020,000,00020,000,000161,100,00020,000,0007,780,00012,000,00015,000,00004,500,00011,500,00032,000,00040,390,000120,000,0006,000,000138,760,00046,700,00039,800,000060,000,0005,000,0002,750,00000028,700,00095,000,00035,000,00046,000,000112,560,0000150,000,00022,000,000140,000,00019,900,0000080,000,0000031,500,0000101,020,00014,200,000092,100,00020,000,000151,500,000025,000,000150,000,00000030,500,00055,000,00060,000,00016,600,00033,000,000012,000,00035,000,000145,000,00040,000,000042,340,000300,000,00030,000,00018,240,00025,600,00040,000,000005,000,0000100,000,00015,000,00040,000,0000108,000,0005,000,000012,350,000023,700,00030,700,000505,050,00020,000,0000020,000,00020,000,000150,000,000150,030,00000089,600,000015,000,0000600,000,00023,400,0004,050,00009,500,000042,000,000200,000,0004,000,000025,000,000488,000,00060,000,00027,000,00016,000,000050,000,00012,000,00012,600,0004,760,0004,480,00028,300,0000020,300,00075,000,0000012,920,000015,000,00011,000,00033,600,00078,390,00085,000,00000050,000,0000100,000,00050,000,000050,000,000250,000,00080,000,00050,000,000034,000,000010,000,000100,000,000039,800,00075,000,00015,000,0000075,000,00054,800,0000000132,700,00007,500,0004,100,000250,000,000100,000,000100,000,000300,000,00018,600,000101,000,00015,000,00020,210,00042,000,000150,000,00012,000,00000120,000,00050,000,00025,700,00054,000,00005,000,0000151,520,000088,450,0003,200,00015,000,000151,520,000454,000,000202,020,00020,300,00015,700,000130,000,00018,200,000155,000,00019,410,00014,500,0002,300,0005,000,0006,040,000100,000,00026,200,000150,000,0000021,390,00027,300,00011,500,00056,350,0000300,000,000400,000,000108,000,000035,000,000027,000,00020,000,00026,500,000100,000,00004,500,00090,000,0000120,000,00064,600,0005,000,00002,660,00005,500,00022,500,00017,000,00036,000,00010,000,0005,000,000225,000,00017,000,0005,500,000190,980,0000150,000,0005,000,00019,340,0008,500,0005,510,0001,480,00015,000,00018,000,00010,500,00030,000,00020,000,00025,390,00029,900,00075,000,00005,000,000542,000,00032,600,00017,000,0009,450,000120,000,000303,040,0005,000,00052,000,00065,000,000450,000,000160,000,000404,040,000005,000,000454,550,00012,000,000018,730,0005,000,000200,000,000100,000,000500,000,000040,000,000231,000,000110,000,000127,010,000100,000,00042,000,00033,000,00015,000,00008,300,000100,000,000015,000,0005,000,00043,530,0006,760,00085,000,00044,000,000200,000,0005,850,0005,000,00005,910,00000085,000,00013,800,000000060,000,0006,700,000000027,100,00040,000,000040,000,000442,800,0004,500,00010,000,0000062,800,00042,000,00098,900,0002,030,00025,000,0004,800,00005,000,00050,000,000093,900,00077,000,0001,350,000,00038,200,0001,000,00015,000,00010,000,000015,000,00027,530,00030,000,000030,000,00022,000,0009,000,00026,000,00026,000,00015,000,0005,000,00013,860,000300,000,0009,000,000104,000,00040,000,00040,000,00075,750,00038,720,00068,000,000100,000,00029,750,00060,000,00014,700,000255,000,000250,000,000120,900,00060,000,000060,000,0003,200,0003,200,0003,800,0004,400,0006,300,000016,000,0005,600,00010,000,000031,100,00024,300,00023,540,000140,000,000149,200,00023,230,000580,00007,000,00030,000,0000120,000,000160,000,00020,800,00070,000,00032,600,00032,000,0000209,000,00018,000,000012,000,000023,000,00005,000,00036,140,00019,840,000252,500,00010,000,00020,000,0002,600,00075,000,000017,360,000151,600,00040,000,000400,000,000115,000,00020,000,00017,000,000049,150,000050,000,00015,000,0005,000,00015,000,0000043,500,000200,000,00022,560,00070,000,000450,00015,000,00085,000,000202,000,000142,600,00050,210,0001,810,000005,000,000014,900,00003,300,00023,000,00070,000,00005,000,00005,000,0005,000,00045,200,00000110,000,00040,000,00070,000,00049,200,000300,000,00030,000,000183,000,000150,000,00000005,000,0005,000,00000250,000,0006,000,0000000500,000,000040,000,00014,500,000024,860,0000023,800,000400,000,0002,700,00065,000,00017,100,00018,400,00045,000,0008,720,00025,000,0000177,300,000100,000,0006,000,0008,300,000010,500,00015,000,000100,000,00037,670,00018,500,0005,000,00050,000,000110,000,000220,000,00016,500,00015,000,0005,000,00070,000,00050,000,000162,000,00033,600,000330,000,0000600,000,0001,100,000,00024,560,000017,000,0005,000,00090,300,00022,000,00025,200,00062,000,000064,520,00006,300,00003,500,000000027,000,00050,000,000025,000,00035,000,00015,150,000021,330,00029,270,00050,000,0000103,200,00030,300,00037,500,00030,100,00022,500,000054,350,00035,000,000102,780,00020,000,00019,800,00015,000,00020,000,000320,200,0002,500,0000030,000,00074,400,000150,000,000100,000,00060,000,0005,000,000120,000,000350,000,0000100,400,000000589,000,000505,060,0000050,000,00050,000,000100,000,00089,050,00030,300,000100,000,00010,000,00007,800,0009,900,00025,000,000114,290,00044,000,0005,000,00017,450,00040,000,00017,000,00005,000,0005,400,00021,350,000350,000,0004,150,00010,000,00080,000,00015,000,00045,000,000250,000,00024,250,00022,600,00064,500,000200,000,000150,000,000000150,000,00032,570,000065,000,0004,000,000101,040,00016,690,000050,000,000360,000,000404,040,0008,880,00062,160,000050,000,00060,000,00000007,200,00015,000,0000450,000,00030,000,00027,370,00048,000,00060,000,0000003,000,000110,000,00040,800,00037,600,00004,900,00041,500,00005,000,00013,500,0007,500,0007,500,00015,000,00015,000,00015,000,00020,000,00025,000,0001,400,00018,000,00030,600,00080,000,00048,000,000150,000,00028,600,00085,000,00028,700,000100,000,00025,000,00030,000,000035,470,000105,500,0005,000,00028,200,00034,000,00010,000,0006,000,000070,000,000166,340,00025,900,000022,000,0009,630,00035,000,0000220,300,000125,000,0008,000,0002,000,0000011,400,00053,300,000018,000,000011,000,0003,100,00045,000,000075,000,00020,000,0003,500,0005,000,00002,600,000060,000,00023,700,000005,000,000770,0003,200,00040,000,0005,000,0000180,000,000151,000,000757,580,00047,500,00047,900,00015,000,00050,000,00000035,000,00025,000,000025,400,00018,300,00030,400,00012,200,00015,300,00030,400,00025,400,000500,00020,000,000122,500,00055,100,000777,780,000250,000,00048,200,0007,000,0003,000,00045,000,00030,000,000220,000,00069,600,00090,000,00060,000,00010,000,000100,000,00074,000,000040,000,000050,310,00020,300,000180,000,00060,000,000218,000,000505,060,000010,000,00038,500,00050,000,00040,000,000056,990,000404,050,0003,550,0000230,000,000170,600,000066,700,000202,100,00075,000,000008,000,00090,000,000303,000,0002,100,00027,000,00065,500,00066,500,000110,100,0007,500,0008,100,0002,500,000067,000,00013,930,00072,000,00009,400,00056,000,00032,000,000010,070,000020,000,000004,790,0003,430,0005,000,0005,000,00035,000,00070,700,000100,000,00011,400,0002,220,0005,000,00035,000,000200,000,00019,000,00059,700,00050,000,00064,900,00035,000,00021,300,00049,000,000381,000,00013,000,00014,390,000048,500,00022,000,00010,000,00060,000,00000067,000,00036,160,000150,000,0008,000,0005,000,00040,000,0004,710,00098,500,0009,300,00020,100,00018,100,0000033,000,00012,000,0005,000,0002,200,0001,200,0002,100,0002,000,00021,000,00040,000,000140,000,000115,100,000150,000,000130,000,00099,000,000028,900,000210,000,0009,000,0005,000,0005,000,000042,000,000103,000,00080,000,00063,300,00020,000,00010,000,000470,0005,000,00015,000,00083,460,000151,520,0000349,000,00018,200,000037,700,000015,000,0003,070,000190,000,00050,000,000200,000,00038,000,00022,000,00077,400,0005,300,000006,500,00017,100,0009,900,00090,000,00005,000,000516,000,00040,000,0005,130,00039,500,00035,000,00020,000,00023,700,0005,770,0009,420,00020,000,00053,400,00032,630,00062,000,000027,000,00023,630,00011,000,0004,820,0004,800,00000065,000,00010,350,00010,000,00060,900,0007,000,0006,500,0005,600,000050,000,000150,000,0008,000,00010,820,00020,900,000040,000,00092,000,00070,000,00064,700,0007,400,00060,000,00075,000,00030,000,00010,600,0005,000,000759,600,00087,000,000145,000,000150,000,00025,000,00045,000,00035,360,00038,200,00029,000,0008,000,00020,000,0000020,000,0007,600,00055,000,000100,000,00012,000,00005,000,00041,510,0000100,480,000150,000,000110,000,00035,000,000251,270,000142,600,000030,000,00032,000,00030,000,0005,000,0000111,000,00050,000,00020,000,000120,000,000004,750,0004,600,0000056,570,00010,830,000505,060,000505,060,00028,000,000200,000,000021,200,00028,900,0009,000,000225,000,0008,500,00025,000,00017,600,00040,410,00005,400,000030,000,00080,900,00034,700,00050,000,00010,000,00001,830,00030,000,000150,000,000100,000,0005,000,00001,910,0005,050,0000011,000,000026,000,00018,290,00028,500,00017,500,0003,800,00020,900,0009,500,00033,000,000136,000,00030,300,0004,000,0001,100,00093,500,000320,000,00030,000,00022,500,00025,000,00019,000,00010,800,00011,600,0000140,000,00004,670,0000182,400,000103,900,00020,000,00080,000,000055,000,00045,900,000606,070,000505,060,0002,000,000015,000,000025,260,00013,650,000100,000,00040,000,00027,000,00027,500,000041,200,00025,000,00080,900,00021,240,00030,400,00034,040,00010,900,0002,500,000004,900,00031,800,00054,500,0009,600,0003,000,00015,900,000506,000,000140,0004,800,000505,000,000252,530,00010,150,000100,000,00052,500,000400,000,00020,200,00043,400,000029,000,00012,000,00031,600,00046,900,0005,000,000250,000,0005,000,0000052,500,00025,000,00044,500,00027,500,00018,000,0005,000,00002,000,0000003,000,00028,000,00085,000,00005,000,00038,100,00012,300,000252,530,0005,000,0000090,980,00060,000,00016,500,00020,000,00013,400,0002,500,00025,000,00010,000,0005,000,0004,000,0005,000,000160,000,00050,000,00011,100,000200,000,00072,000,00040,000,00012,000,00015,000,00026,600,000012,000,000300,000,00015,000,00075,760,000300,000,0005,000,0000032,000,000155,000,000350,000,000152,000,000150,000,00090,000,00075,000,0008,300,00006,700,00012,000,0000135,000,000191,000,000025,000,00032,000,0000030,000,00025,000,00020,000,000300,000,00010,800,000300,000,0005,000,00016,500,00030,000,000085,700,000100,000,000202,000,00010,000,00005,000,00025,500,00024,000,00045,000,00088,000,00046,000,00030,000,000120,000,00032,000,00050,000,000250,000,00000025,000,00020,100,000178,200,000013,000,000105,000,000044,000,0006,700,0001,800,00016,100,00014,800,00012,000,000100,000,0006,000,000150,000,00005,000,00027,400,00016,400,00035,000,000100,000,000500,000,000600,000,000045,000,00070,000,00080,500,000100,000,0005,000,000300,000,0005,000,000025,000,00016,500,00030,000,00015,000,0005,000,0007,500,00050,000,00017,500,000080,000,00020,000,00031,100,0005,000,000101,000,00026,000,00022,400,00030,000,0004,750,000101,800,00060,000,00010,000,00030,000,00014,300,0005,000,00000018,000,000159,000,00010,000,0007,300,00045,000,0006,250,00016,500,00050,000,00014,400,00021,000,0005,000,00014,850,00015,000,00040,000,00074,600,00063,830,00042,500,0000001,500,0007,000,00090,000,00030,000,00012,500,000150,000,000040,000,00075,000,000244,000,000060,000,000100,000,00035,000,000600,000,00031,500,00045,310,000100,000,00025,000,00050,000,00015,000,00002,000,00071,000,000138,600,00055,000,00015,000,0004,900,000505,500,00021,000,0000140,00022,000,00033,000,000071,000,00030,000,000210,000,00015,000,0000100,000,00032,000,0005,000,00080,000,00050,000,00010,400,0002,800,000170,000,00010,000,0000120,000,000350,000,00013,100,000177,000,00010,000,0009,000,00029,000,0000101,000,0005,200,0009,000,00023,000,000757,600,000252,500,000020,000,00013,200,0005,000,0004,000,000400,000,000444,450,00065,000,00010,100,000200,000,00050,000,00066,000,00015,000,000040,000,0004,400,0002,700,00030,300,00001,400,00023,300,000200,000,000194,100,00025,600,000035,000,000150,000,00036,500,0008,500,000111,100,0004,330,0006,040,000134,000,00092,000,00031,000,0005,000,0002,400,000300,000,000150,000,000150,000,00011,300,000200,000,0005,000,00061,000,00080,000,00040,000,0001,780,00050,000,00012,000,00045,000,0002,525,250,000505,050,0000145,450,00015,000,00014,000,000100,000,000060,700,00033,000,0002,000,000,0009,000,00090,800,00015,100,00066,000,0005,000,00064,000,0008,000,0000273,000,00054,000,00011,100,0005,000,00030,000,00027,800,0000100,000,00010,900,00064,500,000300,000,000300,000,00018,600,00085,000,000165,000,000300,000,00020,000,00015,000,000369,000,0002,300,00083,300,00042,700,00025,000,000032,400,0005,000,0005,000,000038,000,000120,000,0001,500,000,00048,000,0005,000,00028,000,00010,500,00050,000,00021,500,00030,000,00015,900,0009,000,0004,300,0004,000,00040,000,0004,100,00044,700,00050,000,00045,000,00050,500,00012,400,000029,000,000400,000,000300,000,0001,000,00020,000,000137,000,0001,000,000,0000700,000,000129,900,000250,000,0005,000,000284,000,00025,000,00020,000,0005,000,00020,000,0005,000,00076,400,000300,000,0006,800,000150,000,00012,000,000543,200,0005,000,000300,000,000180,000,0005,000,00015,000,0004,900,000180,000,00066,900,000300,000,00050,000,0000230,000,0000300,000,00036,300,00040,600,000300,000,00028,000,000300,000,00075,000,00092,000,000300,000,0004,000,0005,000,00075,000,000030,000,00021,000,0000400,000,000270,000,00050,000,00060,000,00045,000,000150,000,000100,000,0009,300,00045,000,0006,000,000115,000,000063,000,000180,200,00047,400,0005,300,000062,500,00015,000,00024,000,0007,000,000225,000,0005,000,0008,800,000200,000,000123,000,00053,300,000250,000,00028,400,000100,000,000200,000,00090,000,000200,000,00024,000,0005,800,000100,000,00085,000,00016,700,00060,000,00025,000,0005,000,000100,000,0005,000,0002,000,00016,000,00062,800,00016,990,00010,000,00017,000,00014,980,00035,000,00088,000,00027,600,00030,000,000170,000,00015,900,0008,000,00027,600,0005,000,0005,000,00013,100,00057,000,00025,000,00070,000,000150,000,000119,000,0005,000,00045,000,00021,500,000198,000,00062,500,00018,000,000150,000,000234,000,00024,000,0006,900,00016,300,000103,500,0000063,000,0000250,000,0002,000,000,00048,200,00080,000,00019,000,00050,000,000250,000,00034,000,00039,000,00010,000,00063,000,00080,000,000196,800,00034,700,000450,000,00065,000,00050,000,0003,000,00030,000,000150,000,000186,000,00013,700,000020,500,00020,000,000150,000,0007,950,00008,400,00015,000,00016,400,00075,000,000035,000,00030,960,0004,490,00012,400,00036,000,00018,000,00010,250,00039,500,0000100,000,00021,800,00020,000,00025,000,00042,000,0009,980,00047,000,000150,000,00014,500,0000199,000,00012,700,00042,000,000030,000,00060,000,00053,000,0005,000,000035,000,0004,700,00010,000,00017,000,00015,700,00030,000,000350,000,0003,000,000,000017,300,000130,000,00028,000,0000155,000,000800,000,000800,000,00045,000,000200,000,00018,300,00070,000,00035,000,0009,980,0002,600,00017,500,000400,00036,600,0002,400,0001,500,00014,200,0002,900,00018,100,000200,000,00066,700,00020,000,00060,000,00070,300,00025,500,00052,940,000250,000,0008,000,00025,000,0005,000,000152,000,00022,500,00011,500,00059,400,00020,000,00023,500,00079,770,00011,700,00010,000,000075,000,00015,000,00028,000,00060,000,00080,000,000150,000,00030,300,00030,000,00011,400,00020,000,00034,500,0005,000,000040,000,0007,200,00010,000,00073,000,00024,700,000285,000,00012,500,00080,000,00015,000,00021,500,00025,000,00022,800,000100,000,00055,000,000300,000,00095,000,000235,000,00035,000,000070,000,00020,000,0001,540,00020,900,000028,600,00050,000,00026,200,00070,000,00036,400,00051,000,00015,000,00056,800,000532,000,000100,000,00030,000,00050,000,00060,000,0005,000,0005,000,000040,000,00058,000,00011,000,00039,000,000028,200,000100,000,000230,000,00060,000,00024,300,0005,000,00075,000,00050,000,00075,000,00075,000,00012,500,00030,000,00015,000,00032,000,00070,000,00010,000,00070,000,00075,000,000250,000,00020,900,00022,000,0000050,000,00041,300,00016,700,00042,500,00021,400,0007,000,00025,000,00098,610,00010,500,00011,100,00017,100,000800,000,00076,000,0000475,000,00060,000,00050,000,00035,000,00015,000,00014,500,000430,000,000145,000,00066,400,0000400,000,00080,000,00070,000,000125,000,0003,900,000125,000,00015,000,000200,000,00018,000,00028,000,000350,000,00071,200,00016,400,0006,600,00012,400,000300,000,000164,800,00009,600,0005,200,00045,000,00014,300,00012,800,000180,000,0009,000,00010,000,000125,000,00016,000,00066,000,00071,000,00022,600,00085,000,0000600,000,000040,000,0000350,000,00052,300,000400,000,000150,000,00050,000,00041,000,0004,200,00030,000,00023,800,00060,000,000012,250,00046,000,00020,000,000248,300,000400,000,00030,300,00034,200,00085,000,00045,000,00030,000,00015,000,00060,000,00033,000,000325,000,000100,000,00070,000,000200,000,000143,400,00026,500,00095,000,000120,000,00022,500,00014,900,00040,000,00018,100,000110,000,00060,000,000150,000,00040,000,00010,000,00002,000,000125,000,00090,000,00016,800,000100,000,00013,000,00025,000,00044,000,00012,000,0006,300,00048,000,00027,800,00001,400,000010,000,000195,600,00020,000,00014,800,00031,000,00019,500,00015,000,00089,000,00030,000,00034,000,00024,200,0007,000,0000120,000,00070,000,000600,000225,000,00000100,000,000125,000,000027,000,00012,500,00053,100,00015,000,0003,700,000100,000,000183,000,000100,000,000142,400,00039,700,000020,000,00006,500,00020,000,00014,700,00051,000,00030,000,000026,000,00030,400,00075,000,00016,750,0001,600,000055,000,00050,000,0007,000,00030,000,00080,300,000133,000,00018,800,00075,000,00085,000,00060,000,000400,000,000400,000,00028,500,00080,000,00015,000,0007,000,00010,000,0000024,000,000039,000,00030,000,000200,000,00042,000,000300,000,000120,000,000300,000,0007,700,00051,500,000113,400,00058,000,00065,000,00050,000,00060,000,000100,000,0000105,000,000155,000,000102,000,00070,000,00005,400,0002,200,00020,100,00025,200,00054,600,0003,500,00026,600,0003,400,000150,0007,800,000600,0001,800,0002,900,00020,900,00040,000,00000300,000,00080,000,000300,000,00030,000,000140,100,000317,000,0000020,200,00050,000,0002,600,00021,500,00028,800,000105,000,00098,000,00012,000,000300,000,00030,000,00050,000,00031,000,00023,000,0005,000,0005,000,00040,000,00021,800,00019,000,000028,000,00020,000,00019,500,00090,000,00024,000,00028,400,00024,300,00018,300,00013,800,00010,200,00090,000,00025,000,00067,000,00030,000,00015,800,0007,500,00035,600,00015,000,0007,500,00010,000,00012,100,00010,100,00012,800,000000020,000,00021,000,00085,000,00049,300,00028,500,00075,000,00010,700,000150,000,000100,000,00031,100,00056,000,00010,000,00026,300,00042,000,00030,000,000104,000,000109,000,00005,000,0005,000,00040,000,00060,000,00035,000,000310,000,000175,000,000500,000,00025,000,000150,000,00086,900,00081,900,00031,600,00059,600,00045,000,000180,000,0003,400,00020,000,000300,000,000186,500,00025,000,00016,900,000250,000,000350,000,00050,000,00090,000,000100,000,000170,000,00065,000,00080,000,00099,000,00036,800,000060,000,00058,000,00077,000,00026,700,00038,700,00012,600,00064,100,00078,000,00017,300,00026,450,00025,000,000425,200,00012,200,00026,500,00039,000,00021,500,00012,600,000270,000,00023,000,00020,000,00060,700,000150,000,00054,000,00025,000,0000023,900,000210,000,00028,000,00068,000,00089,000,00050,000,0000105,000,00065,000,00020,000,00010,000,00011,400,00057,000,00035,000,000120,000,0007,900,000117,000,0005,000,00063,000,00012,000,00015,800,000100,000,00011,600,00018,500,000350,000,0000040,000,00056,000,00005,900,000122,000,00010,000,00035,000,000300,000,000102,000,000026,800,00019,100,00040,000,000200,000,0004,400,00050,000,00014,000,00027,300,00070,000,00050,000,000300,000,000350,000,000025,000,00060,000,0004,800,00046,000,000150,000,00008,000,00017,900,0000180,000,000035,700,000120,000,00026,000,00080,000,000250,000,00015,000,0009,500,00035,000,00030,000,00030,300,000035,000,000350,000,00040,000,000205,000,00030,000,0000071,000,000100,000,00014,000,0005,000,00015,000,000250,000,000210,000,00020,730,00017,200,00017,000,000350,000,000100,000,00013,400,00020,000,00021,500,00017,000,000027,000,00050,000,00015,300,00029,500,000017,500,00060,000,0003,800,000440,000,00010,500,00024,800,00040,000,00060,400,000373,000,00037,000,000180,000,00030,000,0009,500,00055,000,00035,000,00050,000,0009,600,000150,000,00026,400,000115,000,00050,000,00022,500,000280,000,000120,000,00012,000,000101,200,00050,000,00020,000,00015,000,00020,000,00024,000,00047,000,000150,000,000115,500,00011,000,0006,140,0007,650,000150,000,0000290,900,00030,000,000350,000,00022,000,00026,700,00027,300,00012,300,000100,000,00024,300,0006,000,000800,0002,800,000300,00012,100,00073,600,0004,800,0005,800,0008,000,0002,900,0003,400,000023,900,000121,900,0006,200,00090,000,00098,700,0005,100,00024,000,0009,000,0006,600,000160,000,00038,500,00020,000,000152,000,00049,000,00016,000,000249,300,000145,000,00051,000,00053,000,00035,000,000037,000,00012,000,000000125,000,00016,000,00080,000,000040,000,00040,000,00034,000,00021,000,00016,000,000310,000,00026,700,000150,000,00062,000,000011,800,000150,000,00024,500,00040,000,00016,000,0009,000,0000110,000,00050,000,00030,000,000100,000,000400,000,00065,000,000142,000,0000101,400,00015,000,00020,000,00010,900,000260,000,0004,000,000250,000,00030,000,00018,000,000500,000,0000140,000,00050,000,00030,000,00030,000,0005,300,00050,000,00050,000,00010,600,00065,000,00095,000,000192,000,000165,000,00010,000,0000100,000,00012,500,00099,000,00039,000,000105,000,000102,000,00070,000,00036,000,00079,700,00079,200,00036,600,00030,000,00061,000,00045,000,00027,000,0000022,000,0005,800,00028,000,000500,000,0001,000,000,00013,800,00030,500,000210,000,00015,500,000275,800,000282,900,00024,900,00003,100,00000247,500,00088,000,000325,000,00038,000,00022,000,000120,000,00012,300,00020,400,00055,000,00057,600,000180,000,00020,000,00045,000,000055,000,000600,000,0006,000,00036,400,000400,000,00027,800,0009,400,00041,100,00059,800,00021,300,00015,000,000100,000,00066,000,000126,000,00040,000,00037,000,00025,200,00030,000,000132,500,00090,000,00065,000,00014,000,00032,000,00072,500,0007,200,00033,000,00063,000,000165,000,00085,000,000329,000,00018,200,00014,000,00070,000,00042,500,000100,000,00035,000,000120,800,000225,000,000011,500,00015,000,000500,000,0008,000,0009,000,00028,000,000106,500,000210,000,000100,000,00050,000,00099,000,00051,000,00020,800,00080,000,0002,000,00035,000,0006,800,00024,000,00062,000,00011,000,00025,000,00040,000,00036,000,00013,400,00010,200,000114,000,00060,000,00060,000,00075,000,00059,500,00058,000,0006,250,0009,600,00010,800,00030,000,00039,000,000160,000,00016,200,0000016,000,000210,000,00050,000,000700,000,00020,400,000136,000,00015,600,000034,000,00023,000,00024,500,00040,000,000150,000,00065,100,00018,000,00016,800,00030,000,00043,000,00055,400,000400,000,0000200,000,000400,000,000398,000,00060,000,000270,000,000175,600,00040,000,00040,000,00046,500,0006,000,00040,000,00045,000,00025,000,0000130,000,00051,500,00050,000,0000300,000,0005,000,00023,600,0006,730,00011,500,00018,000,000150,000,00019,200,00050,000,000080,000,000120,000,000500,000,00025,400,000100,000,00040,000,00035,700,00075,000,00069,000,00011,000,000146,400,00040,000,0003,500,00014,600,00012,000,00020,000,00054,000,000200,000,00080,000,00080,000,0006,600,00043,000,0007,000,00060,000,00013,700,0003,200,0008,600,00077,900,00032,800,0004,600,00013,700,00026,300,0006,300,0003,200,000300,000200,000600,0005,000,00013,000,0004,000,00017,000,00016,600,000133,000,00051,000,000250,000,000240,000,0000150,000,000150,000,000260,300,00045,000,00029,000,00056,000,0000216,000,00009,800,00010,000,00012,700,00010,000,00010,000,00012,400,00018,000,000110,000,00040,000,00000265,000,000150,000,000170,000,0000100,000,00023,000,00090,000,00010,000,00010,000,0000025,000,000155,000,00050,000,000118,100,000125,000,000150,000,00035,000,00080,000,000100,000,000190,000,00025,000,000500,000,0000175,000,000100,000,000140,000,00010,000,000150,000,0000098,300,000040,000,0000015,000,00025,000,00012,500,00058,000,000110,000,0004,000,000168,000,00014,700,000021,200,00085,000,0005,200,000350,000,00011,500,00050,000,00010,100,00017,000,0000019,900,00057,200,00031,000,00050,000,00060,000,000500,000,0000100,000,00017,000,00021,800,000154,000,00096,000,000146,800,000121,000,0009,600,00018,000,000230,000,0005,100,00030,000,000260,500,000165,700,00060,000,000128,000,000200,000,0007,600,000200,000,00030,000,00013,200,000240,000,00088,600,00080,000,00075,000,00018,500,00065,000,00058,900,0000022,600,000200,000,000350,000,000368,000,00094,000,00013,100,0009,800,000380,000,000200,000,000174,000,000227,000,00040,000,000110,000,00015,700,00026,300,00041,400,00026,200,00030,000,00055,000,00065,000,000150,000,00020,000,00041,900,00057,000,00038,400,00007,700,00030,000,00026,400,00003,300,00017,400,000175,000,000200,000,00018,100,00011,000,000101,500,000150,000,000012,000,000117,800,00080,000,00014,000,000020,000,00011,600,0000031,500,000100,000,000021,960,0009,000,000460,000,000110,000,00030,000,0009,700,0002,600,00050,000,000175,000,00026,700,000188,000,000170,200,00040,000,0000002,200,00021,800,000175,600,00050,000,00029,200,0000412,000,000200,000,000246,000,00074,300,00018,300,000258,000,00025,000,00020,000,00027,700,0008,700,00035,000,00075,000,000121,000,000350,000,00014,700,00051,000,000042,300,000255,000,000150,000,00025,000,00025,000,00025,000,0009,700,000220,000,00050,500,000150,000,000350,000,00050,000,00018,200,000160,000,00024,600,000500,000,0008,500,000205,000,000047,000,00077,400,00085,000,00030,000,00050,000,00038,500,00033,000,000200,000,000100,000,000300,000,000200,000,000247,000,0008,100,00042,000,00080,000,00050,000,000100,000,000100,000,000150,000,000211,000,00034,000,00028,000,000070,000,00096,000,00041,000,00035,000,00090,000,000500,0005,700,00042,200,0004,300,0001,300,0003,700,000200,0001,100,00016,800,0009,400,0002,800,00027,900,00025,000,000190,000,00090,000,0000100,000,00027,500,00039,000,00030,000,000250,000,00025,000,00017,500,00060,000,00065,000,00020,000,000020,000,00090,000,00015,000,000100,000,00046,800,00013,000,00011,000,00021,500,000140,000,00050,000,00011,000,000119,800,00010,000,00030,000,00020,000,00080,000,000160,000,000100,000,000206,600,000120,000,000120,000,0005,200,00056,500,000160,000,000100,000,00089,400,00020,000,000062,700,000158,500,00070,000,00022,000,00011,000,00060,000,000015,000,00050,000,000150,000,000080,000,00021,000,0000015,000,000180,000,00006,000,00050,000,0002,500,0005,400,0005,500,000250,000,00012,000,00080,000,00010,000,00060,000,000110,000,000100,000,00038,000,00051,900,0008,300,000146,000,00024,500,000150,000,00044,000,00055,000,00080,000,00018,000,00015,000,00029,000,0005,400,0007,800,0003,800,000250,000,00023,200,000125,000,00050,700,00040,000,000128,500,000400,000,00085,000,000100,000,00080,000,00026,600,000480,000,00020,000,00055,000,000300,000,00020,000,0004,200,00037,000,00012,500,00050,000,000110,000,00063,000,0008,500,00064,500,000490,000,00026,000,000610,000,00045,800,00025,000,00075,000,00028,800,00065,100,00026,000,00034,900,000130,000,000104,000,000165,000,00054,700,00070,000,00050,000,00027,000,000120,000,00060,000,000340,000,0006,700,00075,000,00011,800,00022,000,00019,300,00041,000,00076,200,00017,000,00016,900,00050,000,00006,300,000100,000,00051,300,00018,000,000300,000,000130,000,00020,000,00010,400,00052,600,000212,000,0004,000,00060,000,00019,900,000104,000,00063,000,00069,000,000200,000,000300,000,000450,000,000006,300,00085,000,00074,450,00019,000,000109,000,0001,000,000250,000,00091,000,000132,000,00092,000,00060,000,000100,000,0008,030,00054,000,00042,100,000110,000,0006,900,00030,000,000120,000,000106,000,000025,000,00020,000,00032,000,000165,000,000215,000,00012,000,00012,000,000110,000,000420,000,000250,000,00055,500,000141,400,00026,000,00032,000,00020,000,000155,000,000350,000,0007,000,00021,300,00040,000,000250,000,00040,000,0000150,000,000100,000,000107,000,00040,000,000157,000,00020,000,00035,000,00026,000,000077,000,000129,500,00068,000,0005,100,00093,000,000150,000,000194,000,00012,500,00080,000,000200,000,000175,000,000100,000,00008,800,00020,000,000115,000,000200,000,0002,400,00048,000,0003,700,000400,000,00065,000,000200,000,00026,000,000120,000,00091,900,00012,000,000100,000,00009,300,00012,300,000300,000,000450,000,000145,000,00025,000,0006,500,000100,00052,100,0001,400,0005,900,000300,00011,300,0001,400,00020,900,00011,100,0003,500,00033,100,0008,500,0003,500,0005,800,0004,500,00045,000,000150,000,00093,500,00088,000,000150,000,00090,000,000150,000,00090,000,000500,000,000190,000,00012,000,00019,400,00025,040,00050,000,000220,000,000174,000,00014,600,000200,000,00004,800,00030,000,00067,000,00024,300,00022,500,00023,320,000141,000,00035,000,00094,000,00055,000,0000000120,000,00020,000,00070,000,000096,000,00048,600,00015,500,00010,000,000117,000,000240,000,000120,000,00045,000,00090,000,00011,500,00025,000,00012,000,000307,000,000106,000,00020,000,00028,000,000045,000,00032,000,000100,000,00045,000,00060,000,000018,100,000134,000,00036,000,00030,000,00015,800,00060,000,000300,000,000023,000,00033,000,00080,000,00021,000,00041,000,0003,100,00011,000,000100,000,00030,000,000030,000,000600,000,00029,000,00012,000,00050,000,000285,000,00068,000,00070,000,000100,000,0007,500,00020,000,00019,700,000147,000,000105,000,0002,400,00022,500,00020,800,00075,000,000245,000,00060,000,00092,000,00054,200,000200,000,00010,000,000423,600,000180,000,00026,840,0009,000,00010,200,000450,000,00041,100,000200,000,000350,000,0009,800,000150,000,00036,600,0007,300,000120,000,00021,200,00040,000,00058,000,00049,600,00015,000,00036,000,00080,000,000205,000,00025,000,00079,000,00055,000,0006,000,00010,500,00019,100,000100,000,00015,000,000215,000,000400,000,00033,500,000180,000,00025,000,00033,000,000100,000,00029,200,00028,000,00022,800,00042,500,00094,000,00027,000,00014,300,00030,000,00015,000,0004,200,00024,000,00027,100,00074,300,000375,000,000400,000,000101,000,00057,000,00077,000,00032,800,00050,000,000270,000,0009,200,00020,400,00020,000,000189,000,000246,000,0000039,000,00095,000,00055,000,0005,500,00025,800,00010,000,000220,000,00050,000,00030,000,000306,000,00055,000,00060,000,000130,000,0002,900,00015,000,00071,200,000150,000,000150,000,00017,000,00017,600,00087,600,000275,000,00010,300,0004,700,00018,000,00021,000,000310,000,00030,600,00025,000,00043,100,000300,00020,000,00050,000,000115,000,000200,000,000150,000,00015,000,00012,000,00068,000,00075,000,000126,000,00084,000,0005,500,00080,000,00017,400,00030,400,00067,500,00040,000,000266,000,000300,000,00065,000,00014,100,00037,000,000100,000,0007,200,00011,400,000177,500,00041,000,00082,700,000167,000,00029,000,00025,500,00034,000,000130,000,000250,000,00000220,000,000200,000,00091,300,000120,000,00022,800,00060,500,00043,200,00035,000,00018,300,000110,000,000066,000,000300,000,00085,000,000265,000,000175,000,000010,000,000180,000,00085,000,000124,000,00045,600,00010,000,000150,000,000100,000,0009,800,00069,500,000150,000,00027,000,000100,000,00055,000,0005,000,00030,000,00022,500,00071,000,00027,000,00089,000,000129,600,000250,000,00054,000,0007,100,000500,000,000125,000,00065,600,000400,000,000300,000,0006,100,00049,200,0001,300,0005,200,00011,300,0001,600,000120,000,00060,000,00010,400,0003,100,00031,500,00010,300,0002,900,0005,200,000015,700,000125,000,00028,000,00031,000,00055,000,000200,000,00023,000,000162,000,000100,000,00067,000,00050,600,000170,000,00017,200,000200,000,00040,000,000150,000,000250,000,000110,000,000330,000,00040,000,00057,000,00026,100,00050,000,00014,400,00040,000,000214,500,00060,000,00050,000,000100,000,0005,400,000106,100,00032,000,000125,000,00016,700,0009,900,000250,000,00011,200,000100,000,000325,000,00016,000,000110,000,000225,000,000150,000,00037,700,00032,700,00084,000,00011,000,00025,200,00023,000,000380,000,00012,300,00015,000,0005,400,00055,000,00080,000,00020,000,0006,000,00030,000,00011,500,00017,000,00011,300,000245,000,000260,000,000450,000,000340,000,00014,700,000224,000,000235,000,00023,000,000400,000,000200,000,000152,000,000180,000,000300,000,000450,000,000150,000,000350,000,00084,000,000300,000,000140,000,00015,000,00060,000,00028,000,0006,500,00079,000,00015,000,00023,000,00019,600,00090,000,00020,000,000275,000,00026,000,000250,000,0008,000,00065,000,00076,000,000125,000,00021,000,00013,200,000200,000,000300,000,000200,000,00078,000,0003,400,00018,000,00012,600,000100,000,000280,000,000200,000,00067,200,0000100,000,00033,000,000180,000,00029,600,00025,000,000335,000,000100,000,00020,000,00011,300,00035,000,00060,000,00075,000,000155,600,00091,400,00056,400,00031,000,00010,000,00050,000,0003,000,00057,000,00045,000,00022,000,000100,000,00054,000,00024,000,000256,000,00070,000,00020,700,00083,600,00019,800,000110,000,00065,000,000300,000,000153,000,000120,000,00015,200,00078,500,00060,000,00045,000,00024,400,000200,000,00035,000,00045,000,000109,900,00022,800,00016,500,00030,000,00057,500,000120,000,000136,700,00026,000,000218,000,00023,300,000153,600,0008,800,00060,000,00015,000,00030,000,00019,400,000150,000,000307,100,00055,500,00032,000,000150,000,00015,000,000300,000,000350,000,00077,800,00045,000,00010,000,00026,000,00030,000,00030,000,00026,600,00015,500,000180,300,000125,000,000250,000,00021,000,000112,800,00021,000,000210,000,00027,200,000104,000,00016,000,00014,200,00033,500,00020,000,000100,000,000131,200,000145,000,00020,000,00032,000,000300,000,00023,000,00075,000,000150,000,00020,800,00030,000,00020,000,0006,600,00028,700,00075,000,00011,300,00011,200,00044,000,000168,400,000175,000,00024,900,00019,900,000100,000,00053,700,0000221,700,000132,000,000104,000,00021,000,00055,000,00030,400,000100,000,000200,000,00016,100,00096,000,00027,000,000120,000,000100,000,000150,000,00070,000,00012,800,000304,000,00012,400,00059,000,00038,600,000114,300,00035,000,00035,000,000150,000,000300,000,000300,000,000180,000,000100,000,000120,000,00011,000,000250,000,0008,300,0001,700,0007,200,0007,100,0002,000,00065,000,00014,500,0004,300,0003,500,00042,500,0007,000,0006,300,000275,000,00016,500,000125,000,000150,000,00046,200,000114,000,000210,000,00090,000,000245,000,00015,800,00021,000,00012,400,00030,000,00015,400,0009,200,00030,000,00012,000,000106,000,00064,000,000130,000,0002,200,00015,000,00014,900,000125,000,00075,000,000300,000,00061,000,000200,000,00080,000,00020,000,00085,000,00012,000,00074,600,0003,000,0003,400,000184,000,00010,000,00040,000,00050,000,000225,000,0009,800,00098,000,000485,000,0004,400,00045,000,00053,000,00015,500,00035,000,000100,000,000200,000,000292,000,00013,400,00070,000,000150,000,00015,000,000385,000,00095,800,00020,000,000350,000,000300,000,00030,000,00057,300,000150,000,00050,000,00062,500,00025,000,000190,000,00050,000,00032,000,00017,000,000250,000,000175,000,00050,000,0006,000,0003,700,000180,400,00086,000,00099,500,00015,000,000300,000,0007,500,000380,000,00022,000,00044,600,00047,200,00021,500,00014,600,0007,000,00050,000,000120,000,000121,800,00060,000,00019,000,00040,000,00038,300,00045,000,00031,600,00024,000,00032,000,0004,400,00014,000,00016,100,00096,700,00031,000,00062,000,000300,000,000153,000,000105,000,000260,000,00090,000,00066,000,00090,200,00062,000,00020,000,00018,000,00026,000,00016,200,000450,000,00060,000,000400,000,00028,000,00019,900,00080,000,00070,000,00021,000,00030,500,00014,000,000200,000,00035,000,0007,700,000159,300,00020,000,00057,000,00035,000,0004,400,00026,100,00050,000,000350,000,00089,900,00017,100,00018,500,00014,500,000329,000,00043,200,00040,000,00048,000,00034,000,00040,200,00024,500,00063,000,000112,500,00047,600,00026,000,00025,000,00053,900,00088,000,00037,000,0005,900,00060,000,000117,000,00025,000,000104,000,000210,000,000100,000,00039,000,00025,000,000310,000,00080,000,00030,000,00079,000,00020,000,000100,000,000260,000,00055,000,000125,000,00028,000,000390,000,00050,000,0002,500,00033,000,0001,260,000,000154,200,00055,000,00028,200,00021,900,00049,000,00017,200,0003,000,00040,000,0004,000,00005,800,000100,000,00036,900,00050,100,00032,000,00020,200,000200,000,000173,000,00045,000,0000160,000,000162,000,00023,600,00020,000,00083,200,00040,000,000150,000,000130,000,000165,000,00071,000,00094,000,00010,000,000100,000,000350,000,00049,000,00082,200,00030,500,000170,000,00011,400,000267,000,000117,500,000350,000,00028,800,00030,000,00065,000,00022,200,0008,000,00066,000,000150,000,00047,000,000100,000,00021,000,000106,000,00068,100,0005,700,0001,200,0004,700,000200,0001,500,0009,100,0002,300,00040,000,00065,000,00040,000,00080,500,000224,000,00046,800,00028,500,000200,000,000300,000,00040,000,00070,000,00045,500,0005,000,00078,200,00064,800,00036,100,0009,000,0005,000,00012,100,000130,000,00030,000,0009,200,00026,000,00027,700,00016,000,00063,000,00073,000,000124,600,000250,000,000165,000,000280,000,000120,000,00025,100,00020,000,00020,000,00024,000,000133,600,00060,000,00022,800,000354,000,000337,000,00070,100,00012,000,000100,000,00020,000,00011,400,00024,000,00032,000,000402,000,000353,000,000250,000,000400,000,000210,000,00019,900,000150,000,00020,000,00025,000,0005,000,00040,000,000190,000,00011,300,000100,900,000500,000,000500,000,000500,000,00023,000,00022,000,00065,500,0004,600,000460,000,000140,000,0006,500,00018,600,000350,000,00070,000,00080,000,00084,000,00019,900,00075,000,000300,000,000110,000,000150,000,00030,500,00032,800,00033,100,000110,000,0008,100,00040,000,00099,000,00045,000,000137,000,000204,500,000138,000,00060,000,00028,000,000023,400,0005,000,00090,000,0005,000,00036,300,00058,000,000177,000,000109,000,000200,000,00015,000,00087,000,000150,000,00010,800,000295,000,00095,000,00035,000,00037,000,00075,000,000110,000,00075,000,00075,000,00019,600,000300,000,00045,000,000325,000,00052,000,00023,000,00030,000,000250,000,000340,000,000280,000,00060,000,00043,500,000284,000,000100,000,00071,500,00060,000,00094,000,00025,000,000120,000,00057,000,00016,400,00028,000,00072,000,0003,500,00090,000,000175,000,00025,000,00034,400,00040,000,00033,000,00027,600,00030,000,00095,000,00030,000,0009,000,000106,000,00035,300,000200,000,000150,000,00016,100,00018,400,0005,000,00090,000,00075,000,00046,700,00027,000,00052,300,00083,000,00080,000,00041,500,0006,600,00053,700,0001,400,0005,200,0005,500,00012,500,000100,0001,700,00011,300,0002,500,000485,000,000125,000,00040,000,0007,000,000154,000,0005,500,00061,000,00080,800,000140,000,00058,000,00015,000,00063,000,000150,000,0008,200,0002,800,0006,500,00042,000,00034,600,00018,000,00010,000,00039,400,00040,700,00020,800,000500,000,0009,700,00071,000,00030,000,000100,000,00013,200,0008,300,000135,000,00036,000,00076,400,00087,000,000110,000,0004,500,000100,000,00010,000,00021,000,00022,000,00030,000,00031,500,00018,300,000200,000,00022,000,000118,200,0008,000,00016,000,00014,500,00020,000,00015,000,000146,000,000252,000,000300,000,000300,000,000270,000,00011,600,000250,000,00085,000,00019,000,00018,400,00018,400,00036,000,00025,000,00050,000,00004,700,0008,100,00085,200,000150,000,00018,000,00022,000,00060,000,00058,800,000200,000,000173,200,00016,200,00019,000,00010,000,00028,000,00043,800,00018,200,00012,000,000125,000,000165,000,000160,000,00080,000,000120,000,00011,400,000150,000,00040,000,0009,500,00045,000,000160,000,000143,000,00054,000,00014,000,000175,000,00062,300,0009,700,00042,500,000200,000,000300,000,000100,000,000106,500,000300,000,00029,000,00051,400,00040,500,000102,000,0008,500,00015,100,000200,000,00050,000,000400,000,00047,600,00057,000,00065,000,000250,000,000150,000,00070,000,000300,000,000150,000,00062,700,000200,000,0007,800,000300,200,000350,000,00041,300,00090,000,00040,000,00070,000,000165,000,00036,000,00023,000,00015,500,00040,000,000125,000,00050,000,00056,900,000195,000,0004,300,00055,000,000105,000,00033,000,00045,000,000300,000,00018,600,000100,000,000140,300,0005,600,00050,000,00017,000,00050,000,000127,000,00056,000,00020,000,00023,500,00039,800,00015,900,000113,000,00012,200,00040,000,00032,700,000300,000,000260,000,00070,000,000390,000,00017,500,00047,000,00014,400,00050,000,00017,900,00016,000,00020,400,0004,200,0001,100,000150,000,00090,000,00035,000,00010,000,00045,000,00024,900,00034,000,000109,000,000250,000,000360,000,0008,000,0009,300,00069,500,00023,300,00030,000,000100,000,000400,000,00079,500,000103,000,00017,600,000120,000,00022,300,000115,800,00046,000,000265,000,000300,000,00078,000,00066,000,000400,000,000110,000,00027,000,00031,500,000103,000,00013,400,00031,500,00050,000,00030,000,00021,000,0007,000,00090,000,00028,000,00096,000,00030,000,00015,000,00035,000,00025,000,000116,000,000295,000,000012,800,00070,000,00010,600,000170,000,00060,000,00081,500,00030,000,00031,000,000300,000,000010,000,00044,000,00060,000,0008,300,00033,000,00085,000,00019,700,000100,000,00010,000,00063,000,00048,500,00014,000,00018,000,0009,000,00040,000,00050,000,000250,000,000360,000,00020,000,00010,000,00060,000,00028,000,00040,000,000300,000,00040,000,00033,600,0005,500,000218,000,0004,200,00048,200,000225,000,000350,000,0005,900,000132,000,00096,000,000500,000,000190,000,000234,000,00045,500,00012,500,00019,600,00018,000,00010,500,000021,000,00068,000,00000011,900,00088,000,00014,100,000135,000,00080,000,000065,000,00013,000,00065,000,00011,500,00023,400,00070,000,00020,000,00015,000,00018,000,00070,000,00015,200,00063,000,00032,000,00015,000,00019,700,0005,500,00011,000,00030,000,00016,000,00020,700,00051,000,00042,000,00055,000,00084,000,00060,000,00060,000,00055,000,00012,000,000100,000,00020,000,000185,000,000325,000,0007,900,0004,000,000190,000,000150,000,00025,800,000276,000,00047,100,00010,000,000102,000,00013,000,00016,900,00040,000,00034,000,00020,000,00070,000,000485,000,000375,000,00069,000,00097,400,00070,000,00026,400,00010,000,000400,000,00080,000,0001,000,00050,000,00054,000,000145,000,00021,000,00000015,000,00028,000,000150,000,0006,800,000174,000,00050,000,00095,000,00021,500,000180,300,0003,000,000190,000,00055,000,0004,500,0009,000,000330,000,00015,000,0002,000,00060,000,00060,000,00040,000,00014,100,00023,000,00011,500,000125,000,00019,500,00020,000,0009,700,00032,000,000250,000,000240,000,000200,000,0004,800,0005,100,00017,000,00010,000,0004,200,0003,700,00010,000,00045,000,00018,000,000120,000,000184,000,00051,000,000270,000,000500,000,0007,500,0007,400,000345,000,000152,000,00012,700,000150,000,000170,500,000120,000,00094,000,00074,500,00038,000,0009,000,00025,000,0004,400,00070,000,00013,300,00050,000,00080,000,0004,400,00039,000,00025,000,00015,000,000101,500,00050,000,0006,000,0003,000,00024,400,00020,000,0003,000,000125,000,00013,800,000340,000,000150,000,00034,000,00010,800,000145,000,00021,000,000125,000,00025,000,00070,000,00018,600,00017,400,00013,400,00012,300,00010,400,0003,000,00090,000,000000126,000,00011,000,00027,000,00040,000,000114,000,00050,000,000300,000,00010,000,00012,000,000140,000,0007,000,000300,000,000100,000,00070,000,00027,600,000150,000,0004,000,00042,100,0005,600,0006,300,00015,000,000119,600,000300,000,00020,000,00000226,000,00022,300,000250,000,00085,000,0007,000,00020,000,0007,900,00016,000,00010,000,000140,000,00058,500,00015,000,00024,500,00065,000,000100,000,00031,000,00047,000,000185,000,0009,800,000100,000,00034,500,00017,900,00013,000,00020,400,00020,000,00050,000,000250,000,00017,800,00018,400,00034,000,0005,600,0006,000,00071,000,000171,000,00078,000,000122,000,00026,000,000452,000,00023,000,00068,000,00012,000,00014,500,00010,000,00052,000,000150,000,0004,000,00014,000,00048,000,00014,000,00040,000,00030,000,00005,000,00014,000,000132,000,00010,000,0007,500,0007,000,00020,000,00070,000,00048,000,000150,000,000500,000,00010,000,00045,500,000100,000,00025,000,00055,000,00019,100,0007,000,0009,800,00081,000,00010,000,000100,000,000197,000,00045,000,00022,600,00030,200,0004,000,00010,000,00080,000,00030,000,000162,000,00020,900,00050,000,00070,000,000120,000,000500,000,000302,200,00015,000,00011,500,00020,000,000275,000,000141,000,00015,000,00081,000,00022,000,00030,000,00037,000,00080,000,00028,500,00029,000,000500,000,00024,500,00000000000300,000,00057,000,00092,000,00010,000,00020,000,00020,000,00082,000,000300,000,000121,500,000250,000,00018,500,0008,500,00030,000,000225,000,00052,000,00030,000,00058,100,000150,000,00027,500,00037,400,00025,000,00015,000,00064,500,000100,000,00070,000,00015,000,00059,500,00090,000,00062,000,000116,000,00055,000,00064,000,0007,600,00024,500,00050,000,00011,700,00012,000,000220,000,00037,000,0005,300,00060,000,00070,000,00010,000,00015,000,00013,000,0006,000,00020,000,00012,000,00010,000,00020,000,00050,000,00040,000,00060,000,000130,000,00034,000,00010,000,00030,100,000110,000,00050,000,000127,000,00018,800,0005,000,00020,000,00003,900,00055,000,000155,000,00048,000,0005,800,00011,900,000230,000,000250,000,000069,000,000350,000,0001,900,0005,500,00028,000,00010,800,0006,900,0008,000,000485,000,00024,500,00028,500,00037,500,0006,000,000230,000,00030,000,000115,000,00016,700,000120,000,000114,000,00062,000,00040,000,00025,000,000400,000,00040,200,00027,800,00012,700,0002,000,000150,000,00010,000,000255,000,000271,000,000200,000,00020,000,000100,000,000109,000,00010,300,00010,000,00062,000,00022,000,00046,000,000200,000,000375,000,00020,000,00025,000,00060,000,0006,000,0007,600,00020,000,0002,500,00010,000,000200,000,00015,000,0006,300,000166,000,0009,000,0004,300,00022,000,00056,000,00078,000,00070,000,000100,000,000150,000,0007,800,00030,000,00012,700,000100,000,00026,000,00020,000,00090,000,00062,000,00011,000,00050,000,00060,000,00022,000,00010,600,00033,000,00033,000,00025,000,0006,600,0003,900,0007,500,0005,500,00033,400,000171,000,00042,800,00024,000,00043,300,00010,200,00079,000,00028,000,0004,900,00030,000,000250,000,00013,400,00020,000,00032,000,000250,000,0000100,000,00072,100,00028,000,00022,200,00011,600,00048,600,00072,000,0003,100,00018,800,0007,500,00024,500,00045,200,0009,500,00030,000,0005,000,00030,000,00038,000,00015,000,00040,000,000150,000,00036,500,00053,000,00027,600,00035,800,000180,000,00051,000,00012,800,000200,000,00027,700,000100,000,00041,000,000160,000,0006,500,00093,000,00067,000,00073,300,00013,500,000140,000,00099,000,00092,500,0009,300,00019,300,000180,000,000100,000,00020,000,00014,500,00017,800,000262,000,000100,000,00014,400,000140,000,000125,000,00045,000,00010,000,00028,000,000300,000,000142,000,000165,000,000110,000,00014,900,00055,000,0006,900,000176,000,00026,600,00047,300,00092,000,00025,000,000160,000,000111,000,000300,000,00038,000,00025,500,00032,600,0008,000,000222,000,000100,000,00037,000,00028,400,00022,000,00035,000,00034,500,00052,500,00010,700,00040,000,000400,000,000312,000,00049,500,00027,800,0006,200,000139,000,00068,000,000200,000,00043,400,0005,800,00081,000,00075,000,000250,000,000100,000,00054,000,000300,000,00055,000,000178,000,00021,600,00019,500,000147,000,00025,000,0006,500,00085,000,000105,000,0008,000,000156,000,00055,100,0009,000,000300,000,00097,000,000235,000,00072,600,00039,000,00012,300,00010,000,0004,000,00057,700,000134,500,0009,200,000200,000,00072,000,0005,000,00046,000,00031,200,00013,500,00016,300,00010,000,00048,000,00090,000,00012,000,00061,300,00061,400,00090,000,00022,000,000125,000,000110,000,00030,000,00022,000,00050,000,00018,100,0003,500,00027,500,0002,000,00010,000,00066,000,0008,000,000111,000,00053,000,00080,000,0003,500,0006,000,00024,000,0004,000,0002,600,00040,000,00080,000,00023,000,00030,000,000129,000,00080,000,00073,000,00060,000,00020,000,0007,000,00078,000,0006,000,0007,500,0005,300,00016,400,00012,400,00049,000,0007,200,00022,000,0005,000,0004,800,00027,000,00055,000,0005,100,00028,800,00044,600,0009,000,00051,000,000300,000,0009,500,00034,000,000126,000,00015,000,0005,000,00011,000,0005,000,00024,000,0004,700,0008,800,000300,000,000150,000,000248,000,000100,000,00013,700,00031,300,000145,000,0009,300,00023,800,000117,000,000131,000,0004,000,00011,500,0006,200,0008,000,0008,600,00095,000,00025,000,000300,000,00072,000,000138,000,0005,000,0002,000,0008,300,00040,000,0006,400,00025,100,00010,600,00010,000,00012,500,00030,000,0004,000,00013,000,00056,000,00080,000,00017,000,0005,000,00010,000,00027,000,0007,500,0008,400,000150,000,0008,300,00015,000,0007,100,00027,100,00022,100,00055,000,00090,000,000130,000,00015,000,00011,300,0009,700,00050,000,0005,500,00010,000,00078,000,00052,100,00050,000,00039,100,0005,000,00022,000,00070,000,0004,000,0006,000,0009,000,00025,000,00018,500,000150,000,00060,000,00047,500,00010,000,00012,000,00040,000,00031,800,00040,000,0007,500,00028,000,00030,000,00040,000,00027,000,000030,000,000290,000,000100,000,000125,000,000170,000,00059,000,00060,000,00038,700,00050,000,000300,000,0007,400,00030,500,000135,400,0005,400,00057,500,000210,000,000164,500,00076,300,00082,500,00018,000,00043,000,0003,200,00025,000,00030,000,000220,000,00021,500,00068,800,000210,000,000376,000,000300,800,00050,000,00025,000,00012,800,0009,000,00035,000,000172,000,00011,700,000122,000,00070,000,000186,400,00042,100,00036,000,000175,000,00040,000,000115,300,0006,000,0006,000,00065,000,000204,600,00011,000,00036,000,00012,000,00024,500,000100,300,000100,000,00033,000,000200,000,00046,500,0007,400,00015,200,00030,000,00013,000,00034,700,000125,000,00030,000,00019,600,0009,000,0004,500,0005,000,00045,000,000107,000,0007,000,00011,000,0009,400,00026,000,000102,000,00015,000,00040,000,00015,100,000203,600,000300,400,000280,700,00050,000,0008,000,00090,000,00085,000,00039,300,00010,400,00016,800,000140,000,0005,000,00010,700,00013,500,00018,000,00010,000,00041,500,00035,000,0005,600,00050,000,00059,100,00012,800,0005,100,00021,500,00028,000,0007,500,0006,000,000240,000,00072,200,0005,500,00021,000,00050,000,000170,000,00024,500,000242,500,00073,000,000220,000,00049,300,0008,000,00040,000,000110,000,00090,000,00036,800,0007,600,00011,400,00025,000,00015,400,00016,000,00075,000,000230,000,000151,000,00011,000,0006,900,0006,700,00021,500,00058,000,00060,000,00016,000,000250,000,00011,500,00025,000,00027,000,0009,500,00030,000,00012,300,000145,400,00012,000,00020,000,00040,000,00040,000,00025,000,000100,000,000150,400,0008,000,00041,000,0005,100,00022,400,00089,000,00010,500,00030,000,00076,000,00017,100,00025,000,0005,000,00017,800,00015,000,00035,000,00055,000,0001,500,00010,900,0003,500,000128,000,00030,000,0003,800,00027,000,00029,700,000115,400,00050,000,00070,000,00044,900,00040,000,0005,000,00030,500,00020,000,000250,600,000222,800,00031,000,00045,000,00095,000,00016,700,00025,600,000100,000,0007,000,00060,200,0005,000,00043,000,000300,000,0009,000,0004,000,00065,200,00078,500,0003,000,00051,500,00025,900,0009,500,0008,100,000303,000,000352,000,0000250,000,00085,000,00010,000,0008,500,00013,400,00013,000,00079,200,0003,000,0002,800,0004,500,00052,700,00019,100,00016,100,00040,000,0002,000,00061,000,00070,000,00015,200,00035,000,00063,300,00070,000,000120,000,00000007,600,000110,000,00023,000,00018,000,00025,000,00022,000,00011,000,00013,100,00030,000,00020,000,0008,100,000105,000,000250,700,00040,000,00023,600,0006,200,00024,000,00018,500,00055,200,000275,000,00024,100,00016,000,00032,200,00045,000,000350,000,000175,000,000300,800,000163,000,00043,000,00029,000,00080,000,00050,000,00030,100,0007,000,00015,000,0009,000,00060,200,000130,400,000109,000,000150,400,000100,000,000255,000,00070,000,00030,600,000100,000,00032,100,00079,000,000136,000,00054,700,00013,000,00014,000,00063,400,00040,000,00057,800,0002,300,000120,000,000279,000,00016,800,000130,000,0006,000,00010,400,00012,000,0007,600,000100,000,000128,000,00046,200,00065,000,000107,400,00086,200,0007,100,00015,100,00015,000,00025,000,00011,000,00050,000,00063,500,00025,000,00011,000,0006,300,00018,000,00045,000,00010,200,000250,700,000147,000,00020,000,00040,000,00022,000,0007,300,00026,400,0007,000,000100,300,00016,000,000165,300,00016,000,00023,000,00015,800,00011,000,0007,700,000208,900,00019,000,00028,500,000326,400,00020,000,00012,000,00030,600,00014,100,0005,300,00025,200,0007,000,0005,000,0006,800,000122,000,000302,300,00041,500,00016,000,00075,200,00067,800,000400,000,00018,000,00080,300,00031,000,00038,000,000115,000,00040,300,00012,000,00016,000,00013,000,0009,000,00010,500,00010,600,0007,000,00022,500,00030,000,00067,000,000175,500,00013,000,00011,000,000100,800,00042,000,00085,000,00034,000,00031,300,00018,000,0007,000,00025,000,000101,000,00010,000,000302,300,00021,000,0006,000,00020,000,00013,100,0004,300,00018,800,00060,000,00010,200,00034,000,00020,100,00081,200,000101,000,0009,300,00070,000,000222,300,0005,700,00032,000,000126,400,00023,000,00013,000,00070,600,00045,000,0007,200,00012,000,0009,500,00027,000,00022,400,000162,400,000154,600,0005,000,00016,500,00030,000,00035,000,000150,000,0007,800,00016,000,0009,000,00027,000,00020,000,00012,700,0001,800,00012,200,00022,500,00019,000,00070,600,000125,000,000220,000,000154,000,00015,000,00056,900,00025,000,00040,600,00021,600,0006,500,000105,000,000300,000,00070,000,000100,000,00030,000,0008,000,00030,000,00012,000,00013,500,00010,400,00017,000,0006,400,0002,400,0009,000,00033,500,00023,500,000110,000,0006,000,00032,500,00011,500,000400,000,00017,300,00075,400,000124,000,00035,500,000165,500,00036,000,00037,500,0001,200,00010,500,0007,000,00010,200,0007,000,0004,600,00030,400,0005,500,00024,400,00017,000,0004,500,00043,500,000127,000,000304,500,00081,200,00068,000,00031,000,0008,900,0009,200,00033,000,0006,800,0004,700,00015,000,00016,300,00024,000,00026,000,00072,000,000130,900,0006,000,0003,000,000138,400,00050,000,00030,000,000101,500,0004,000,0004,000,0003,500,00021,500,0006,000,00030,500,00080,300,00042,700,0006,500,000147,000,0005,000,00090,000,000132,000,0007,000,0007,500,00024,400,00070,000,00010,000,00011,300,00060,000,00017,000,00081,200,00040,000,00075,000,00059,000,00042,700,00051,000,0009,200,00018,000,00071,100,0006,000,00053,000,00038,500,000132,000,000123,900,00016,000,0004,000,00030,000,00013,000,0006,000,00092,000,000304,500,000140,000,0007,000,00050,800,00035,000,00026,400,000304,500,00088,100,00034,600,00044,700,00025,900,00070,000,00020,000,00022,400,00022,000,00060,000,00025,000,0006,600,0005,100,00025,000,00050,000,00040,600,000101,500,0005,700,00035,000,00025,400,00040,600,00086,300,00060,000,00014,000,00080,000,00030,000,000142,100,000152,300,0005,000,000182,700,00022,400,00046,000,00040,600,00071,100,00014,000,00023,000,00015,500,00018,000,00035,700,00035,000,00040,000,00020,000,00017,000,00019,000,00043,000,00022,000,00015,000,00030,500,00044,100,00066,000,0003,000,00025,000,000157,400,00012,200,0005,200,0004,000,00012,000,0004,000,00068,100,00010,100,00016,000,0008,000,00022,000,000200,000,00010,000,00019,000,0006,000,000152,300,0005,000,00014,000,00040,000,00016,000,00070,000,00037,000,00066,000,0006,000,00050,000,00050,000,00020,000,00030,500,0002,700,00026,400,0005,300,00090,000,00027,500,0009,500,00035,500,00025,400,00013,500,00076,200,0006,100,0005,000,00025,000,00080,000,0002,000,000180,000,00037,500,0005,700,0005,000,000150,000,00027,000,00015,000,00060,000,00040,000,000100,000,000350,000,00036,000,0008,000,00017,000,0005,800,00077,000,0002,000,00093,000,00012,000,00030,000,00015,000,00012,000,00015,000,00031,000,000100,000,00018,000,000100,000,00015,000,00016,000,00020,000,00013,500,000185,000,000142,000,00029,000,00095,000,00020,000,00015,000,000120,000,00030,000,000300,000,00014,300,0007,500,000250,000,00090,000,0006,000,0007,500,00025,000,0009,000,0006,800,000100,000,00016,000,0004,000,00018,000,00015,000,0008,000,00026,000,000100,000,00067,000,00013,000,000240,000,000150,000,00016,000,0006,500,0001,800,00020,000,0006,300,0002,000,000170,000,00041,000,0001,500,00030,000,00027,000,00025,000,0007,300,00030,000,00017,000,00013,000,00026,000,00042,000,00029,000,000150,000,000220,000,000100,000,00019,500,00085,000,00051,000,0003,000,0006,500,00027,000,00064,000,00017,000,000100,000,000175,000,00090,000,00045,000,00070,000,00070,000,00080,000,00067,000,00035,000,000100,000,000200,000,00040,000,000125,000,000400,000,00047,000,000100,000,0005,000,00029,000,00045,000,0001,000,00030,000,00010,000,00019,300,0005,700,000200,000,00057,000,0003,000,00024,000,00019,000,00025,000,00020,000,00090,000,00019,300,00046,000,00020,000,00037,000,0006,900,00029,000,00060,000,0007,500,00011,800,00041,000,00030,000,00011,500,00015,000,000106,000,00056,600,00018,600,0003,500,00032,000,00024,000,0004,000,0006,000,00010,000,000161,000,00087,000,00012,500,000359,000,0004,000,00021,500,0002,900,00060,000,00064,000,00041,500,00010,000,00011,000,00015,000,000100,000,00036,000,00070,000,00040,000,000125,000,00035,000,00042,000,00024,000,0008,000,00012,500,00037,000,00011,300,00035,000,00090,000,000250,000,00020,000,000164,000,00017,000,00014,000,000300,000,00020,000,000150,000,00025,000,000110,000,00018,000,000142,000,000132,000,00090,000,00037,000,0003,700,00030,000,00034,000,00058,000,00015,600,00028,000,00037,000,00025,000,0003,700,0009,000,00050,000,00043,000,00050,000,000180,000,00080,000,00023,000,00030,000,0007,000,00020,000,0008,500,00010,000,00060,000,00013,500,00015,000,00090,000,00033,000,00040,000,000400,000,00041,000,00032,000,00035,000,00065,000,00050,000,00026,000,00012,000,0007,000,00011,000,00014,000,00058,000,00016,000,00022,000,00040,000,00030,000,00020,000,00050,000,00054,000,00040,000,0009,000,00032,000,0001,500,00014,000,0003,200,0006,500,000140,000,000314,000,00030,000,00025,000,00017,000,00010,200,00085,000,00040,000,00087,000,000250,000,0009,300,00012,000,00033,000,00022,000,0001,500,0008,000,00017,500,00016,000,0008,900,000100,000,00036,000,000280,000,00025,000,0006,800,00012,000,000100,000,00017,000,00023,000,0006,000,0003,500,0007,000,00040,000,00026,400,000100,000,00090,000,00018,000,00054,000,00026,000,00075,000,00080,000,000125,000,00085,000,00028,500,0002,300,00060,000,00080,000,000150,000,0005,000,00030,000,00042,000,00015,000,0002,000,00025,000,00010,000,00042,000,000400,000,00033,500,0008,000,00015,000,00056,000,00083,000,00018,000,00030,000,00037,500,00015,000,0004,000,00047,000,00062,000,00025,000,00075,000,000900,0004,500,00035,000,000100,000,000125,000,000110,000,00023,000,00065,000,0005,000,0006,800,00040,100,00058,000,0008,000,00015,000,00045,000,000200,000,00017,000,00035,000,00050,000,00017,500,00011,500,00036,000,0005,300,00030,000,00025,000,00028,000,0006,200,00011,000,00046,000,0007,700,0007,500,00025,000,00027,000,00033,000,000125,000,00030,000,00045,000,00021,000,0005,000,00038,000,00053,000,000110,000,000325,000,000127,000,0007,500,00040,000,000250,000,00016,000,00015,000,00010,000,000108,000,00030,000,0009,000,00027,000,00055,000,000100,000,00050,000,00030,000,00022,000,00063,000,00020,000,00035,000,00044,000,00080,000,00019,500,0008,500,0004,500,00030,000,000253,000,00075,000,00029,000,00016,000,00025,000,0006,000,00035,000,00032,000,000125,000,00011,000,00030,000,00021,000,00011,000,00037,000,00013,200,00050,000,00031,000,0005,200,0006,000,00014,000,00040,000,00051,000,00054,000,00056,000,00090,000,00015,500,00062,000,0003,000,000160,000,00020,000,00025,000,00032,500,00030,000,00067,000,000150,000,00050,000,0003,300,00050,000,00072,000,000139,000,00010,000,000300,000,00016,700,00050,000,00050,000,00034,000,00017,000,00017,000,00083,000,00029,000,00040,000,00013,400,00030,000,000120,000,00040,000,00030,000,00011,000,00030,000,00036,500,000100,000,00012,500,00043,000,00065,000,000159,000,00016,000,0006,500,00028,000,00094,000,00069,000,000175,000,00022,000,00016,000,00029,500,00017,000,00065,000,00010,000,00042,000,00038,000,00032,000,00025,000,00030,000,00050,000,00062,000,00024,000,00018,000,00032,000,00010,000,00020,500,0009,400,00010,000,00058,000,000114,000,000130,000,00044,000,000125,000,00030,000,00055,000,00065,000,00072,000,00040,000,000200,000,000125,000,00020,000,00010,000,00018,500,00012,000,00063,000,00019,000,00010,000,00038,000,000116,000,00045,000,00042,000,00015,000,00053,000,00013,800,00050,000,00071,000,00087,000,00011,000,00087,000,00045,000,00050,000,00032,500,00037,000,00010,000,0004,000,0008,000,0008,000,00016,000,00086,000,00072,500,00045,000,000100,000,00014,500,00050,000,00046,000,00024,000,00015,000,0005,000,00010,000,0005,500,0003,000,00040,000,00025,000,00042,500,00050,000,00090,000,000100,000,00031,500,00010,100,0005,000,00040,000,00050,000,0005,000,0006,000,0002,500,00012,000,0002,500,0003,000,00040,000,00020,000,00080,000,00045,000,00038,000,00025,000,00035,000,00025,000,00030,000,00022,000,00019,000,00023,000,0005,000,00024,000,00010,000,00020,000,00024,000,0006,500,00030,000,000107,000,00030,000,00031,000,00037,000,00046,000,00027,000,00035,000,00080,000,00056,000,00050,000,00014,000,000100,000,00017,800,00020,000,00030,000,00012,000,00085,000,0004,400,00014,000,0006,000,000210,000,00080,000,00025,000,000210,000,00010,400,00013,000,0008,000,00035,000,00021,000,00065,000,00058,000,00021,000,00012,000,00080,000,00051,000,00035,000,00099,000,00040,000,00025,000,00060,000,00012,000,00060,000,0009,000,00060,000,000250,000,00011,000,00014,000,00028,500,0005,000,00025,000,00012,000,0007,500,00075,000,000250,000,00016,000,00024,000,00042,000,00020,000,00023,500,00016,000,00039,000,00011,000,00047,000,00018,000,0008,800,00075,000,000139,000,00028,000,000110,000,00040,000,0003,000,00040,000,00028,000,0002,200,00025,000,00025,000,00010,000,00072,000,00031,000,00015,500,00048,000,00049,000,000109,000,00070,000,00020,000,00016,500,00017,600,00029,000,0009,000,00010,400,00031,000,00040,000,00025,000,00023,000,00092,000,00026,000,00034,000,00012,000,00031,500,000175,000,000157,000,000175,000,00036,000,00038,000,00032,000,0009,000,0004,300,0002,500,00092,000,00027,000,00035,000,00070,000,00019,000,00010,000,00025,000,000175,000,00014,500,00050,000,00032,500,00025,000,00025,000,00045,000,00040,000,00014,200,00022,000,000130,000,0003,200,00030,000,0008,000,00010,500,00014,800,00019,000,00013,000,00015,000,00020,000,00042,000,00011,000,00013,500,000115,000,00048,000,00016,500,0005,000,0005,200,0002,500,00050,000,00042,000,00010,000,00080,000,00016,500,00026,500,00015,000,00025,000,00080,000,00090,000,000113,000,00030,000,0008,000,0002,500,00021,000,0006,000,000129,000,00010,000,00020,000,00020,000,0008,000,00031,000,00096,000,000148,000,00029,000,00026,500,00025,000,0006,000,00010,000,00027,000,00023,000,000125,000,00019,500,000120,000,00019,000,00075,000,00070,000,0009,000,00012,000,0007,000,00012,600,00010,700,00012,000,0004,500,00041,000,000100,000,00016,700,00015,000,00098,000,0004,500,00015,000,00011,000,0009,000,00038,000,000100,000,00093,000,00027,000,00060,000,00020,500,00054,000,00040,000,00070,000,00060,000,00058,000,000250,000,0005,000,00077,000,00016,500,00032,000,00018,000,00060,000,00010,000,00030,000,0001,100,00012,500,00049,000,00040,000,0009,000,00015,000,00075,000,00030,000,0006,000,000143,000,0004,000,00019,000,00012,000,00014,000,00021,000,00016,000,00025,000,00013,000,00072,000,0008,000,000100,000,00022,000,00040,000,0007,600,00026,500,00021,000,0002,500,00017,500,00084,000,00030,500,00035,000,000150,000,0009,000,0008,800,0004,500,00061,000,00010,000,00010,000,00027,000,00014,000,0005,000,00025,000,00055,000,00015,000,0008,000,00090,000,00038,000,00015,500,00011,000,00019,500,00035,000,00055,000,00060,000,00082,000,000111,000,000190,000,0007,600,00020,000,00088,000,000196,000,0006,000,0004,900,00025,000,00040,000,00060,000,0008,300,0003,000,0005,500,00034,500,00017,000,00010,000,0007,000,00016,500,00015,000,00045,000,00065,000,0001,200,00072,000,00095,000,00032,000,00014,000,00065,000,00032,000,0007,000,00070,000,00010,000,00060,000,00015,000,00090,000,000100,000,00015,000,00030,000,0005,000,00015,000,0009,700,0006,000,00011,000,000150,000,000120,000,00010,700,00030,000,0006,000,0003,000,00028,000,00037,000,00010,000,00030,000,00033,000,00025,000,00024,000,00086,000,0004,500,00021,000,0008,000,000126,000,00050,000,00060,000,00017,500,00016,000,0003,000,00033,000,000140,000,00031,000,00013,000,00030,000,00012,500,0008,300,00020,000,0005,000,0005,800,000110,000,00010,500,00085,000,00013,800,00016,000,00080,000,00010,500,00023,000,0009,000,00015,000,0004,500,00012,000,00014,000,00027,500,000100,000,000200,000,00022,500,000150,000,00012,000,00014,500,00023,000,00010,000,00060,000,00085,000,00088,000,00014,000,0009,000,000100,000,00073,000,0006,000,0008,600,00011,500,000114,000,00024,800,00056,000,00047,000,00016,500,00021,000,00015,000,0005,500,00050,000,0003,500,000105,000,000200,000,00028,000,00024,000,00015,000,00060,000,00082,000,00058,000,000126,000,00013,000,00015,200,00040,000,000120,000,00025,000,00013,000,00011,500,00024,000,000130,000,0008,500,00060,000,00040,000,00025,000,00022,000,00014,000,00085,000,00080,000,000100,000,0002,000,00040,000,00022,000,00018,000,00040,000,00010,600,0005,000,0008,500,00020,000,00095,000,00053,000,00033,000,00014,000,00065,000,00025,000,00018,000,000110,000,00050,000,0005,700,00035,000,00015,000,00026,000,000105,000,00013,800,00010,000,00030,000,000110,000,0005,200,00011,000,00033,100,00018,000,00020,000,0008,200,00016,500,000109,000,00030,000,00021,000,00029,000,0006,300,00025,000,00018,000,00040,500,00015,000,00055,000,0008,200,0008,000,0004,000,00010,500,00036,000,0008,000,00035,000,00029,000,0006,600,00030,000,0006,000,00087,000,0006,500,00015,000,0002,000,00070,000,0001,700,00015,000,00010,100,0003,000,00075,000,00010,000,0003,000,00011,100,0007,500,00019,000,000107,000,00010,000,0005,500,00023,000,0004,800,00016,500,00015,000,00017,000,00014,000,00017,000,00025,000,0008,000,0001,900,00015,000,00058,000,00016,000,00050,000,0008,000,000100,000,0001,500,00010,000,00011,000,00070,000,00013,000,0007,500,0008,200,00020,000,00071,000,0005,000,0003,400,00010,000,00012,000,00017,000,0004,000,00023,000,00050,000,00075,000,00080,000,0007,000,00024,500,00025,000,000150,000,00035,000,00027,000,00020,000,00055,000,00090,000,00042,000,00080,000,00010,000,0008,000,00080,000,00012,700,00015,000,000100,000,000120,000,00021,000,00016,000,00070,000,00058,000,0002,500,00070,000,00050,000,00015,500,00035,000,00048,000,00032,000,00040,000,00060,000,00015,000,00018,300,00050,000,00039,000,00022,000,00021,000,00012,000,00023,000,00020,000,00017,000,00040,000,00066,000,00015,000,0001,500,0005,500,0001,700,00063,000,00035,000,00019,000,00038,000,00042,000,00050,000,00074,000,000200,000,00080,000,00045,000,0006,000,00017,500,00010,500,00015,000,00055,000,00018,000,0007,000,00010,000,00016,800,00025,000,00035,000,00010,000,00025,000,00032,000,00042,000,00022,000,00010,000,0009,200,0003,600,0006,300,00050,000,00023,000,00041,000,0004,000,0004,000,00013,600,0007,200,00082,000,00018,000,0008,000,00020,000,0002,500,0005,000,00041,500,00019,000,0007,000,0006,000,0005,000,0007,000,00064,000,0008,000,00067,000,00015,000,00022,000,00025,000,00055,000,00036,500,00017,000,0007,500,0008,000,0003,500,00010,000,00028,000,00018,000,00025,000,00025,000,00025,000,00025,000,00023,000,00018,000,00039,000,00020,000,00045,000,000105,000,00012,000,00015,000,00035,000,00048,500,00070,000,00056,000,0004,000,00016,000,00024,000,00013,000,00025,000,000150,000,00025,000,00056,000,00026,000,00020,000,00040,000,00060,000,00060,000,00030,000,00010,000,000116,000,00010,000,00015,000,00095,000,00019,000,00015,000,00035,000,00042,000,00054,000,00064,000,00026,000,00010,000,00035,000,00050,000,000500,00015,000,00013,300,00095,000,00014,500,00052,000,0006,000,0002,000,0004,500,00010,000,00010,000,00025,000,00035,000,0008,000,00044,000,00015,500,00014,000,00012,000,00036,000,00012,000,0002,700,00010,000,0005,000,00012,000,00082,000,00035,000,0003,600,00082,500,00014,000,00032,000,00052,500,00025,000,00012,000,0004,000,0005,000,00024,000,0004,200,0008,000,00020,000,00035,000,000115,000,00012,000,00025,000,00011,500,0005,000,00025,000,00025,000,0007,000,0008,000,00030,000,0003,000,0008,000,00029,000,00010,000,0001,800,0004,000,00030,000,00083,000,0005,000,00026,500,00017,500,00040,000,00026,000,00080,000,0009,000,00020,000,00020,000,00017,000,0008,000,0009,000,0007,000,00030,000,00095,000,00020,000,00020,000,00021,000,00049,000,00019,000,00050,000,00036,000,00015,000,00014,000,00021,000,0006,300,00057,500,00052,000,00010,000,0004,000,00039,000,00016,000,0004,100,00022,000,0009,200,00029,000,00030,000,0009,400,0009,500,00050,000,0006,000,0006,800,00021,600,0005,200,0004,200,00010,000,0005,200,00040,000,00050,000,00025,000,00012,000,0006,000,00050,000,00010,500,00032,000,00031,000,00025,000,0004,000,00022,000,00012,000,00011,500,00021,500,00038,000,00045,000,00028,000,00020,000,00016,000,00025,000,00090,000,00014,000,00070,000,00040,000,00050,000,00026,600,00070,000,00026,000,00050,000,00052,000,00033,500,0002,300,00054,000,0004,000,000145,000,00040,000,00060,000,00063,000,0006,000,00017,000,00050,000,00011,000,0008,000,00021,000,00021,500,00035,000,00050,000,00037,000,000130,000,00045,000,00025,000,00030,000,0007,500,00010,300,00020,000,0004,000,0003,000,000100,000,0007,000,00038,000,00012,000,00050,000,00012,000,00015,000,0006,600,00020,500,00025,000,00080,000,00023,000,00060,000,00075,000,00025,000,000125,000,0009,000,00015,000,0005,500,00036,000,00026,000,00021,500,0005,500,000200,000,0008,000,0001,500,00015,600,0004,000,0007,000,0009,500,00014,500,00015,000,00047,000,0008,000,00085,000,00055,000,00050,000,00015,000,00090,000,00030,000,00021,000,00033,000,00050,000,00013,000,00021,000,0005,000,00018,000,00022,000,000150,000,00020,000,00010,000,0004,000,00011,000,00039,000,00076,500,0004,000,00027,000,00014,000,00028,000,00014,000,00018,000,0007,500,00026,000,00010,000,0009,500,00028,000,00040,000,00075,000,00046,000,000105,000,00010,000,00010,000,00010,700,00012,000,00025,000,00035,000,00035,000,0006,000,0005,200,0008,000,00030,000,00056,000,0005,000,00011,600,0005,800,00040,000,00020,000,00049,000,0008,000,0007,000,00015,000,00015,000,000100,000,0007,500,00075,000,00035,000,00017,000,0005,200,0005,600,0004,600,0005,600,00043,000,00027,500,0003,200,0004,000,00040,000,000110,000,00040,000,00030,000,0006,000,0007,300,00042,000,00060,000,0008,000,00055,000,00095,000,00025,000,0005,000,00010,000,0001,800,0002,000,0005,000,0003,000,00040,000,00057,000,0003,000,00063,000,00010,000,00068,000,0008,900,0007,500,0007,000,00020,000,0008,000,00040,000,00021,000,00015,000,0004,500,0004,000,0001,200,0002,000,00020,000,00020,000,00025,000,0001,000,0007,500,00017,000,00019,000,00029,500,00072,000,0009,000,0008,100,00075,000,00024,000,00023,000,0008,000,00041,000,0005,000,00023,000,00095,000,00041,000,00014,000,00020,000,00025,000,00050,000,00070,000,0009,000,00016,000,00015,000,00026,000,00032,000,00045,000,0009,000,00023,000,0009,700,00030,000,00032,000,00021,000,00030,000,00023,000,00015,500,00019,500,0004,000,00050,000,00035,000,00014,000,0005,000,00021,500,00028,500,00030,000,00020,000,000110,000,000150,000,00060,000,00016,000,00018,500,00010,000,00030,000,00020,000,00032,000,00016,000,0001,000,00010,000,00010,000,0008,000,0007,000,00024,000,00027,000,00034,000,00026,000,00012,000,00018,000,00013,000,00075,000,00033,000,000100,000,00025,000,00065,000,000100,000,00022,500,000100,000,00060,000,00037,000,00015,000,0004,400,0006,000,00025,000,000115,000,00015,000,00013,600,00013,300,00026,000,00045,000,000200,000,00015,000,00040,000,00028,000,00030,000,00070,000,00033,000,0001,600,000100,000,00031,000,0002,200,0009,000,0002,300,000110,000,000175,000,00015,000,0005,500,00027,000,00015,000,00035,000,00065,000,000109,000,00019,000,00029,000,00021,000,00017,500,00021,000,00030,000,00012,200,0006,000,00013,600,00030,000,00017,000,00020,000,00014,500,00035,000,00016,400,00027,700,0005,000,0004,000,00010,000,00070,000,0005,000,0005,000,0003,500,00044,000,00091,000,0003,000,00050,000,00023,500,00030,000,00021,000,0008,500,00050,000,00014,500,00020,000,00050,000,0009,500,00025,000,00036,000,00015,000,00012,500,0006,500,00018,000,00012,500,00036,000,00040,000,0008,000,00010,000,00010,200,00011,000,00010,000,00023,300,0007,000,0006,000,0009,600,00083,000,0004,000,00024,000,0005,400,0009,000,00042,100,00020,000,00045,000,00013,500,00070,000,00060,000,0008,500,00025,000,00061,000,0007,500,00093,000,00016,000,00010,400,0002,600,00060,000,000148,000,0004,000,00012,000,00010,000,00023,200,00020,000,00030,000,00032,000,00040,000,0002,000,00020,000,00020,000,00052,000,00050,000,00017,000,00012,900,00030,000,0006,000,0003,500,00022,000,00050,000,0005,600,00023,500,0002,000,0008,000,0005,000,00025,000,00050,000,0006,500,00016,000,00048,000,00081,000,00036,000,00017,000,0008,000,00038,500,00070,000,00049,000,00050,000,00021,500,0006,300,00010,700,00010,800,00023,000,0005,500,000150,000,0001,100,0003,000,00021,000,00013,000,00012,000,00030,000,00025,000,00058,000,00065,000,00010,000,00018,000,00016,000,0005,500,00010,400,0005,000,00015,000,00035,000,00025,000,00019,000,00030,000,0007,800,00026,000,0003,000,0005,000,0005,700,0002,800,00010,000,00075,000,00011,600,0007,500,0002,400,00045,000,00019,000,00035,000,00012,000,00073,000,00035,000,0008,000,00047,000,00077,000,00015,000,00018,500,0005,000,00090,000,00010,000,0006,000,00040,000,00019,500,0007,000,00075,000,0006,700,0001,600,0005,300,00050,000,000600,0003,800,0002,300,0006,300,0006,000,0006,200,00040,000,00025,000,00024,000,00017,500,00047,000,00022,000,00013,000,0005,000,0006,000,00025,000,00010,000,00011,500,00080,000,00025,000,00010,000,00068,000,00029,000,0008,700,00030,000,00021,400,0005,000,00014,500,0002,000,0002,000,0002,500,0002,500,0002,000,0003,000,0004,000,000400,0008,500,00024,000,0003,800,00013,000,0007,000,0005,000,00013,500,00015,000,00032,000,0006,100,0007,000,00010,000,0006,600,0002,900,0001,400,000400,000900,0001,800,0005,600,000600,00016,500,00025,000,0006,000,0007,500,00070,000,00029,000,00025,000,00035,000,000900,00019,500,00042,000,00018,000,00025,000,0004,100,00018,500,00021,200,00011,000,000115,000,00012,000,00055,000,000125,000,0005,500,00048,000,0004,000,00055,000,0006,600,0004,000,00054,000,0007,500,0004,000,00018,000,00010,000,0007,500,00016,300,00016,700,00015,000,00020,000,0004,500,0002,900,00054,000,00050,000,0005,000,0008,200,00080,000,0006,200,00059,400,00080,000,00030,000,0006,000,00018,500,00025,000,0007,800,000110,000,00090,000,00021,000,00017,000,0008,500,00036,000,00040,000,00070,000,000100,000,00045,000,00033,000,00013,500,00015,000,00060,000,00032,500,00046,000,00040,000,00043,000,0009,300,000100,000100,000100,000000011,800,0005,600,00018,800,00033,000,00038,000,00013,500,00014,000,00010,200,0008,700,0005,400,0005,000,00011,600,00016,500,00031,000,00055,000,00024,000,00020,000,00010,900,0004,700,00027,300,0002,000,0002,500,0005,500,0009,500,00018,500,00015,000,00014,000,00047,000,000600,0009,500,0006,700,00033,000,0003,500,00020,000,00012,000,0005,500,0006,000,0008,400,00010,300,0008,000,00085,000,00050,000,0002,000,00010,500,0009,000,0006,000,0005,000,00025,000,00019,500,00082,000,00013,000,00042,000,0008,000,0005,600,0001,700,00074,000,0005,000,0004,200,00011,000,00058,000,00014,000,00011,500,00013,000,0003,600,0006,000,00025,000,00040,000,00056,000,00015,600,00040,000,00020,000,00030,000,0004,500,0006,600,00026,000,0001,400,00012,700,0005,100,00028,600,0006,300,0003,000,0008,000,00030,000,00026,500,00050,000,000100,000100,000100,00000006,000,00040,000,00037,000,000600,000200,0005,000,00012,000,0009,300,0009,100,0001,300,00023,500,00030,000,00051,000,0007,000,00048,000,00016,000,00051,000,0006,700,00076,000,00029,000,00034,000,00015,000,0005,000,0008,000,0008,500,00012,300,00024,000,0002,300,00037,000,00050,000,0001,700,0008,000,00011,000,00040,000,00060,000,0009,000,00017,500,0003,500,0004,300,00012,900,0007,700,000125,000,00015,300,0003,600,0009,600,0002,200,00024,000,0001,000,0003,000,0009,000,00075,000,00017,000,0002,200,0002,800,00075,000,00029,000,00010,000,00064,500,00050,000,00035,000,00075,000,00060,000,0009,000,00024,000,00010,500,0007,500,0002,000,00015,400,00020,000,00011,000,00011,300,00010,000,0009,200,0004,400,00011,200,0001,200,00010,800,00026,300,00012,000,00063,000,0009,500,00016,000,0007,200,00017,300,00013,200,00015,500,0006,300,0003,000,00032,000,00089,000,00076,000,0004,200,00013,800,0006,900,00011,000,00010,800,00019,000,0006,300,00030,000,00014,000,00012,500,00015,000,0006,100,0002,200,00017,500,0006,500,0009,500,00064,500,0006,800,00017,000,0002,000,0003,700,00014,000,0005,400,0008,000,0006,300,0006,600,0009,600,00010,000,00018,000,00048,000,00075,000,0004,000,00022,000,0006,900,00030,000,00050,000,00016,000,00022,000,00040,000,00010,000,0004,000,00032,000,0006,500,00016,000,0004,200,00027,000,00025,000,00060,000,0003,900,0002,000,00027,500,00010,000,00046,000,00050,000,00013,000,0006,500,0003,400,00020,000,0008,500,0005,000,0004,400,00039,000,0008,000,00020,000,00032,000,00011,800,00035,000,0007,000,00090,000,0009,000,00020,500,0004,700,00054,500,0007,300,00015,000,00034,000,0006,000,0005,400,0006,000,00020,000,00010,000,0007,100,0007,000,00024,000,0002,000,00018,700,00016,100,0004,000,00025,000,00025,000,00035,000,00045,000,00023,000,0006,800,00035,000,00025,000,00024,000,0007,000,00015,000,00045,000,00040,000,0002,000,00088,000,0003,000,0005,000,0003,300,00013,500,00035,000,00037,000,00015,000,00075,000,00012,700,0001,400,0003,700,0007,500,0007,300,0007,200,0008,100,00010,000,00055,000,0005,000,00078,000,00075,000,00080,000,0002,200,00030,000,00023,200,0001,600,0008,000,0009,500,0005,200,00067,500,00084,000,0008,400,00070,000,0004,800,0001,900,0003,500,0003,500,00013,500,00020,000,00016,000,0004,500,00013,000,0003,000,0003,300,0007,000,00014,300,0007,500,00025,000,0005,700,0004,000,0006,200,0001,500,00012,600,0003,700,0008,000,0005,600,00024,400,00030,000,0004,000,00010,000,0002,200,00018,000,00040,000,0008,300,00036,000,0002,500,00014,500,00013,800,0007,200,0004,600,00019,000,00060,000,0006,000,00020,000,00020,000,0009,000,0004,100,0004,000,0003,500,00030,000,00010,000,00023,000,0005,000,00012,500,00050,000,00010,000,0004,000,00040,000,0003,500,00012,800,00020,000,00010,500,0006,300,00012,000,0008,500,00014,000,0009,600,000600,0002,100,00042,000,00011,000,0002,000,00021,800,0008,000,00019,200,000400,0004,300,0009,300,0009,000,00018,500,0005,000,00027,500,0009,000,0007,700,0002,400,00040,000,00025,000,0007,400,0005,000,0005,500,0005,200,00025,000,00017,000,00052,300,00018,500,0003,000,00010,400,0007,500,00080,000,00040,000,00015,000,000100,000100,000100,00000006,100,00030,000,00013,000,0008,500,0006,500,00032,000,0001,500,00035,000,0003,100,00010,800,00075,000,00044,500,0001,000,00055,000,00013,000,0002,100,00018,000,00020,000,000100,000,00015,700,00042,400,00011,000,00026,000,000100,000100,000100,00000007,000,0001,500,00042,000,000125,000,0006,500,00040,000,00019,000,0001,300,00018,700,00035,000,0005,300,00018,500,0005,000,00025,000,00029,000,0005,000,00046,500,00015,000,0002,600,0006,000,00040,000,000030,000,00020,000,000020,000,0000027,000,00040,000,00000100,000,0000100,000,00014,000,000100,000,00030,000,000250,000,00010,000,0004,730,00035,000,00060,000,00010,000,00018,000,000250,000,000400,000,00035,000,00020,000,00050,000,0000174,780,000079,000,000500,000,00010,000,00048,300,00050,000,00060,000,00035,000,00020,000,000150,000,000125,000,00050,000,000150,000,00090,000,000160,000,000100,000,00060,000,000200,000,00050,000,00014,000,00040,000,000100,000,000100,000,00065,000,00088,440,00028,000,00018,200,00050,000,000125,000,00055,000,0008,000,000015,000,00012,000,0000125,000,00020,000,000250,000,00080,000,000200,000,00020,900,00020,000,000170,000,000142,980,00007,000,00030,000,000200,000,00012,500,000156,000,00025,000,000150,000,0003,000,00040,000,00025,000,000130,000,000300,000,000110,000,00013,000,00034,100,00020,000,000200,000,000149,200,000120,000,00010,000,00012,000,00020,000,000030,000,00040,000,00075,000,00055,000,00080,000,00075,000,0005,000,00000300,000,0000135,000,00000050,000,0000200,000,000028,000,00050,000,000150,000,00090,000,00042,000,00025,000,000165,800,000055,000,00000100,000,00020,000,00020,800,00040,000,0004,500,0000180,000,000010,000,00070,000,00010,800,00020,000,00030,000,00014,630,000020,000,00020,000,000120,000,00025,000,00015,000,00070,000,0000100,000,000060,000,00050,000,00080,000,000100,000,0001,500,000,0008,500,00075,000,00040,000,000100,000,00080,000,0005,000,00015,600,0000260,000,00050,000,0008,000,000100,000,00015,000,00015,000,00010,000,0003,000,00050,040,000200,000,00070,000,00035,000,000030,000,0000150,000,00025,000,00020,000,0000012,000,00034,400,00045,000,00030,000,0000020,000,00035,000,00030,000,000120,000,00050,000,0005,000,00020,000,000030,000,00050,000,00040,000,000100,000,00024,200,000120,100,00035,000,000150,000,0003,000,000100,000,00025,000,00050,000,00050,000,00030,000,00042,000,00065,000,000200,000,00050,000,0002,000,000100,000,000140,000,000100,000,000200,000,000634,500,00013,000,000200,000,00066,000,0000080,000,000025,000,0008,000,00019,000,00090,000,00060,000,000135,140,00055,000,000650,000,000079,000,00015,000,00015,000,00040,000,00030,000,00035,000,000010,000,00001,000,0001,000,00044,100,00008,000,0001,970,0000037,000,00065,000,00035,000,00027,000,00010,000,00000130,000,0005,000,000300,000,00050,000,00010,000,0001,000,000,00035,000,000072,500,0000060,000,00050,000,00045,000,00050,000,00050,000,00025,000,00015,000,00050,000,00021,000,00012,000,00010,000,000100,000,0009,000,00020,000,00010,000,00026,000,00030,000,00025,000,00000100,000,00010,000,00050,000,00025,000,00050,000,000150,000,000165,000,00030,000,00026,400,00015,000,00023,000,000500,000,00020,000,00070,000,00050,000,00040,000,0008,000,0000500,000,00035,020,00020,000,00040,000,00020,000,00025,000,00040,000,00010,000,00020,000,000003,500,00070,000,00075,000,000180,000,00092,000,00030,000,00036,000,00015,000,00031,500,000100,000,000449,700,00018,000,00065,000,000030,000,0000034,000,0000120,000,000150,000,000500,000,000304,000,000055,000,00000100,000,000500,000,0005,000,00031,000,00040,000,0000180,000,00025,000,00060,690,000120,000,00015,000,00070,000,000040,000,00071,000,00050,000,000100,000,00040,000,0000300,000,000010,000,000125,000,0000200,000,00085,000,000100,000,000170,000,000101,400,000300,000,00000020,000,00065,000,0000015,000,00070,000,000110,000,00007,000,000100,000,0000100,000,00020,000,000025,000,0000200,000,00050,000,000110,000,000336,840,000100,000,00038,000,00035,000,0006,500,000100,000,00050,000,000250,000,000200,000,00015,000,000300,000,00020,000,00010,000,0006,000,00080,000,00040,000,000100,000,000300,000,000250,000,0005,000,000100,000,00020,000,00062,000,0000085,000,0000000015,000,00015,000,0000160,000,0001,500,000115,900,0000008,000,000050,000,00050,000,00080,000,000200,000,00060,000,000100,000,000500,000,000500,000,000150,000,000070,000,000100,000,00030,000,000300,000,000150,000,000150,000,000600,00061,970,000100,000,0002,500,00035,000,000100,000,000150,000,000117,700,00010,000,0002,500,00060,000,000200,000,000032,000,00078,000,00030,000,000150,000,000022,000,000100,000,00075,000,000400,000,000080,000,00000100,000,0000100,000,000100,000,00020,000,00045,000,00024,000,000095,000,00020,000,00060,000,000500,000,000117,500,0004,000,00050,000,00080,000,000020,000,0000330,000,0000120,000,00000000090,000,00000100,000,0006,800,0000015,000,00040,500,00003,000,0002,000,000200,000,00012,100,000200,000,000132,000,000200,000,000243,000,000500,000,000400,000,000244,000,00015,000,00050,000,00033,000,0000100,000,0000400,000,0000030,000,0007,500,000029,000,000015,000,000625,000,000400,000,000399,960,000200,000,000600,000,00050,000,0000140,000,000050,000,00000209,000,000210,000,000200,000,00065,000,00085,000,000150,000,000185,000,00050,000,0000100,000,000100,000,0007,200,00050,000,000000100,000,0004,000,00030,000,00091,000,00050,000,00003,970,000030,000,0008,000,00026,000,000140,000,0000107,000,00045,000,000055,000,000075,000,00020,000,000050,000,000150,000,000130,000,00071,000,00011,600,000300,000,000645,240,00030,000,0000010,000,00035,000,0000100,000,000060,000,000284,560,0000100,000,000020,000,0003,000,0004,650,000200,000,00040,000,0000300,000,00045,000,00035,000,00060,000,00090,000,0000200,000,0004,000,000000300,000,000000000130,000,00003,660,0000285,000,00070,000,00085,000,000250,000,000300,000,0000100,000,000100,000,00070,000,0000100,000,000150,000,000300,000,00010,000,000170,000,00050,000,000300,000,0000150,000,00015,000,00025,000,000120,000,0000200,000,000350,000,000100,000,000250,000,00080,000,000200,000,000310,000,00050,000,0000210,000,000200,000,00000150,000,000200,000,0000100,000,0000050,000,000140,0000055,000,000100,000,00035,000,00030,000,00010,000,00023,000,00000315,000,000180,000,00000100,000,000500,000,000300,000,000150,000,0000250,000,00050,000,000125,000,0000100,000,00047,600,0003,000,0000100,000,000010,000,000000150,000,0000172,200,000100,000,000080,000,0000030,000,000100,000,000200,000,00078,000,00010,700,0000155,000,000140,000,000100,000,00085,000,000200,000,000260,00030,000,000300,000,00025,000,000205,000,000300,000,0000040,000,00035,000,000500,000,00070,000,00080,000,0000500,000,00005,000,00075,000,000150,000,00017,100,000200,000,000200,000,0008,250,000300,000,00050,000,0000120,000,00020,000,00018,510,000240,000,000150,000,00080,000,00050,000,000100,000,0000030,000,000135,000,00030,000,00025,000,000300,000,0000400,000,00015,000,000425,000,000133,000,000100,000,000175,000,00070,000,000750,000,00030,000,00090,000,000310,000,000017,200,000160,000,00000350,000,00033,400,000190,000,000100,000,0000100,000,000140,000,00075,000,00027,000,000312,000,000200,000,000200,000,00000200,000,000550,00025,000,00021,000,000100,000,00030,000,000150,000,00025,000,000015,000,00000150,000,00085,000,000200,000,000045,000,000015,000,00010,300,000100,000,000431,390,00015,000,00060,000,000130,000,0000050,000,0000050,000,00010,000,000150,000,0000125,000,00080,000,00090,000,00050,000,000070,000,000180,000,0000100,000,000100,000,000220,000,00065,000,000150,000,000300,000,0000200,000,000165,000,00060,000,00050,000,000040,000,00055,000,000050,000,000020,000,000125,000,00015,000,000195,000,000025,000,000120,000,00050,000,000150,000,00049,600,00019,200,000010,000,00010,000,0000300,000,000100,000,00020,000,000100,000,000100,000,0001,000,000,00050,000,000263,000,00060,000,00050,000,000100,000,0008,500,000200,000,00070,000,00050,000,00080,000,000100,000,000280,000,00015,000,0000175,000,00050,000,00025,000,000200,000,00040,000,00010,000,00075,000,00050,000,00025,000,00020,000,00070,000,000200,000,00020,000,00050,000,00070,000,00010,000,000100,000,000040,000,000150,000,000400,000,000138,000,00020,000,00059,000,00009,300,000200,000,000055,000,00025,000,000100,000,000100,000,000050,000,00050,000,000100,000,000035,000,00070,000,00040,000,000280,000,000100,000,00065,000,00080,000,00025,000,000340,000,000060,000,000010,000110,000250,000,000150,000,00030,000,00080,000,000100,000,000640,000,0005,000,0006,000,00060,000,000200,000,00030,000,00050,000,00011,500,00050,000,00020,000,000271,000,00010,000,0000105,000,00025,000,00025,000,00075,000,000300,000,0000500,000,00020,000,00010,000,000010,000,00050,000,00015,000,00010,000,000250,000,00027,000,00020,000,00052,000,0000100,000,000203,000,00052,000,000100,000,00080,000,00065,000,00025,000,000250,000,000450,000,00030,000,0000030,000,000010,000,00070,000,00016,000,000050,000,000060,000,000085,000,0000080,000,000100,500,000014,500,00050,000,00050,000,000350,000,00080,000,000150,000,00015,000,000300,000,000150,000,000100,000,0000550,000,000138,100,000250,000,000200,000,000233,600,00050,000,000200,000,00035,750,000200,000,000150,000,00015,000,00021,000,00020,000,000202,340,00030,000,00043,300,00010,000,000084,000,000325,000,000200,000,00040,000,000120,000,00030,000,000150,000,00010,000,00025,000,00032,000,00016,000,00040,000,000300,000,000200,000,00040,000,00060,480,000015,000,000024,070,000100,000,000287,000,000060,000,000475,000,00080,000,000125,000,00080,000,000100,000,00031,000,000200,000,00025,300,000080,000,000100,000,00051,000,0000370,000,000020,000,000400,000,00040,000,000100,000,00020,000,00060,000,00012,000,00045,000,0000021,200,000200,000,00025,000,00050,000,000100,000,000117,000,00075,000,00050,000,000300,000,00001,000,000,00014,950,000250,000,000025,000,0005,000,000143,000,000000000070,000,00020,000,000300,000,0000050,000,00015,600,0005,000,0000000010,000,000000050,000,00050,000,000300,000,00090,000,00005,000,00012,400,000000165,000,00060,000,00028,000,000000000030,000,000010,000,00015,000,00035,000,0000000000000010,000,00025,000,000100,000,00014,000,00047,000,000100,000,000100,000,000150,000,000125,000,00075,000,000175,000,000125,000,00020,000,00026,760,00050,000,000275,000,00010,000,00025,000,00015,000,00075,000,00040,000,00050,000,00030,000,000200,000,00050,000,000022,000,0000030,000,00030,000,00015,000,000100,000,00035,000,000500,000,00035,000,000100,000,00048,500,000100,000,000315,000,00040,000,0004,200,00030,000,0009,000,00030,000,00060,000,000100,000,00028,500,00070,000,000105,000,000180,000,000070,000,0009,070,000020,000,00020,000,00025,000,00012,000,00040,000,0007,000,00015,000,00064,000,00065,000,00030,000,000150,000,0005,000,00040,000,00060,000,00015,000,0008,000,000050,000,00060,000,00030,000,00020,000,000200,000,00065,000,00040,000,000140,000,00029,200,00024,000,00095,000,00020,000,000200,000,0004,600,000360,000,000200,000,000105,000,000380,000,00021,800,00050,000,00020,000,00080,000,00068,500,00075,000,00055,000,00015,000,00015,000,000250,000,000100,000,0000035,000,000300,000,000050,000,000123,600,000150,000,00040,000,00030,000,00079,600,00050,000,00050,000,00022,500,0009,300,0005,000,000100,000,00050,000,00075,000,000100,000,0000000184,000,0000000100,000,00090,600,00030,000,00037,200,000150,000,00018,300,000250,000,0004,800,0006,000,00020,000,000100,000,000150,000,00020,000,00020,000,0005,000,00075,000,00075,000,00020,000,00055,000,0005,000,000014,000,0002,710,0005,000,00012,200,000300,000,00060,000,00030,000,00010,000,0005,000,000140,000,0002,000,000200,000,000100,000,0005,000,00040,000,00060,000,0000060,000,000002,000,000005,000,000012,000,000300,000,0000115,000,00010,000,000200,000,000100,000,00020,000,000200,000,0005,000,00011,100,00021,600,00000250,000,0004,850,00030,000,0006,500,000200,000,0000060,000,00010,000,000200,000,000001,400,00025,000,00051,200,000100,000,00018,000,000010,000,000004,800,000140,000,00015,530,00050,000,0000129,000,00015,000,00026,000,000115,000,00000043,000,0000101,150,000080,000,00035,000,00030,000,00010,000,000150,000,00045,000,00015,000,00023,000,0008,000,00014,240,00054,000,00010,000,000300,000,00070,500,000102,400,00060,000,000080,000,0001,000,0004,150,00025,650,00020,000,00021,000,00010,000,00080,000,00049,000,00011,500,000125,000,0009,000,000005,000,0005,000,0000016,000,00026,840,00075,000,00010,000,000100,000,0001,000,0007,000,0005,000,0005,000,00020,000,000150,000,00012,000,000100,000,0008,000,00020,000,000110,000,00010,000,00011,700,00050,000,00036,000,00040,000,0004,700,0008,650,0007,000,000200,000,00015,000,000160,000,00010,000,00013,500,00022,000,00070,000,000040,000,00025,000,00050,000,000040,000,00020,000,00040,000,000100,000,00048,000,00050,000,000100,000,00025,000,0006,000,00050,000,00080,000,000150,000,00060,000,000200,000,00045,000,00050,000,00050,000,00010,000,00010,000,0000160,000,00085,000,0003,000,0005,000,0002,500,00011,000,0001,400,00018,300,00025,000,000800,00010,000,0005,300,0007,500,0001,700,0002,600,00046,000,0002,500,0003,500,00015,000,00010,600,00014,600,00060,000,0001,300,00023,500,00011,600,00055,000,00010,500,0001,500,0003,500,00034,000,00035,000,000100,000100,000100,0000021,000,0008,000,00025,000,0006,500,00012,000,0001,500,00025,000,00023,300,0003,000,00020,000,00025,000,00031,000,00020,000,00011,500,00011,500,00030,000,00014,500,0003,600,0002,500,00016,000,00028,000,00023,000,00017,000,00025,000,0008,600,00055,000,0005,000,00013,000,0006,000,000800,0004,900,00031,200,00014,800,00012,500,0002,000,00030,000,0004,500,0008,800,00065,000,00017,100,00045,000,0005,000,00023,100,0006,000,00040,000,0008,000,000600,0005,000,00017,000,0005,000,00020,500,0007,400,0001,800,00017,400,0004,200,0007,900,00030,000,00018,000,00022,000,00014,500,00025,000,0007,300,0008,700,000600,00024,000,0004,600,00015,000,000800,0006,000,0002,800,0005,800,00022,000,0009,500,0001,500,000125,000,0006,000,00011,500,0002,000,0002,000,00082,000,00015,000,00050,000,0008,500,00018,000,0006,300,00035,000,00014,500,0008,000,00015,000,00025,000,0001,300,00022,300,00026,600,00026,000,0009,800,0003,700,0009,400,0003,000,0005,300,00010,700,0005,000,00064,500,0006,100,0004,400,0003,600,00011,600,0005,000,0005,300,00016,000,0001,800,0003,600,0003,900,0005,000,0007,600,00017,200,00018,300,0004,100,0003,500,00025,000,00032,000,0006,000,0007,000,0007,000,00090,000,0005,100,0002,300,0008,500,0005,800,00015,300,0002,000,0002,100,00010,700,00010,000,00010,000,00011,500,0001,800,00025,000,0003,000,00018,000,00014,000,00029,000,00012,500,00014,000,0004,000,00050,000,0003,000,00012,500,0003,700,0006,000,00011,500,0005,000,000600,00022,000,00025,000,00027,500,00055,000,00017,500,00021,200,00024,000,00011,000,0002,800,0004,000,0005,200,00022,000,00040,000,00026,000,00025,000,0003,400,0003,000,00010,000,00015,000,00017,500,0004,800,00013,200,00021,800,00015,000,00050,000,00017,000,00015,300,0005,000,00010,500,00023,000,0009,000,0004,000,00010,000,00016,000,00014,400,0008,600,0002,000,0008,600,00013,500,0002,800,0001,800,0003,600,0005,300,0003,000,0006,300,0004,000,0002,800,00010,000,00012,000,00018,000,0005,000,00021,500,00015,000,0005,000,00010,000,00018,000,00013,000,000100,000100,000100,000000015,000,00011,200,00030,000,00060,000,00065,000,00025,000,0006,200,0008,100,00041,000,0006,300,00039,000,00010,000,0006,000,0005,000,000500,00017,500,0009,500,0009,100,0009,000,00025,000,00013,000,00018,000,00010,000,0004,800,0001,000,0007,000,000150,000,00015,000,00025,000,00010,000,000100,000,00020,000,00037,000,00025,000,00023,000,00030,000,00023,000,00068,000,00022,000,00013,000,00020,000,00010,000,00025,000,00019,000,0005,000,00016,700,00017,500,0009,100,00020,000,00021,300,0007,500,0002,100,0001,100,0001,700,00049,000,0007,200,00019,200,0004,100,0005,000,00025,000,0004,800,00031,000,0002,800,000110,000,00020,500,00042,000,00037,000,00045,000,00010,000,0005,000,00011,000,0002,700,00025,000,00038,000,000100,000100,000100,0000000017,500,00014,500,00040,000,00033,000,00020,000,00025,000,000100,000,0001,000,00010,000,0009,400,00020,600,0003,000,00027,000,00014,000,000100,000,00011,000,00070,000,00014,000,00015,000,00050,000,00075,000,00015,000,00020,000,00032,000,0008,500,0005,500,00010,000,00012,700,0006,200,0006,000,00020,000,00015,500,0006,800,00057,000,00022,500,0004,400,00032,000,0009,500,00025,000,0004,500,0006,700,00025,000,00015,000,0002,200,00070,000,00022,000,0003,500,0006,000,00062,000,0003,800,0003,900,0005,000,00014,000,00030,000,00017,500,0005,200,000100,0003,800,0002,800,0003,600,00065,000,00010,000,0005,000,00020,200,00058,500,00024,000,00012,000,00028,500,00082,000,00033,000,0002,200,00027,800,0001,500,00010,000,00025,000,00022,500,00017,000,00018,500,00090,000,0007,000,00017,000,00020,500,00015,000,00017,000,00023,500,0003,100,00050,000,0004,500,0008,500,00030,000,0002,500,00032,500,00045,000,00014,000,0003,300,0003,600,0008,500,0004,600,00019,000,0005,000,0003,000,0003,500,00015,000,0007,500,0005,000,0007,800,00035,000,00033,000,00025,000,0009,500,0007,800,00075,000,0007,000,00040,000,00085,000,0007,000,0007,000,00013,200,00012,800,00017,000,0007,500,00051,900,0005,100,0003,900,00025,000,0005,000,0008,000,00022,000,00030,000,0005,000,00030,000,00035,000,0006,000,00035,000,00030,000,0008,800,00020,000,00020,000,0004,200,00015,000,00012,500,00021,000,00067,500,00013,300,0006,600,0002,600,00013,500,00015,000,00020,000,0001,700,0003,400,0005,600,00015,000,00013,500,0005,000,0003,700,0008,000,000400,0006,500,00018,500,00022,000,0005,000,0004,000,0002,700,00042,000,00018,000,00018,300,0002,000,0003,000,00014,000,00025,000,00017,500,00013,000,00030,000,00015,000,00018,000,000130,000,00030,500,0005,000,0002,900,00050,000,0002,800,00020,000,00018,500,0002,000,00047,000,00095,000,000100,000,0002,000,00019,500,00045,000,0005,000,00014,000,00011,000,0008,400,00040,000,0002,000,0001,600,0004,500,0008,000,00010,000,000400,00010,000,0006,000,000800,000200,00034,000,00011,000,00050,000,0004,400,0003,000,0006,000,0003,700,0002,200,00039,000,00021,000,00023,500,00035,000,00025,000,0008,500,00025,000,00048,500,00025,000,00015,000,0001,300,00060,000,00032,500,00015,000,00022,000,0009,000,00080,000,00022,000,0008,400,00030,000,0008,800,00014,000,00015,000,0005,500,0006,000,0007,000,00025,000,00020,000,00025,000,0005,400,00090,000,00027,500,0007,200,0003,800,00070,000,0008,800,00024,000,00012,500,00015,500,0005,000,0005,600,00025,000,0002,000,0005,600,0007,000,0005,000,00028,000,00066,000,00040,000,00012,000,00042,000,00017,600,00032,500,0007,000,00056,500,00050,000,000600,00011,900,0005,200,00024,000,00020,000,00010,000,0009,000,00040,000,0002,400,00010,000,00050,000,00020,000,00035,000,00011,600,00011,600,00072,000,00012,000,0001,500,00020,000,00025,000,00037,000,0003,000,00010,000,0003,500,00020,000,0004,600,0005,000,0002,800,00025,000,00025,000,00013,000,00073,000,00035,600,0006,600,0007,400,00085,000,00022,000,00029,000,00010,000,00025,000,00039,000,00033,000,00025,000,00029,000,00014,000,0009,500,0009,500,00037,000,0005,500,00034,000,00028,000,00010,800,00014,000,00015,000,00075,000,0008,000,00013,400,00011,000,0004,200,00040,000,00021,000,00032,500,000600,00031,000,0003,600,00025,000,0005,000,00014,500,00066,000,00010,000,0007,000,00012,200,0009,600,00024,000,00019,100,00011,200,00035,700,00015,000,0004,800,0009,800,0007,000,00015,000,0005,000,0005,600,00075,000,00020,000,0004,300,00020,000,00050,000,0001,600,0009,200,00025,500,0003,400,00074,600,00010,000,00021,000,0003,000,00075,000,00040,000,00040,000,00016,500,0003,200,00015,000,0002,600,00014,000,0005,400,00025,000,0005,000,0008,100,0004,200,00025,200,0005,300,0005,500,00010,000,0001,500,00027,000,00012,000,0005,000,0004,200,00014,800,00018,200,0005,900,0007,100,000400,00013,800,00015,900,00010,000,00070,000,0002,500,00025,000,00018,000,0004,500,00012,000,00054,500,00024,000,00010,000,0005,000,00020,000,00016,200,0005,000,00011,100,00061,000,00019,100,00012,000,0001,900,0001,900,0001,900,0001,900,00014,000,0001,700,00025,000,00054,000,0003,800,00018,800,0008,500,00010,000,00012,500,00021,500,00011,200,0007,500,00010,000,0001,200,000300,00020,000,00014,400,0009,000,000500,0003,500,0001,300,000300,00030,000,00030,000,0007,300,0003,000,00014,000,00030,000,00019,500,00031,500,0003,500,00025,000,000900,0001,300,00050,000,00025,000,00012,500,00025,200,0003,300,00020,000,00027,200,00015,000,00028,000,0002,500,00029,700,0005,000,0002,400,0001,000,000500,00028,000,0001,300,00010,000,00040,000,00030,000,0002,500,0001,200,0003,500,00016,500,0001,500,00015,000,00030,000,00020,000,0002,600,0003,500,00018,000,0004,400,0003,000,0009,000,00010,000,0002,000,0005,000,00033,000,000100,000,0003,900,00012,500,00012,800,00015,000,00026,000,00018,500,00012,500,0002,700,0002,300,00010,000,0005,000,00034,000,00012,500,0004,000,00016,000,00075,000,00024,100,00010,000,0004,000,0002,000,0002,000,0002,500,00013,500,00012,000,00040,000,000195,000,000250,000,000'"},"metadata":{}}]},{"cell_type":"markdown","source":"### What just happened? \nPandas treated the totalamts like strings. In Python, adding strings concatenates the strings together.\n\nThere are a few ways to remedy this. When using pd.read_csv(), you could specify the column type for every column in the data set. The pd.read_csv() dtype option can accept a dictionary mapping each column name to its data type. You could also specify the thousands option with thousands=','. This specifies that thousands are separated by a comma in this data set.\n\nHowever, this data is somewhat messy, contains missing values, and has a lot of columns. It might be faster to read in the entire data set with string types and then convert individual columns as needed. For this next exercise, convert the totalamt column from a string to an integer type.","metadata":{}},{"cell_type":"code","source":"# Convert the totalamt column from a string to a float and save the results back into the totalamt column\n\n# Step 1: Remove the commas from the 'totalamt' column\n# HINT: https://pandas.pydata.org/pandas-docs/version/0.22/generated/pandas.Series.str.replace.html\n\n# Step 2: Convert the 'totalamt' column from an object data type (ie string) to an integer data type.\n# HINT: https://pandas.pydata.org/pandas-docs/version/0.23/generated/pandas.to_numeric.html\n\ndf_projects['totalamt'] = pd.to_numeric(df_projects['totalamt'].str.replace(',',\"\"))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:32.205297Z","iopub.execute_input":"2024-08-19T06:06:32.205681Z","iopub.status.idle":"2024-08-19T06:06:32.245564Z","shell.execute_reply.started":"2024-08-19T06:06:32.205653Z","shell.execute_reply":"2024-08-19T06:06:32.244290Z"},"trusted":true},"execution_count":51,"outputs":[]},{"cell_type":"markdown","source":"## Parsing Dates\nAnother common data transformation involves parsing dates. Parsing generally means that you start with a string and then transform that string into a different data type. In this case, that means taking a date in the format of a string and transforming the string into a date type. Run the next cell to see an example","metadata":{}},{"cell_type":"code","source":"parsed_date = pd.to_datetime('January 1st, 2017')\nparsed_date","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:33.660078Z","iopub.execute_input":"2024-08-19T06:06:33.660494Z","iopub.status.idle":"2024-08-19T06:06:33.673110Z","shell.execute_reply.started":"2024-08-19T06:06:33.660461Z","shell.execute_reply":"2024-08-19T06:06:33.671944Z"},"trusted":true},"execution_count":52,"outputs":[{"execution_count":52,"output_type":"execute_result","data":{"text/plain":"Timestamp('2017-01-01 00:00:00')"},"metadata":{}}]},{"cell_type":"code","source":"parsed_date.month","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:34.648028Z","iopub.execute_input":"2024-08-19T06:06:34.648426Z","iopub.status.idle":"2024-08-19T06:06:34.655382Z","shell.execute_reply.started":"2024-08-19T06:06:34.648395Z","shell.execute_reply":"2024-08-19T06:06:34.654227Z"},"trusted":true},"execution_count":53,"outputs":[{"execution_count":53,"output_type":"execute_result","data":{"text/plain":"1"},"metadata":{}}]},{"cell_type":"code","source":"parsed_date.year","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:35.267711Z","iopub.execute_input":"2024-08-19T06:06:35.268648Z","iopub.status.idle":"2024-08-19T06:06:35.275090Z","shell.execute_reply.started":"2024-08-19T06:06:35.268598Z","shell.execute_reply":"2024-08-19T06:06:35.273867Z"},"trusted":true},"execution_count":54,"outputs":[{"execution_count":54,"output_type":"execute_result","data":{"text/plain":"2017"},"metadata":{}}]},{"cell_type":"code","source":"parsed_date.second","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:35.971704Z","iopub.execute_input":"2024-08-19T06:06:35.972137Z","iopub.status.idle":"2024-08-19T06:06:35.979244Z","shell.execute_reply.started":"2024-08-19T06:06:35.972105Z","shell.execute_reply":"2024-08-19T06:06:35.978054Z"},"trusted":true},"execution_count":55,"outputs":[{"execution_count":55,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"markdown","source":"Sometimes date string are formatted in unexpected ways. For example, in the United States, dates are given with the month first and then the day. That is what pandas expects by default. However, some countries write the date with the day first and then the month. Run the next three examples to see Panda's default behavior and how you can specify the date formatting","metadata":{}},{"cell_type":"code","source":"parsed_date = pd.to_datetime('5/3/2017 5:30')\nparsed_date.month","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:36.503784Z","iopub.execute_input":"2024-08-19T06:06:36.504257Z","iopub.status.idle":"2024-08-19T06:06:36.513194Z","shell.execute_reply.started":"2024-08-19T06:06:36.504224Z","shell.execute_reply":"2024-08-19T06:06:36.512134Z"},"trusted":true},"execution_count":56,"outputs":[{"execution_count":56,"output_type":"execute_result","data":{"text/plain":"5"},"metadata":{}}]},{"cell_type":"code","source":"parsed_date = pd.to_datetime('3/5/2017 5:30', format='%d/%m/%Y %H:%M')\nparsed_date.month","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:37.023423Z","iopub.execute_input":"2024-08-19T06:06:37.023836Z","iopub.status.idle":"2024-08-19T06:06:37.032488Z","shell.execute_reply.started":"2024-08-19T06:06:37.023769Z","shell.execute_reply":"2024-08-19T06:06:37.031260Z"},"trusted":true},"execution_count":57,"outputs":[{"execution_count":57,"output_type":"execute_result","data":{"text/plain":"5"},"metadata":{}}]},{"cell_type":"code","source":"parsed_date = pd.to_datetime('5/3/2017 5:30', format='%m/%d/%Y %H:%M')\nparsed_date.month","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:37.639538Z","iopub.execute_input":"2024-08-19T06:06:37.640539Z","iopub.status.idle":"2024-08-19T06:06:37.648068Z","shell.execute_reply.started":"2024-08-19T06:06:37.640502Z","shell.execute_reply":"2024-08-19T06:06:37.646720Z"},"trusted":true},"execution_count":58,"outputs":[{"execution_count":58,"output_type":"execute_result","data":{"text/plain":"5"},"metadata":{}}]},{"cell_type":"code","source":"# Read in the projects data set with all columns type string\ndf_projects = pd.read_csv('../input/worldbank-dataset/projects_data.csv', dtype=str)\ndf_projects.drop(['Unnamed: 56'], axis=1, inplace=True)\ndf_projects.columns","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:38.103711Z","iopub.execute_input":"2024-08-19T06:06:38.104152Z","iopub.status.idle":"2024-08-19T06:06:38.708430Z","shell.execute_reply.started":"2024-08-19T06:06:38.104120Z","shell.execute_reply":"2024-08-19T06:06:38.707378Z"},"trusted":true},"execution_count":59,"outputs":[{"execution_count":59,"output_type":"execute_result","data":{"text/plain":"Index(['id', 'regionname', 'countryname', 'prodline', 'lendinginstr',\n       'lendinginstrtype', 'envassesmentcategorycode', 'supplementprojectflg',\n       'productlinetype', 'projectstatusdisplay', 'status', 'project_name',\n       'boardapprovaldate', 'board_approval_month', 'closingdate',\n       'lendprojectcost', 'ibrdcommamt', 'idacommamt', 'totalamt', 'grantamt',\n       'borrower', 'impagency', 'url', 'projectdoc ', 'majorsector_percent ',\n       'sector1', 'sector2', 'sector3', 'sector4', 'sector5', 'sector',\n       'mjsector1', 'mjsector2', 'mjsector3', 'mjsector4', 'mjsector5',\n       'mjsector', 'theme1', 'theme2', 'theme3', 'theme4', 'theme5', 'theme ',\n       'goal', 'financier', 'mjtheme1name', 'mjtheme2name', 'mjtheme3name',\n       'mjtheme4name', 'mjtheme5name', 'location', 'GeoLocID', 'GeoLocName',\n       'Latitude', 'Longitude', 'Country'],\n      dtype='object')"},"metadata":{}}]},{"cell_type":"markdown","source":"Notice there are three columns associated with dates: boardapprovaldate, board_approval_month, and closingdate. Run the code cell below to see what these values look like.","metadata":{}},{"cell_type":"code","source":"df_projects.head(15)[['boardapprovaldate', 'board_approval_month', 'closingdate']]","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:39.315482Z","iopub.execute_input":"2024-08-19T06:06:39.315880Z","iopub.status.idle":"2024-08-19T06:06:39.329762Z","shell.execute_reply.started":"2024-08-19T06:06:39.315851Z","shell.execute_reply":"2024-08-19T06:06:39.328637Z"},"trusted":true},"execution_count":60,"outputs":[{"execution_count":60,"output_type":"execute_result","data":{"text/plain":"       boardapprovaldate board_approval_month           closingdate\n0   2018-06-28T00:00:00Z                 June                   NaN\n1   2018-06-28T00:00:00Z                 June  2023-12-31T00:00:00Z\n2   2018-06-28T00:00:00Z                 June                   NaN\n3   2018-06-27T00:00:00Z                 June  2023-06-28T00:00:00Z\n4   2018-06-27T00:00:00Z                 June  2023-05-31T00:00:00Z\n5   2018-06-27T00:00:00Z                 June  2019-12-31T00:00:00Z\n6   2018-06-27T00:00:00Z                 June  2023-10-31T00:00:00Z\n7   2018-06-27T00:00:00Z                 June  2023-12-31T00:00:00Z\n8   2018-06-27T00:00:00Z                 June  2022-12-31T00:00:00Z\n9   2018-06-27T00:00:00Z                 June  2023-12-31T00:00:00Z\n10  2018-06-27T00:00:00Z                 June  2023-12-31T00:00:00Z\n11  2018-06-27T00:00:00Z                 June                   NaN\n12  2018-06-27T00:00:00Z                 June                   NaN\n13  2018-06-27T00:00:00Z                 June                   NaN\n14  2018-06-27T00:00:00Z                 June                   NaN","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>boardapprovaldate</th>\n      <th>board_approval_month</th>\n      <th>closingdate</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>2018-06-28T00:00:00Z</td>\n      <td>June</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2018-06-28T00:00:00Z</td>\n      <td>June</td>\n      <td>2023-12-31T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2018-06-28T00:00:00Z</td>\n      <td>June</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>2023-06-28T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>2023-05-31T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>2019-12-31T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>2023-10-31T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>2023-12-31T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>2022-12-31T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>2023-12-31T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>2023-12-31T00:00:00Z</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>2018-06-27T00:00:00Z</td>\n      <td>June</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Use the pandas to_datetime method to convert the boardapprovaldate and closingdate columns into datetime objects.","metadata":{}},{"cell_type":"code","source":"# Use the pandas to_datetime method to convert these two columns \n#   (boardapprovaldate, closingdate) into date times.\n# HINT: It's easier to do this one column at a time\n\ndf_projects['boardapprovaldate'] = pd.to_datetime(df_projects['boardapprovaldate'])\ndf_projects['closingdate'] = pd.to_datetime(df_projects['closingdate'])","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:40.435468Z","iopub.execute_input":"2024-08-19T06:06:40.435874Z","iopub.status.idle":"2024-08-19T06:06:40.471275Z","shell.execute_reply.started":"2024-08-19T06:06:40.435844Z","shell.execute_reply":"2024-08-19T06:06:40.470306Z"},"trusted":true},"execution_count":61,"outputs":[]},{"cell_type":"code","source":"# Run the code cells below to see how you can access the different parts of the datetime objects\n# Series.dt gives access to the datetime object as explained here: https://pandas.pydata.org/pandas-docs/stable/generated/pandas.Series.dt.html\ndf_projects['boardapprovaldate'].dt.second","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:41.387662Z","iopub.execute_input":"2024-08-19T06:06:41.388478Z","iopub.status.idle":"2024-08-19T06:06:41.398709Z","shell.execute_reply.started":"2024-08-19T06:06:41.388444Z","shell.execute_reply":"2024-08-19T06:06:41.397581Z"},"trusted":true},"execution_count":62,"outputs":[{"execution_count":62,"output_type":"execute_result","data":{"text/plain":"0        0.0\n1        0.0\n2        0.0\n3        0.0\n4        0.0\n        ... \n18243    0.0\n18244    0.0\n18245    0.0\n18246    0.0\n18247    0.0\nName: boardapprovaldate, Length: 18248, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"# Run this code cell to see the output\ndf_projects['boardapprovaldate'].dt.month","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:42.291539Z","iopub.execute_input":"2024-08-19T06:06:42.292570Z","iopub.status.idle":"2024-08-19T06:06:42.302929Z","shell.execute_reply.started":"2024-08-19T06:06:42.292531Z","shell.execute_reply":"2024-08-19T06:06:42.301604Z"},"trusted":true},"execution_count":63,"outputs":[{"execution_count":63,"output_type":"execute_result","data":{"text/plain":"0        6.0\n1        6.0\n2        6.0\n3        6.0\n4        6.0\n        ... \n18243    3.0\n18244    8.0\n18245    8.0\n18246    8.0\n18247    5.0\nName: boardapprovaldate, Length: 18248, dtype: float64"},"metadata":{}}]},{"cell_type":"code","source":"# Run this code to see the output\n# weekday represents the day of the week from 0 (Monday) to 6 (Sunday).\ndf_projects['boardapprovaldate'].dt.weekday","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:43.143990Z","iopub.execute_input":"2024-08-19T06:06:43.144407Z","iopub.status.idle":"2024-08-19T06:06:43.155516Z","shell.execute_reply.started":"2024-08-19T06:06:43.144376Z","shell.execute_reply":"2024-08-19T06:06:43.154409Z"},"trusted":true},"execution_count":64,"outputs":[{"execution_count":64,"output_type":"execute_result","data":{"text/plain":"0        3.0\n1        3.0\n2        3.0\n3        2.0\n4        2.0\n        ... \n18243    3.0\n18244    3.0\n18245    4.0\n18246    3.0\n18247    4.0\nName: boardapprovaldate, Length: 18248, dtype: float64"},"metadata":{}}]},{"cell_type":"markdown","source":"### Create new columns\n\nNow that the boardapprovaldate and closingdates are in datetime formats, create a few new columns in the df_projects data frame:\n\n* approvalyear\n* approvalday\n* approvalweekday\n* closingyear\n* closingday\n* closingweekday","metadata":{}},{"cell_type":"code","source":"### \n# create the follwing new columns in the df_projects data frame\n#\n# approvalyear\n# approvalday\n# approvalweekday\n# closingyear\n# closingday\n# closingweekday\n#\n#\n###\n\ndf_projects['approvalyear'] = df_projects['boardapprovaldate'].dt.year\ndf_projects['approvalday'] = df_projects['boardapprovaldate'].dt.day\ndf_projects['approvalweekday'] = df_projects['boardapprovaldate'].dt.weekday\ndf_projects['closingyear'] = df_projects['closingdate'].dt.year\ndf_projects['closingday'] = df_projects['closingdate'].dt.day\ndf_projects['closingweekday'] = df_projects['closingdate'].dt.weekday","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:43.859875Z","iopub.execute_input":"2024-08-19T06:06:43.860261Z","iopub.status.idle":"2024-08-19T06:06:43.877249Z","shell.execute_reply.started":"2024-08-19T06:06:43.860231Z","shell.execute_reply":"2024-08-19T06:06:43.876275Z"},"trusted":true},"execution_count":65,"outputs":[]},{"cell_type":"markdown","source":"## Encodings\nEncodings are a set of rules mapping string characters to their binary representations.\nThe utf-8 standard tries to provide a single encoding schema that can encompass all text.\nThe problem is that it's difficult to know what encoding rules were used to make a file unless somebody tells you. The most common encoding by far is utf-8. Pandas will assume that files are utf-8 when you read them in or write them out.\n\nRun the code cell below to read in the population data set.","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('../input/worldbank-dataset/populationData.csv', skiprows=4)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:06:51.860178Z","iopub.execute_input":"2024-08-19T06:06:51.860852Z","iopub.status.idle":"2024-08-19T06:06:51.878251Z","shell.execute_reply.started":"2024-08-19T06:06:51.860780Z","shell.execute_reply":"2024-08-19T06:06:51.877172Z"},"trusted":true},"execution_count":68,"outputs":[]},{"cell_type":"code","source":"df = pd.read_csv('../input/worldbank-dataset/mystery.csv')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:40:11.456761Z","iopub.execute_input":"2024-08-19T06:40:11.457181Z","iopub.status.idle":"2024-08-19T06:40:11.629556Z","shell.execute_reply.started":"2024-08-19T06:40:11.457151Z","shell.execute_reply":"2024-08-19T06:40:11.627867Z"},"trusted":true},"execution_count":76,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mUnicodeDecodeError\u001b[0m                        Traceback (most recent call last)","Cell \u001b[0;32mIn[76], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m df \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m../input/worldbank-dataset/mystery.csv\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[1;32m   1014\u001b[0m     dialect,\n\u001b[1;32m   1015\u001b[0m     delimiter,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[1;32m   1023\u001b[0m )\n\u001b[1;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[0;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[1;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[0;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m \u001b[43mTextFileReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[1;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1898\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1895\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(msg)\n\u001b[1;32m   1897\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 1898\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mmapping\u001b[49m\u001b[43m[\u001b[49m\u001b[43mengine\u001b[49m\u001b[43m]\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1899\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m:\n\u001b[1;32m   1900\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/c_parser_wrapper.py:93\u001b[0m, in \u001b[0;36mCParserWrapper.__init__\u001b[0;34m(self, src, **kwds)\u001b[0m\n\u001b[1;32m     90\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdtype_backend\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpyarrow\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[1;32m     91\u001b[0m     \u001b[38;5;66;03m# Fail here loudly instead of in cython after reading\u001b[39;00m\n\u001b[1;32m     92\u001b[0m     import_optional_dependency(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mpyarrow\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m---> 93\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_reader \u001b[38;5;241m=\u001b[39m \u001b[43mparsers\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mTextReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43msrc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m     95\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39munnamed_cols \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_reader\u001b[38;5;241m.\u001b[39munnamed_cols\n\u001b[1;32m     97\u001b[0m \u001b[38;5;66;03m# error: Cannot determine type of 'names'\u001b[39;00m\n","File \u001b[0;32mparsers.pyx:574\u001b[0m, in \u001b[0;36mpandas._libs.parsers.TextReader.__cinit__\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mparsers.pyx:663\u001b[0m, in \u001b[0;36mpandas._libs.parsers.TextReader._get_header\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mparsers.pyx:874\u001b[0m, in \u001b[0;36mpandas._libs.parsers.TextReader._tokenize_rows\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mparsers.pyx:891\u001b[0m, in \u001b[0;36mpandas._libs.parsers.TextReader._check_tokenize_status\u001b[0;34m()\u001b[0m\n","File \u001b[0;32mparsers.pyx:2053\u001b[0m, in \u001b[0;36mpandas._libs.parsers.raise_parser_error\u001b[0;34m()\u001b[0m\n","\u001b[0;31mUnicodeDecodeError\u001b[0m: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte"],"ename":"UnicodeDecodeError","evalue":"'utf-8' codec can't decode byte 0xff in position 0: invalid start byte","output_type":"error"}]},{"cell_type":"markdown","source":"You should have gotten an error: UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 0: invalid start byte. This means pandas assumed the file had a utf-8 encoding but had trouble reading in the data file.","metadata":{}},{"cell_type":"code","source":"from encodings.aliases import aliases\n\nalias_values = set(aliases.values())\n\nfor encoding in set(aliases.values()):\n    try:\n        df=pd.read_csv(\"mystery.csv\", encoding=encoding)\n        print('successful', encoding)\n    except:\n        pass","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:41:28.447484Z","iopub.execute_input":"2024-08-19T06:41:28.447963Z","iopub.status.idle":"2024-08-19T06:41:28.647565Z","shell.execute_reply.started":"2024-08-19T06:41:28.447926Z","shell.execute_reply":"2024-08-19T06:41:28.645735Z"},"trusted":true},"execution_count":77,"outputs":[]},{"cell_type":"markdown","source":"There are dozens of encodings that Python can handle; however, Pandas assumes a utf-8 encoding. This makes sense since utf-8 is very common. However, you will sometimes come across files with other encodings. If you don't know the encoding, you have to search for it.\n\nThere is a Python library that can be of some help when you don't know an encoding: chardet. Run the code cells below to see how it works.","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"# install the chardet library\n!pip install chardet","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:41:30.522980Z","iopub.execute_input":"2024-08-19T06:41:30.523733Z","iopub.status.idle":"2024-08-19T06:41:48.508008Z","shell.execute_reply.started":"2024-08-19T06:41:30.523695Z","shell.execute_reply":"2024-08-19T06:41:48.505482Z"},"trusted":true},"execution_count":78,"outputs":[{"name":"stdout","text":"Collecting chardet\n  Downloading chardet-5.2.0-py3-none-any.whl.metadata (3.4 kB)\nDownloading chardet-5.2.0-py3-none-any.whl (199 kB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m199.4/199.4 kB\u001b[0m \u001b[31m1.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0mm\n\u001b[?25hInstalling collected packages: chardet\nSuccessfully installed chardet-5.2.0\n","output_type":"stream"}]},{"cell_type":"code","source":"# import the chardet library\nimport chardet \n\n# use the detect method to find the encoding\n# 'rb' means read in the file as binary\nwith open(\"../input/worldbank-dataset/mystery.csv\", 'rb') as file:\n    print(chardet.detect(file.read()))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:41:48.511079Z","iopub.execute_input":"2024-08-19T06:41:48.514040Z","iopub.status.idle":"2024-08-19T06:41:48.562685Z","shell.execute_reply.started":"2024-08-19T06:41:48.513974Z","shell.execute_reply":"2024-08-19T06:41:48.561287Z"},"trusted":true},"execution_count":79,"outputs":[{"name":"stdout","text":"{'encoding': 'UTF-16', 'confidence': 1.0, 'language': ''}\n","output_type":"stream"}]},{"cell_type":"markdown","source":"a machine learning algorithm won't work with missing values. This is essentially correct; however, there are a couple of situations where this isn't quite true. For example, if you had a categorical variable, you could keep the NULL value as one of the options.","metadata":{}},{"cell_type":"markdown","source":"## Imputing Data\nWhen a dataset has missing values, you can either remove those values or fill them in.","metadata":{}},{"cell_type":"code","source":"df = pd.read_csv('../input/worldbank-dataset/gdp_data.csv', skiprows=4)\ndf.drop('Unnamed: 62', axis=1, inplace=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:41:48.564544Z","iopub.execute_input":"2024-08-19T06:41:48.565051Z","iopub.status.idle":"2024-08-19T06:41:48.600170Z","shell.execute_reply.started":"2024-08-19T06:41:48.565007Z","shell.execute_reply":"2024-08-19T06:41:48.598848Z"},"trusted":true},"execution_count":80,"outputs":[]},{"cell_type":"code","source":"# run this code cell to see what the data looks like\ndf.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:41:48.603074Z","iopub.execute_input":"2024-08-19T06:41:48.603581Z","iopub.status.idle":"2024-08-19T06:41:48.640376Z","shell.execute_reply.started":"2024-08-19T06:41:48.603541Z","shell.execute_reply":"2024-08-19T06:41:48.638540Z"},"trusted":true},"execution_count":81,"outputs":[{"execution_count":81,"output_type":"execute_result","data":{"text/plain":"  Country Name Country Code     Indicator Name  Indicator Code          1960  \\\n0        Aruba          ABW  GDP (current US$)  NY.GDP.MKTP.CD           NaN   \n1  Afghanistan          AFG  GDP (current US$)  NY.GDP.MKTP.CD  5.377778e+08   \n2       Angola          AGO  GDP (current US$)  NY.GDP.MKTP.CD           NaN   \n3      Albania          ALB  GDP (current US$)  NY.GDP.MKTP.CD           NaN   \n4      Andorra          AND  GDP (current US$)  NY.GDP.MKTP.CD           NaN   \n\n           1961          1962          1963          1964          1965  ...  \\\n0           NaN           NaN           NaN           NaN           NaN  ...   \n1  5.488889e+08  5.466667e+08  7.511112e+08  8.000000e+08  1.006667e+09  ...   \n2           NaN           NaN           NaN           NaN           NaN  ...   \n3           NaN           NaN           NaN           NaN           NaN  ...   \n4           NaN           NaN           NaN           NaN           NaN  ...   \n\n           2008          2009          2010          2011          2012  \\\n0  2.791961e+09  2.498933e+09  2.467704e+09  2.584464e+09           NaN   \n1  1.019053e+10  1.248694e+10  1.593680e+10  1.793024e+10  2.053654e+10   \n2  8.417804e+10  7.549239e+10  8.252614e+10  1.041158e+11  1.139232e+11   \n3  1.288135e+10  1.204421e+10  1.192695e+10  1.289087e+10  1.231978e+10   \n4  4.007353e+09  3.660531e+09  3.355695e+09  3.442063e+09  3.164615e+09   \n\n           2013          2014          2015          2016          2017  \n0           NaN           NaN           NaN           NaN           NaN  \n1  2.026425e+10  2.061610e+10  1.921556e+10  1.946902e+10  2.081530e+10  \n2  1.249125e+11  1.267302e+11  1.026212e+11  9.533720e+10  1.242094e+11  \n3  1.277628e+10  1.322824e+10  1.138693e+10  1.188368e+10  1.303935e+10  \n4  3.281585e+09  3.350736e+09  2.811489e+09  2.877312e+09  3.012914e+09  \n\n[5 rows x 62 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>Country Code</th>\n      <th>Indicator Name</th>\n      <th>Indicator Code</th>\n      <th>1960</th>\n      <th>1961</th>\n      <th>1962</th>\n      <th>1963</th>\n      <th>1964</th>\n      <th>1965</th>\n      <th>...</th>\n      <th>2008</th>\n      <th>2009</th>\n      <th>2010</th>\n      <th>2011</th>\n      <th>2012</th>\n      <th>2013</th>\n      <th>2014</th>\n      <th>2015</th>\n      <th>2016</th>\n      <th>2017</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Aruba</td>\n      <td>ABW</td>\n      <td>GDP (current US$)</td>\n      <td>NY.GDP.MKTP.CD</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>2.791961e+09</td>\n      <td>2.498933e+09</td>\n      <td>2.467704e+09</td>\n      <td>2.584464e+09</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>GDP (current US$)</td>\n      <td>NY.GDP.MKTP.CD</td>\n      <td>5.377778e+08</td>\n      <td>5.488889e+08</td>\n      <td>5.466667e+08</td>\n      <td>7.511112e+08</td>\n      <td>8.000000e+08</td>\n      <td>1.006667e+09</td>\n      <td>...</td>\n      <td>1.019053e+10</td>\n      <td>1.248694e+10</td>\n      <td>1.593680e+10</td>\n      <td>1.793024e+10</td>\n      <td>2.053654e+10</td>\n      <td>2.026425e+10</td>\n      <td>2.061610e+10</td>\n      <td>1.921556e+10</td>\n      <td>1.946902e+10</td>\n      <td>2.081530e+10</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Angola</td>\n      <td>AGO</td>\n      <td>GDP (current US$)</td>\n      <td>NY.GDP.MKTP.CD</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>8.417804e+10</td>\n      <td>7.549239e+10</td>\n      <td>8.252614e+10</td>\n      <td>1.041158e+11</td>\n      <td>1.139232e+11</td>\n      <td>1.249125e+11</td>\n      <td>1.267302e+11</td>\n      <td>1.026212e+11</td>\n      <td>9.533720e+10</td>\n      <td>1.242094e+11</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>GDP (current US$)</td>\n      <td>NY.GDP.MKTP.CD</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>1.288135e+10</td>\n      <td>1.204421e+10</td>\n      <td>1.192695e+10</td>\n      <td>1.289087e+10</td>\n      <td>1.231978e+10</td>\n      <td>1.277628e+10</td>\n      <td>1.322824e+10</td>\n      <td>1.138693e+10</td>\n      <td>1.188368e+10</td>\n      <td>1.303935e+10</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Andorra</td>\n      <td>AND</td>\n      <td>GDP (current US$)</td>\n      <td>NY.GDP.MKTP.CD</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>...</td>\n      <td>4.007353e+09</td>\n      <td>3.660531e+09</td>\n      <td>3.355695e+09</td>\n      <td>3.442063e+09</td>\n      <td>3.164615e+09</td>\n      <td>3.281585e+09</td>\n      <td>3.350736e+09</td>\n      <td>2.811489e+09</td>\n      <td>2.877312e+09</td>\n      <td>3.012914e+09</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 62 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Run this code cell to check how many null values are in the data set\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:44:57.041773Z","iopub.execute_input":"2024-08-19T06:44:57.042626Z","iopub.status.idle":"2024-08-19T06:44:57.053022Z","shell.execute_reply.started":"2024-08-19T06:44:57.042585Z","shell.execute_reply":"2024-08-19T06:44:57.051875Z"},"trusted":true},"execution_count":82,"outputs":[{"execution_count":82,"output_type":"execute_result","data":{"text/plain":"Country Name        0\nCountry Code        0\nIndicator Name      0\nIndicator Code      0\n1960              140\n                 ... \n2013               16\n2014               17\n2015               18\n2016               23\n2017               30\nLength: 62, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"There are quite a few null values. Run the code below to plot the data for a few countries in the data set.","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n%matplotlib inline\n\n# put the data set into long form instead of wide\ndf_melt = pd.melt(df, id_vars=['Country Name', 'Country Code', 'Indicator Name', 'Indicator Code'], var_name='year', value_name='GDP')\n\n# convert year to a date time\ndf_melt['year'] = pd.to_datetime(df_melt['year'])\n\ndef plot_results(column_name):\n    # plot the results for Afghanistan, Albania, and Honduras\n    fig, ax = plt.subplots(figsize=(8,6))\n\n    df_melt[(df_melt['Country Name'] == 'Afghanistan') | \n            (df_melt['Country Name'] == 'Albania') | \n            (df_melt['Country Name'] == 'Honduras')].groupby('Country Name').plot('year', column_name, legend=True, ax=ax)\n    ax.legend(labels=['Afghanistan', 'Albania', 'Honduras'])\n    \nplot_results('GDP')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:44:58.238943Z","iopub.execute_input":"2024-08-19T06:44:58.240123Z","iopub.status.idle":"2024-08-19T06:44:58.753336Z","shell.execute_reply.started":"2024-08-19T06:44:58.240077Z","shell.execute_reply":"2024-08-19T06:44:58.752051Z"},"trusted":true},"execution_count":83,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"Afghanistan and Albania are missing data, which show up as gaps in the results","metadata":{}},{"cell_type":"markdown","source":"### Task 1\ncalculate mean GDP for each country and fill in missing values with the country mean. This is a bit tricky to do in pandas.","metadata":{}},{"cell_type":"code","source":"# TODO: Use the df_melt dataframe and fill in missing values with a country's mean GDP\n# If you aren't sure how to do this, \n# look up something like \"how to group data and fill in nan values in pandas\" in a search engine\n# Put the results in a new column called 'GDP_filled'.\n\n# HINT: You can do this with these methods: groupby(), transform(), a lambda function, fillna(), and mean()\n\ndf_melt['GDP_filled'] = df_melt.groupby('Country Name')['GDP'].transform(lambda x: x.fillna(x.mean()))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:44:58.970820Z","iopub.execute_input":"2024-08-19T06:44:58.971854Z","iopub.status.idle":"2024-08-19T06:44:59.064821Z","shell.execute_reply.started":"2024-08-19T06:44:58.971777Z","shell.execute_reply":"2024-08-19T06:44:59.063757Z"},"trusted":true},"execution_count":84,"outputs":[]},{"cell_type":"code","source":"# Plot the results\nplot_results('GDP_filled')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:44:59.470574Z","iopub.execute_input":"2024-08-19T06:44:59.471001Z","iopub.status.idle":"2024-08-19T06:45:00.010958Z","shell.execute_reply.started":"2024-08-19T06:44:59.470969Z","shell.execute_reply":"2024-08-19T06:45:00.009824Z"},"trusted":true},"execution_count":85,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"This is somewhat of an improvement. At least there is no missing data; however, because GDP tends to increase over time, the mean GDP is probably not the best way to fill in missing values for this particular case. Next, try using forward fill to deal with any missing values.\n\n### Task 2\n\n\nUse the fillna forward fill method to fill in the missing data. Here is the documentation.\n\nThe pandas fillna method has a forward fill option. For example, if you wanted to use forward fill on the GDP dataset, you could execute df_melt['GDP'].fillna(method='ffill'). However, there are two issues with that code.\n\nYou want to first make sure the data is sorted by year\nYou need to group the data by country name so that the forward fill stays within each country\nWrite code to first sort the df_melt dataframe by year, then group by 'Country Name', and finally use the forward fill method.","metadata":{}},{"cell_type":"code","source":"# Use forward fill to fill in missing GDP values\n# HINTS: use the sort_values(), groupby(), and fillna() methods\n\ndf_melt['GDP_ffill'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='ffill')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:00.022269Z","iopub.execute_input":"2024-08-19T06:45:00.022650Z","iopub.status.idle":"2024-08-19T06:45:00.086831Z","shell.execute_reply.started":"2024-08-19T06:45:00.022619Z","shell.execute_reply":"2024-08-19T06:45:00.085683Z"},"trusted":true},"execution_count":86,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/3958893064.py:4: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  df_melt['GDP_ffill'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='ffill')\n/tmp/ipykernel_33/3958893064.py:4: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  df_melt['GDP_ffill'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='ffill')\n","output_type":"stream"}]},{"cell_type":"code","source":"# plot the results\nplot_results('GDP_ffill')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:00.555228Z","iopub.execute_input":"2024-08-19T06:45:00.555678Z","iopub.status.idle":"2024-08-19T06:45:00.963975Z","shell.execute_reply.started":"2024-08-19T06:45:00.555643Z","shell.execute_reply":"2024-08-19T06:45:00.962379Z"},"trusted":true},"execution_count":87,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"This looks better at least for the Afghanistan data; however, the Albania data is still missing values. You can fill in the Albania data using back fill. That is what you'll do next.\n\n### Task 3\n\n\nThis part is similar to Part 2, but now you will use backfill. Write code that backfills the missing GDP data.","metadata":{}},{"cell_type":"code","source":"# Use back fill to fill in missing GDP values\n# HINTS: use the sort_values(), groupby(), and fillna() methods\n\ndf_melt['GDP_bfill'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='bfill')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:01.281588Z","iopub.execute_input":"2024-08-19T06:45:01.282007Z","iopub.status.idle":"2024-08-19T06:45:01.348632Z","shell.execute_reply.started":"2024-08-19T06:45:01.281974Z","shell.execute_reply":"2024-08-19T06:45:01.347558Z"},"trusted":true},"execution_count":88,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/2855566837.py:4: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  df_melt['GDP_bfill'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='bfill')\n/tmp/ipykernel_33/2855566837.py:4: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  df_melt['GDP_bfill'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='bfill')\n","output_type":"stream"}]},{"cell_type":"code","source":"plot_results('GDP_bfill')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:25.594615Z","iopub.execute_input":"2024-08-19T06:45:25.595542Z","iopub.status.idle":"2024-08-19T06:45:26.004186Z","shell.execute_reply.started":"2024-08-19T06:45:25.595506Z","shell.execute_reply":"2024-08-19T06:45:26.002897Z"},"trusted":true},"execution_count":89,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 800x600 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"In this case, the GDP data for all three countries is now complete. Note that forward fill did not fill all the Albania data because the first data entry in 1960 was NaN. Forward fill would try to fill the 1961 value with the NaN value from 1960.\n\nTo completely fill the entire GDP data for all countries, you might have to run both forward fill and back fill. Note as well that the results will be slightly different depending on if you run forward fill first or back fill first. Afghanistan, for example, is missing data in the middle of the data set. Hence forward fill and back fill will have slightly different results.\n\nRun this next code cell to see if running both forward fill and back fill end up filling all the GDP NaN values.","metadata":{}},{"cell_type":"code","source":"# Run forward fill and backward fill on the GDP data\ndf_melt['GDP_ff_bf'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='ffill').fillna(method='bfill')\n\n# Check if any GDP values are null\ndf_melt['GDP_ff_bf'].isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:26.061579Z","iopub.execute_input":"2024-08-19T06:45:26.062374Z","iopub.status.idle":"2024-08-19T06:45:26.143287Z","shell.execute_reply.started":"2024-08-19T06:45:26.062335Z","shell.execute_reply":"2024-08-19T06:45:26.142015Z"},"trusted":true},"execution_count":90,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/2575987952.py:2: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  df_melt['GDP_ff_bf'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/2575987952.py:2: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  df_melt['GDP_ff_bf'] = df_melt.sort_values('year').groupby('Country Name')['GDP'].fillna(method='ffill').fillna(method='bfill')\n","output_type":"stream"},{"execution_count":90,"output_type":"execute_result","data":{"text/plain":"0"},"metadata":{}}]},{"cell_type":"markdown","source":"## Duplicate Data\nA data set might have duplicate data: in other words, the same record is represented multiple times. Sometimes, it's easy to find and eliminate duplicate data like when two records are exactly the same. At other times, like what was discussed in the video, duplicate data is hard to spot.\n\nFrom the World Bank GDP data, count the number of countries that have had a project totalamt greater than 1 billion dollars (1,000,000,000). To get the count, you'll have to remove duplicate data rows.","metadata":{}},{"cell_type":"code","source":"projects = pd.read_csv('../input/worldbank-dataset/projects_data.csv', dtype=str)\nprojects.drop('Unnamed: 56', axis=1, inplace=True)\nprojects['totalamt'] = pd.to_numeric(projects['totalamt'].str.replace(',', ''))\nprojects['countryname'] = projects['countryname'].str.split(';', expand=True)[0]\nprojects['boardapprovaldate'] = pd.to_datetime(projects['boardapprovaldate'])\n\n# filter the data frame for projects over 1 billion dollars\n\n# count the number of unique countries in the results\n\nprojects[projects['totalamt'] > 1000000000]['countryname'].nunique()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:26.733382Z","iopub.execute_input":"2024-08-19T06:45:26.734074Z","iopub.status.idle":"2024-08-19T06:45:27.414714Z","shell.execute_reply.started":"2024-08-19T06:45:26.734037Z","shell.execute_reply":"2024-08-19T06:45:27.413686Z"},"trusted":true},"execution_count":91,"outputs":[{"execution_count":91,"output_type":"execute_result","data":{"text/plain":"17"},"metadata":{}}]},{"cell_type":"markdown","source":"##  Finding Outliers\nIn this, I'll practice looking for outliers. I'll look at the World Bank GDP and population data sets. First, you'll look at the data from a one-dimensional perspective and then a two-dimensional perspective.\n\nRun the code below to import the data sets and prepare the data for analysis. The code:\n\n* reads in the data sets\n* reshapes the datasets to a long format\n* uses back fill and forward fill to fill in missing values\n* merges the gdp and population data together\n* shows the first 10 values in the data set","metadata":{}},{"cell_type":"code","source":"# read in the projects data set and do basic wrangling \ngdp = pd.read_csv('../input/worldbank-dataset/gdp_data.csv', skiprows=4)\ngdp.drop(['Unnamed: 62', 'Country Code', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\npopulation = pd.read_csv('../input/worldbank-dataset/populationData.csv', skiprows=4)\npopulation.drop(['Unnamed: 62', 'Country Code', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\n\n\n# Reshape the data sets so that they are in long format\ngdp_melt = gdp.melt(id_vars=['Country Name'], \n                    var_name='year', \n                    value_name='gdp')\n\n# Use back fill and forward fill to fill in missing gdp values\ngdp_melt['gdp'] = gdp_melt.sort_values('year').groupby('Country Name')['gdp'].fillna(method='ffill').fillna(method='bfill')\n\npopulation_melt = population.melt(id_vars=['Country Name'], \n                                  var_name='year', \n                                  value_name='population')\n\n# Use back fill and forward fill to fill in missing population values\npopulation_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n\n# merge the population and gdp data together into one data frame\ndf_country = gdp_melt.merge(population_melt, on=('Country Name', 'year'))\n\n# filter data for the year 2016\ndf_2016 = df_country[df_country['year'] == '2016']\n\n# see what the data looks like\ndf_2016.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:31.969731Z","iopub.execute_input":"2024-08-19T06:45:31.970189Z","iopub.status.idle":"2024-08-19T06:45:32.181344Z","shell.execute_reply.started":"2024-08-19T06:45:31.970155Z","shell.execute_reply":"2024-08-19T06:45:32.180187Z"},"trusted":true},"execution_count":98,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/914478040.py:14: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  gdp_melt['gdp'] = gdp_melt.sort_values('year').groupby('Country Name')['gdp'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/914478040.py:14: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  gdp_melt['gdp'] = gdp_melt.sort_values('year').groupby('Country Name')['gdp'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/914478040.py:21: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  population_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/914478040.py:21: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  population_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n","output_type":"stream"},{"execution_count":98,"output_type":"execute_result","data":{"text/plain":"               Country Name  year           gdp   population\n14784                 Aruba  2016  2.584464e+09     104822.0\n14785           Afghanistan  2016  1.946902e+10   34656032.0\n14786                Angola  2016  9.533720e+10   28813463.0\n14787               Albania  2016  1.188368e+10    2876101.0\n14788               Andorra  2016  2.877312e+09      77281.0\n14789            Arab World  2016  2.500164e+12  406452690.0\n14790  United Arab Emirates  2016  3.570451e+11    9269612.0\n14791             Argentina  2016  5.548609e+11   43847430.0\n14792               Armenia  2016  1.054614e+10    2924816.0\n14793        American Samoa  2016  6.580000e+08      55599.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>year</th>\n      <th>gdp</th>\n      <th>population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>14784</th>\n      <td>Aruba</td>\n      <td>2016</td>\n      <td>2.584464e+09</td>\n      <td>104822.0</td>\n    </tr>\n    <tr>\n      <th>14785</th>\n      <td>Afghanistan</td>\n      <td>2016</td>\n      <td>1.946902e+10</td>\n      <td>34656032.0</td>\n    </tr>\n    <tr>\n      <th>14786</th>\n      <td>Angola</td>\n      <td>2016</td>\n      <td>9.533720e+10</td>\n      <td>28813463.0</td>\n    </tr>\n    <tr>\n      <th>14787</th>\n      <td>Albania</td>\n      <td>2016</td>\n      <td>1.188368e+10</td>\n      <td>2876101.0</td>\n    </tr>\n    <tr>\n      <th>14788</th>\n      <td>Andorra</td>\n      <td>2016</td>\n      <td>2.877312e+09</td>\n      <td>77281.0</td>\n    </tr>\n    <tr>\n      <th>14789</th>\n      <td>Arab World</td>\n      <td>2016</td>\n      <td>2.500164e+12</td>\n      <td>406452690.0</td>\n    </tr>\n    <tr>\n      <th>14790</th>\n      <td>United Arab Emirates</td>\n      <td>2016</td>\n      <td>3.570451e+11</td>\n      <td>9269612.0</td>\n    </tr>\n    <tr>\n      <th>14791</th>\n      <td>Argentina</td>\n      <td>2016</td>\n      <td>5.548609e+11</td>\n      <td>43847430.0</td>\n    </tr>\n    <tr>\n      <th>14792</th>\n      <td>Armenia</td>\n      <td>2016</td>\n      <td>1.054614e+10</td>\n      <td>2924816.0</td>\n    </tr>\n    <tr>\n      <th>14793</th>\n      <td>American Samoa</td>\n      <td>2016</td>\n      <td>6.580000e+08</td>\n      <td>55599.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"Explore the data set to identify outliers using the Tukey rule.","metadata":{}},{"cell_type":"code","source":"import matplotlib.pyplot as plt\n%matplotlib inline \n\n# Make a boxplot of the population data for the year 2016\ndf_2016.plot('population',kind='box');\n\n# Make a boxplot of the gdp data for the year 2016\ndf_2016.plot('gdp',kind='box');","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:32.698351Z","iopub.execute_input":"2024-08-19T06:45:32.698749Z","iopub.status.idle":"2024-08-19T06:45:33.142051Z","shell.execute_reply.started":"2024-08-19T06:45:32.698719Z","shell.execute_reply":"2024-08-19T06:45:33.140868Z"},"trusted":true},"execution_count":99,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"population_2016 = df_2016[['Country Name','population']]\n\n# Calculate the first quartile of the population values for 2016\n# HINT: you can use the pandas quantile method \nQ1 = population_2016['population'].quantile(0.25)\n\n# Calculate the third quartile of the population values for 2016\nQ3 = population_2016['population'].quantile(0.75)\n\n# Calculate the interquartile range Q3 - Q1\nIQR = Q3 - Q1\n\n# Calculate the maximum value and minimum values according to the Tukey rule\n# max_value is Q3 + 1.5 * IQR while min_value is Q1 - 1.5 * IQR\nmax_value = Q3 + 1.5 * IQR\nmin_value = Q1 - 1.5 * IQR\n\n# filter the population_2016 data for population values that are greater than max_value or less than min_value\npopulation_outliers = population_2016[(population_2016['population'] > max_value) | (population_2016['population'] < min_value)]\npopulation_outliers","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:33.831892Z","iopub.execute_input":"2024-08-19T06:45:33.832302Z","iopub.status.idle":"2024-08-19T06:45:33.866765Z","shell.execute_reply.started":"2024-08-19T06:45:33.832268Z","shell.execute_reply":"2024-08-19T06:45:33.865532Z"},"trusted":true},"execution_count":100,"outputs":[{"execution_count":100,"output_type":"execute_result","data":{"text/plain":"                                            Country Name    population\n14789                                         Arab World  4.064527e+08\n14802                                         Bangladesh  1.629516e+08\n14811                                             Brazil  2.076529e+08\n14822                                              China  1.378665e+09\n14843        East Asia & Pacific (excluding high income)  2.053299e+09\n14844                         Early-demographic dividend  3.170658e+09\n14845                                East Asia & Pacific  2.298727e+09\n14846      Europe & Central Asia (excluding high income)  4.132349e+08\n14847                              Europe & Central Asia  9.116863e+08\n14850                                          Euro area  3.406174e+08\n14855                                     European Union  5.112190e+08\n14856           Fragile and conflict affected situations  4.995085e+08\n14877                                        High income  1.242138e+09\n14880             Heavily indebted poor countries (HIPC)  7.446030e+08\n14884                                          IBRD only  4.699232e+09\n14885                                   IDA & IBRD total  6.273585e+09\n14886                                          IDA total  1.574353e+09\n14887                                          IDA blend  5.211590e+08\n14888                                          Indonesia  2.611155e+08\n14889                                           IDA only  1.053194e+09\n14891                                              India  1.324171e+09\n14910  Latin America & Caribbean (excluding high income)  5.622548e+08\n14916                          Latin America & Caribbean  6.376639e+08\n14917       Least developed countries: UN classification  9.793879e+08\n14918                                         Low income  7.140223e+08\n14921                                Lower middle income  2.931076e+09\n14922                                Low & middle income  6.202020e+09\n14924                          Late-demographic dividend  2.264569e+09\n14935                         Middle East & North Africa  4.367380e+08\n14938                                      Middle income  5.487997e+09\n14943  Middle East & North Africa (excluding high inc...  3.737191e+08\n14952                                      North America  3.597359e+08\n14956                                            Nigeria  1.859896e+08\n14963                                       OECD members  1.289987e+09\n14966                                           Pakistan  1.932035e+08\n14973                           Pre-demographic dividend  8.792925e+08\n14980                          Post-demographic dividend  1.102779e+09\n14984                                 Russian Federation  1.443424e+08\n14986                                         South Asia  1.766394e+09\n14997         Sub-Saharan Africa (excluding high income)  1.033118e+09\n14999                                 Sub-Saharan Africa  1.033213e+09\n15012         East Asia & Pacific (IDA & IBRD countries)  2.027896e+09\n15013       Europe & Central Asia (IDA & IBRD countries)  4.553794e+08\n15018  Latin America & the Caribbean (IDA & IBRD coun...  6.215349e+08\n15020  Middle East & North Africa (IDA & IBRD countries)  3.691675e+08\n15022                            South Asia (IDA & IBRD)  1.766394e+09\n15023          Sub-Saharan Africa (IDA & IBRD countries)  1.033213e+09\n15031                                Upper middle income  2.556922e+09\n15033                                      United States  3.234059e+08\n15041                                              World  7.444157e+09","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>14789</th>\n      <td>Arab World</td>\n      <td>4.064527e+08</td>\n    </tr>\n    <tr>\n      <th>14802</th>\n      <td>Bangladesh</td>\n      <td>1.629516e+08</td>\n    </tr>\n    <tr>\n      <th>14811</th>\n      <td>Brazil</td>\n      <td>2.076529e+08</td>\n    </tr>\n    <tr>\n      <th>14822</th>\n      <td>China</td>\n      <td>1.378665e+09</td>\n    </tr>\n    <tr>\n      <th>14843</th>\n      <td>East Asia &amp; Pacific (excluding high income)</td>\n      <td>2.053299e+09</td>\n    </tr>\n    <tr>\n      <th>14844</th>\n      <td>Early-demographic dividend</td>\n      <td>3.170658e+09</td>\n    </tr>\n    <tr>\n      <th>14845</th>\n      <td>East Asia &amp; Pacific</td>\n      <td>2.298727e+09</td>\n    </tr>\n    <tr>\n      <th>14846</th>\n      <td>Europe &amp; Central Asia (excluding high income)</td>\n      <td>4.132349e+08</td>\n    </tr>\n    <tr>\n      <th>14847</th>\n      <td>Europe &amp; Central Asia</td>\n      <td>9.116863e+08</td>\n    </tr>\n    <tr>\n      <th>14850</th>\n      <td>Euro area</td>\n      <td>3.406174e+08</td>\n    </tr>\n    <tr>\n      <th>14855</th>\n      <td>European Union</td>\n      <td>5.112190e+08</td>\n    </tr>\n    <tr>\n      <th>14856</th>\n      <td>Fragile and conflict affected situations</td>\n      <td>4.995085e+08</td>\n    </tr>\n    <tr>\n      <th>14877</th>\n      <td>High income</td>\n      <td>1.242138e+09</td>\n    </tr>\n    <tr>\n      <th>14880</th>\n      <td>Heavily indebted poor countries (HIPC)</td>\n      <td>7.446030e+08</td>\n    </tr>\n    <tr>\n      <th>14884</th>\n      <td>IBRD only</td>\n      <td>4.699232e+09</td>\n    </tr>\n    <tr>\n      <th>14885</th>\n      <td>IDA &amp; IBRD total</td>\n      <td>6.273585e+09</td>\n    </tr>\n    <tr>\n      <th>14886</th>\n      <td>IDA total</td>\n      <td>1.574353e+09</td>\n    </tr>\n    <tr>\n      <th>14887</th>\n      <td>IDA blend</td>\n      <td>5.211590e+08</td>\n    </tr>\n    <tr>\n      <th>14888</th>\n      <td>Indonesia</td>\n      <td>2.611155e+08</td>\n    </tr>\n    <tr>\n      <th>14889</th>\n      <td>IDA only</td>\n      <td>1.053194e+09</td>\n    </tr>\n    <tr>\n      <th>14891</th>\n      <td>India</td>\n      <td>1.324171e+09</td>\n    </tr>\n    <tr>\n      <th>14910</th>\n      <td>Latin America &amp; Caribbean (excluding high income)</td>\n      <td>5.622548e+08</td>\n    </tr>\n    <tr>\n      <th>14916</th>\n      <td>Latin America &amp; Caribbean</td>\n      <td>6.376639e+08</td>\n    </tr>\n    <tr>\n      <th>14917</th>\n      <td>Least developed countries: UN classification</td>\n      <td>9.793879e+08</td>\n    </tr>\n    <tr>\n      <th>14918</th>\n      <td>Low income</td>\n      <td>7.140223e+08</td>\n    </tr>\n    <tr>\n      <th>14921</th>\n      <td>Lower middle income</td>\n      <td>2.931076e+09</td>\n    </tr>\n    <tr>\n      <th>14922</th>\n      <td>Low &amp; middle income</td>\n      <td>6.202020e+09</td>\n    </tr>\n    <tr>\n      <th>14924</th>\n      <td>Late-demographic dividend</td>\n      <td>2.264569e+09</td>\n    </tr>\n    <tr>\n      <th>14935</th>\n      <td>Middle East &amp; North Africa</td>\n      <td>4.367380e+08</td>\n    </tr>\n    <tr>\n      <th>14938</th>\n      <td>Middle income</td>\n      <td>5.487997e+09</td>\n    </tr>\n    <tr>\n      <th>14943</th>\n      <td>Middle East &amp; North Africa (excluding high inc...</td>\n      <td>3.737191e+08</td>\n    </tr>\n    <tr>\n      <th>14952</th>\n      <td>North America</td>\n      <td>3.597359e+08</td>\n    </tr>\n    <tr>\n      <th>14956</th>\n      <td>Nigeria</td>\n      <td>1.859896e+08</td>\n    </tr>\n    <tr>\n      <th>14963</th>\n      <td>OECD members</td>\n      <td>1.289987e+09</td>\n    </tr>\n    <tr>\n      <th>14966</th>\n      <td>Pakistan</td>\n      <td>1.932035e+08</td>\n    </tr>\n    <tr>\n      <th>14973</th>\n      <td>Pre-demographic dividend</td>\n      <td>8.792925e+08</td>\n    </tr>\n    <tr>\n      <th>14980</th>\n      <td>Post-demographic dividend</td>\n      <td>1.102779e+09</td>\n    </tr>\n    <tr>\n      <th>14984</th>\n      <td>Russian Federation</td>\n      <td>1.443424e+08</td>\n    </tr>\n    <tr>\n      <th>14986</th>\n      <td>South Asia</td>\n      <td>1.766394e+09</td>\n    </tr>\n    <tr>\n      <th>14997</th>\n      <td>Sub-Saharan Africa (excluding high income)</td>\n      <td>1.033118e+09</td>\n    </tr>\n    <tr>\n      <th>14999</th>\n      <td>Sub-Saharan Africa</td>\n      <td>1.033213e+09</td>\n    </tr>\n    <tr>\n      <th>15012</th>\n      <td>East Asia &amp; Pacific (IDA &amp; IBRD countries)</td>\n      <td>2.027896e+09</td>\n    </tr>\n    <tr>\n      <th>15013</th>\n      <td>Europe &amp; Central Asia (IDA &amp; IBRD countries)</td>\n      <td>4.553794e+08</td>\n    </tr>\n    <tr>\n      <th>15018</th>\n      <td>Latin America &amp; the Caribbean (IDA &amp; IBRD coun...</td>\n      <td>6.215349e+08</td>\n    </tr>\n    <tr>\n      <th>15020</th>\n      <td>Middle East &amp; North Africa (IDA &amp; IBRD countries)</td>\n      <td>3.691675e+08</td>\n    </tr>\n    <tr>\n      <th>15022</th>\n      <td>South Asia (IDA &amp; IBRD)</td>\n      <td>1.766394e+09</td>\n    </tr>\n    <tr>\n      <th>15023</th>\n      <td>Sub-Saharan Africa (IDA &amp; IBRD countries)</td>\n      <td>1.033213e+09</td>\n    </tr>\n    <tr>\n      <th>15031</th>\n      <td>Upper middle income</td>\n      <td>2.556922e+09</td>\n    </tr>\n    <tr>\n      <th>15033</th>\n      <td>United States</td>\n      <td>3.234059e+08</td>\n    </tr>\n    <tr>\n      <th>15041</th>\n      <td>World</td>\n      <td>7.444157e+09</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# remove the rows from the data that have Country Name values in the non_countries list\n# Store the filter results back into the df_2016 variable\n\nnon_countries = ['World',\n 'High income',\n 'OECD members',\n 'Post-demographic dividend',\n 'IDA & IBRD total',\n 'Low & middle income',\n 'Middle income',\n 'IBRD only',\n 'East Asia & Pacific',\n 'Europe & Central Asia',\n 'North America',\n 'Upper middle income',\n 'Late-demographic dividend',\n 'European Union',\n 'East Asia & Pacific (excluding high income)',\n 'East Asia & Pacific (IDA & IBRD countries)',\n 'Euro area',\n 'Early-demographic dividend',\n 'Lower middle income',\n 'Latin America & Caribbean',\n 'Latin America & the Caribbean (IDA & IBRD countries)',\n 'Latin America & Caribbean (excluding high income)',\n 'Europe & Central Asia (IDA & IBRD countries)',\n 'Middle East & North Africa',\n 'Europe & Central Asia (excluding high income)',\n 'South Asia (IDA & IBRD)',\n 'South Asia',\n 'Arab World',\n 'IDA total',\n 'Sub-Saharan Africa',\n 'Sub-Saharan Africa (IDA & IBRD countries)',\n 'Sub-Saharan Africa (excluding high income)',\n 'Middle East & North Africa (excluding high income)',\n 'Middle East & North Africa (IDA & IBRD countries)',\n 'Central Europe and the Baltics',\n 'Pre-demographic dividend',\n 'IDA only',\n 'Least developed countries: UN classification',\n 'IDA blend',\n 'Fragile and conflict affected situations',\n 'Heavily indebted poor countries (HIPC)',\n 'Low income',\n 'Small states',\n 'Other small states',\n 'Not classified',\n 'Caribbean small states',\n 'Pacific island small states']\n\n# remove non countries from the data\ndf_2016 = df_2016[~df_2016['Country Name'].isin(non_countries)]","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:34.327458Z","iopub.execute_input":"2024-08-19T06:45:34.327912Z","iopub.status.idle":"2024-08-19T06:45:34.339528Z","shell.execute_reply.started":"2024-08-19T06:45:34.327872Z","shell.execute_reply":"2024-08-19T06:45:34.338208Z"},"trusted":true},"execution_count":101,"outputs":[]},{"cell_type":"code","source":"# Re-rerun the Tukey code with this filtered data to find population outliers\n\n# Filter the data for the year 2016 and put the results in the population_2016 variable. You only need\n# to keep the Country Name and population columns\npopulation_2016 = df_2016[['Country Name','population']]\n\n# Calculate the first quartile of the population values\n# HINT: you can use the pandas quantile method \nQ1 = population_2016['population'].quantile(0.25)\n\n# Calculate the third quartile of the population values\nQ3 = population_2016['population'].quantile(0.75)\n\n# Calculate the interquartile range Q3 - Q1\nIQR = Q3 - Q1\n\n# Calculate the maximum value and minimum values according to the Tukey rule\n# max_value is Q3 + 1.5 * IQR while min_value is Q1 - 1.5 * IQR\nmax_value = Q3 + 1.5 * IQR\nmin_value = Q1 - 1.5 * IQR\n\n# filter the population_2016 data for population values that are greater than max_value or less than min_value\npopulation_outliers = population_2016[(population_2016['population'] > max_value) | (population_2016['population'] < min_value)]\npopulation_outliers","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:35.121738Z","iopub.execute_input":"2024-08-19T06:45:35.122194Z","iopub.status.idle":"2024-08-19T06:45:35.146112Z","shell.execute_reply.started":"2024-08-19T06:45:35.122159Z","shell.execute_reply":"2024-08-19T06:45:35.144877Z"},"trusted":true},"execution_count":102,"outputs":[{"execution_count":102,"output_type":"execute_result","data":{"text/plain":"             Country Name    population\n14802          Bangladesh  1.629516e+08\n14811              Brazil  2.076529e+08\n14822               China  1.378665e+09\n14825    Congo, Dem. Rep.  7.873615e+07\n14837             Germany  8.234867e+07\n14849    Egypt, Arab Rep.  9.568868e+07\n14854            Ethiopia  1.024032e+08\n14859              France  6.685977e+07\n14863      United Kingdom  6.559556e+07\n14888           Indonesia  2.611155e+08\n14891               India  1.324171e+09\n14894  Iran, Islamic Rep.  8.027743e+07\n14898               Italy  6.062750e+07\n14901               Japan  1.269945e+08\n14936              Mexico  1.275404e+08\n14956             Nigeria  1.859896e+08\n14966            Pakistan  1.932035e+08\n14969         Philippines  1.033202e+08\n14984  Russian Federation  1.443424e+08\n15015            Thailand  6.886351e+07\n15026              Turkey  7.951243e+07\n15033       United States  3.234059e+08\n15039             Vietnam  9.456907e+07","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>14802</th>\n      <td>Bangladesh</td>\n      <td>1.629516e+08</td>\n    </tr>\n    <tr>\n      <th>14811</th>\n      <td>Brazil</td>\n      <td>2.076529e+08</td>\n    </tr>\n    <tr>\n      <th>14822</th>\n      <td>China</td>\n      <td>1.378665e+09</td>\n    </tr>\n    <tr>\n      <th>14825</th>\n      <td>Congo, Dem. Rep.</td>\n      <td>7.873615e+07</td>\n    </tr>\n    <tr>\n      <th>14837</th>\n      <td>Germany</td>\n      <td>8.234867e+07</td>\n    </tr>\n    <tr>\n      <th>14849</th>\n      <td>Egypt, Arab Rep.</td>\n      <td>9.568868e+07</td>\n    </tr>\n    <tr>\n      <th>14854</th>\n      <td>Ethiopia</td>\n      <td>1.024032e+08</td>\n    </tr>\n    <tr>\n      <th>14859</th>\n      <td>France</td>\n      <td>6.685977e+07</td>\n    </tr>\n    <tr>\n      <th>14863</th>\n      <td>United Kingdom</td>\n      <td>6.559556e+07</td>\n    </tr>\n    <tr>\n      <th>14888</th>\n      <td>Indonesia</td>\n      <td>2.611155e+08</td>\n    </tr>\n    <tr>\n      <th>14891</th>\n      <td>India</td>\n      <td>1.324171e+09</td>\n    </tr>\n    <tr>\n      <th>14894</th>\n      <td>Iran, Islamic Rep.</td>\n      <td>8.027743e+07</td>\n    </tr>\n    <tr>\n      <th>14898</th>\n      <td>Italy</td>\n      <td>6.062750e+07</td>\n    </tr>\n    <tr>\n      <th>14901</th>\n      <td>Japan</td>\n      <td>1.269945e+08</td>\n    </tr>\n    <tr>\n      <th>14936</th>\n      <td>Mexico</td>\n      <td>1.275404e+08</td>\n    </tr>\n    <tr>\n      <th>14956</th>\n      <td>Nigeria</td>\n      <td>1.859896e+08</td>\n    </tr>\n    <tr>\n      <th>14966</th>\n      <td>Pakistan</td>\n      <td>1.932035e+08</td>\n    </tr>\n    <tr>\n      <th>14969</th>\n      <td>Philippines</td>\n      <td>1.033202e+08</td>\n    </tr>\n    <tr>\n      <th>14984</th>\n      <td>Russian Federation</td>\n      <td>1.443424e+08</td>\n    </tr>\n    <tr>\n      <th>15015</th>\n      <td>Thailand</td>\n      <td>6.886351e+07</td>\n    </tr>\n    <tr>\n      <th>15026</th>\n      <td>Turkey</td>\n      <td>7.951243e+07</td>\n    </tr>\n    <tr>\n      <th>15033</th>\n      <td>United States</td>\n      <td>3.234059e+08</td>\n    </tr>\n    <tr>\n      <th>15039</th>\n      <td>Vietnam</td>\n      <td>9.456907e+07</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Filter the data for the year 2016 and put the results in the population_2016 variable. You only need\n# to keep the Country Name and population columns\ngdp_2016 = df_2016[['Country Name','gdp']]\n\n# Calculate the first quartile of the population values\n# HINT: you can use the pandas quantile method \nQ1 = gdp_2016['gdp'].quantile(0.25)\n\n# Calculate the third quartile of the population values\nQ3 = gdp_2016['gdp'].quantile(0.75)\n\n# Calculate the interquartile range Q3 - Q1\nIQR = Q3 - Q1\n\n# Calculate the maximum value and minimum values according to the Tukey rule\n# max_value is Q3 + 1.5 * IQR while min_value is Q1 - 1.5 * IQR\nmax_value = Q3 + 1.5 * IQR\nmin_value = Q1 - 1.5 * IQR\n\n# filter the population_2016 data for population values that are greater than max_value or less than min_value\ngdp_outliers = gdp_2016[(gdp_2016['gdp'] > max_value) | (gdp_2016['gdp'] < min_value)]\ngdp_outliers","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:35.892756Z","iopub.execute_input":"2024-08-19T06:45:35.893192Z","iopub.status.idle":"2024-08-19T06:45:35.915070Z","shell.execute_reply.started":"2024-08-19T06:45:35.893160Z","shell.execute_reply":"2024-08-19T06:45:35.913885Z"},"trusted":true},"execution_count":103,"outputs":[{"execution_count":103,"output_type":"execute_result","data":{"text/plain":"             Country Name           gdp\n14791           Argentina  5.548609e+11\n14795           Australia  1.208039e+12\n14796             Austria  3.908000e+11\n14799             Belgium  4.675455e+11\n14811              Brazil  1.793989e+12\n14817              Canada  1.535768e+12\n14819         Switzerland  6.687453e+11\n14822               China  1.119099e+13\n14837             Germany  3.477796e+12\n14852               Spain  1.237255e+12\n14859              France  2.465134e+12\n14863      United Kingdom  2.650850e+12\n14888           Indonesia  9.322565e+11\n14891               India  2.274230e+12\n14894  Iran, Islamic Rep.  4.189767e+11\n14898               Italy  1.859384e+12\n14901               Japan  4.949273e+12\n14908         Korea, Rep.  1.414804e+12\n14936              Mexico  1.076912e+12\n14956             Nigeria  4.046527e+11\n14958         Netherlands  7.772275e+11\n14972              Poland  4.714003e+11\n14984  Russian Federation  1.284728e+12\n14987        Saudi Arabia  6.449355e+11\n15005              Sweden  5.144600e+11\n15015            Thailand  4.117552e+11\n15026              Turkey  8.637216e+11\n15033       United States  1.862448e+13\n15036       Venezuela, RB  4.823593e+11","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Country Name</th>\n      <th>gdp</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>14791</th>\n      <td>Argentina</td>\n      <td>5.548609e+11</td>\n    </tr>\n    <tr>\n      <th>14795</th>\n      <td>Australia</td>\n      <td>1.208039e+12</td>\n    </tr>\n    <tr>\n      <th>14796</th>\n      <td>Austria</td>\n      <td>3.908000e+11</td>\n    </tr>\n    <tr>\n      <th>14799</th>\n      <td>Belgium</td>\n      <td>4.675455e+11</td>\n    </tr>\n    <tr>\n      <th>14811</th>\n      <td>Brazil</td>\n      <td>1.793989e+12</td>\n    </tr>\n    <tr>\n      <th>14817</th>\n      <td>Canada</td>\n      <td>1.535768e+12</td>\n    </tr>\n    <tr>\n      <th>14819</th>\n      <td>Switzerland</td>\n      <td>6.687453e+11</td>\n    </tr>\n    <tr>\n      <th>14822</th>\n      <td>China</td>\n      <td>1.119099e+13</td>\n    </tr>\n    <tr>\n      <th>14837</th>\n      <td>Germany</td>\n      <td>3.477796e+12</td>\n    </tr>\n    <tr>\n      <th>14852</th>\n      <td>Spain</td>\n      <td>1.237255e+12</td>\n    </tr>\n    <tr>\n      <th>14859</th>\n      <td>France</td>\n      <td>2.465134e+12</td>\n    </tr>\n    <tr>\n      <th>14863</th>\n      <td>United Kingdom</td>\n      <td>2.650850e+12</td>\n    </tr>\n    <tr>\n      <th>14888</th>\n      <td>Indonesia</td>\n      <td>9.322565e+11</td>\n    </tr>\n    <tr>\n      <th>14891</th>\n      <td>India</td>\n      <td>2.274230e+12</td>\n    </tr>\n    <tr>\n      <th>14894</th>\n      <td>Iran, Islamic Rep.</td>\n      <td>4.189767e+11</td>\n    </tr>\n    <tr>\n      <th>14898</th>\n      <td>Italy</td>\n      <td>1.859384e+12</td>\n    </tr>\n    <tr>\n      <th>14901</th>\n      <td>Japan</td>\n      <td>4.949273e+12</td>\n    </tr>\n    <tr>\n      <th>14908</th>\n      <td>Korea, Rep.</td>\n      <td>1.414804e+12</td>\n    </tr>\n    <tr>\n      <th>14936</th>\n      <td>Mexico</td>\n      <td>1.076912e+12</td>\n    </tr>\n    <tr>\n      <th>14956</th>\n      <td>Nigeria</td>\n      <td>4.046527e+11</td>\n    </tr>\n    <tr>\n      <th>14958</th>\n      <td>Netherlands</td>\n      <td>7.772275e+11</td>\n    </tr>\n    <tr>\n      <th>14972</th>\n      <td>Poland</td>\n      <td>4.714003e+11</td>\n    </tr>\n    <tr>\n      <th>14984</th>\n      <td>Russian Federation</td>\n      <td>1.284728e+12</td>\n    </tr>\n    <tr>\n      <th>14987</th>\n      <td>Saudi Arabia</td>\n      <td>6.449355e+11</td>\n    </tr>\n    <tr>\n      <th>15005</th>\n      <td>Sweden</td>\n      <td>5.144600e+11</td>\n    </tr>\n    <tr>\n      <th>15015</th>\n      <td>Thailand</td>\n      <td>4.117552e+11</td>\n    </tr>\n    <tr>\n      <th>15026</th>\n      <td>Turkey</td>\n      <td>8.637216e+11</td>\n    </tr>\n    <tr>\n      <th>15033</th>\n      <td>United States</td>\n      <td>1.862448e+13</td>\n    </tr>\n    <tr>\n      <th>15036</th>\n      <td>Venezuela, RB</td>\n      <td>4.823593e+11</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# Find country names that are in both the population_outliers and the gdp_outliers \n# HINT: you can use the pandas intersection() method and python set() and list() methods\n\nlist(set(population_outliers['Country Name']).intersection(gdp_outliers['Country Name']))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:36.644539Z","iopub.execute_input":"2024-08-19T06:45:36.644942Z","iopub.status.idle":"2024-08-19T06:45:36.653215Z","shell.execute_reply.started":"2024-08-19T06:45:36.644911Z","shell.execute_reply":"2024-08-19T06:45:36.652118Z"},"trusted":true},"execution_count":104,"outputs":[{"execution_count":104,"output_type":"execute_result","data":{"text/plain":"['Mexico',\n 'Germany',\n 'Indonesia',\n 'Italy',\n 'United Kingdom',\n 'Iran, Islamic Rep.',\n 'United States',\n 'Japan',\n 'China',\n 'Nigeria',\n 'France',\n 'Russian Federation',\n 'India',\n 'Thailand',\n 'Brazil',\n 'Turkey']"},"metadata":{}}]},{"cell_type":"code","source":"# Find country names that are in the population outliers list but not the gdp outliers list\n# HINT: Python's set() and list() methods should be helpful\n\nlist(set(population_outliers['Country Name']) - set(gdp_outliers['Country Name']))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:37.408601Z","iopub.execute_input":"2024-08-19T06:45:37.409743Z","iopub.status.idle":"2024-08-19T06:45:37.417461Z","shell.execute_reply.started":"2024-08-19T06:45:37.409699Z","shell.execute_reply":"2024-08-19T06:45:37.416228Z"},"trusted":true},"execution_count":105,"outputs":[{"execution_count":105,"output_type":"execute_result","data":{"text/plain":"['Egypt, Arab Rep.',\n 'Bangladesh',\n 'Philippines',\n 'Congo, Dem. Rep.',\n 'Vietnam',\n 'Ethiopia',\n 'Pakistan']"},"metadata":{}}]},{"cell_type":"code","source":"# Find country names that are in the gdp outliers list but not the population outliers list\n# HINT: Python's set() and list() methods should be helpful\n\nlist(set(gdp_outliers['Country Name']) - set(population_outliers['Country Name']))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:38.105225Z","iopub.execute_input":"2024-08-19T06:45:38.105739Z","iopub.status.idle":"2024-08-19T06:45:38.117201Z","shell.execute_reply.started":"2024-08-19T06:45:38.105709Z","shell.execute_reply":"2024-08-19T06:45:38.115957Z"},"trusted":true},"execution_count":106,"outputs":[{"execution_count":106,"output_type":"execute_result","data":{"text/plain":"['Venezuela, RB',\n 'Korea, Rep.',\n 'Saudi Arabia',\n 'Canada',\n 'Poland',\n 'Argentina',\n 'Austria',\n 'Belgium',\n 'Netherlands',\n 'Australia',\n 'Spain',\n 'Switzerland',\n 'Sweden']"},"metadata":{}}]},{"cell_type":"code","source":"x = list(df_2016['population'])\ny = list(df_2016['gdp'])\ntext = df_2016['Country Name']\n\nfig, ax = plt.subplots(figsize=(15,10))\nax.scatter(x, y)\nplt.title('GDP vs Population')\nplt.xlabel('population')\nplt.ylabel('GDP')\nfor i, txt in enumerate(text):\n    ax.annotate(txt, (x[i],y[i]))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:38.780602Z","iopub.execute_input":"2024-08-19T06:45:38.781009Z","iopub.status.idle":"2024-08-19T06:45:40.562764Z","shell.execute_reply.started":"2024-08-19T06:45:38.780979Z","shell.execute_reply":"2024-08-19T06:45:40.561589Z"},"trusted":true},"execution_count":107,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"df_no_large = (df_2016['Country Name'] != 'United States') & (df_2016['Country Name'] != 'India') & (df_2016['Country Name'] != 'China')\nx = list(df_2016[df_no_large]['population'])\ny = list(df_2016[df_no_large]['gdp'])\ntext = df_2016[df_no_large]['Country Name']\n\nfig, ax = plt.subplots(figsize=(15,10))\nax.scatter(x, y)\nplt.title('GDP vs Population')\nplt.xlabel('population')\nplt.ylabel('GDP')\nfor i, txt in enumerate(text):\n    ax.annotate(txt, (x[i],y[i]))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:40.564630Z","iopub.execute_input":"2024-08-19T06:45:40.565003Z","iopub.status.idle":"2024-08-19T06:45:42.184167Z","shell.execute_reply.started":"2024-08-19T06:45:40.564972Z","shell.execute_reply":"2024-08-19T06:45:42.182984Z"},"trusted":true},"execution_count":108,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"from sklearn.linear_model import LinearRegression\n\n# fit a linear regression model on the population and gdp data\nmodel = LinearRegression()\nmodel.fit(df_2016['population'].values.reshape(-1, 1), df_2016['gdp'].values.reshape(-1, 1))\n\n# plot the data along with predictions from the linear regression model\ninputs = np.linspace(1, 2000000000, num=50)\npredictions = model.predict(inputs.reshape(-1,1))\n\ndf_2016.plot('population', 'gdp', kind='scatter')\nplt.plot(inputs, predictions)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:42.186383Z","iopub.execute_input":"2024-08-19T06:45:42.186850Z","iopub.status.idle":"2024-08-19T06:45:43.385468Z","shell.execute_reply.started":"2024-08-19T06:45:42.186781Z","shell.execute_reply":"2024-08-19T06:45:43.384339Z"},"trusted":true},"execution_count":109,"outputs":[{"execution_count":109,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7e54b39d5420>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":"iVBORw0KGgoAAAANSUhEUgAAAkAAAAHACAYAAABKwtdzAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuNSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/xnp5ZAAAACXBIWXMAAA9hAAAPYQGoP6dpAABY5UlEQVR4nO3deXxU5d3//9dkJ0ACISEhEEhCElBkXyKbgAQCpdxSW6tUZRW1FRWCtdLfXZDqt6iVTaCilUVsBbUoetcWgWBAEEGWVFHIRiBsgSSQFcgyc35/IFNHAiQxyZlk3s/HIw+da64587k4Sead61znHIthGAYiIiIiLsTN7AJERERE6psCkIiIiLgcBSARERFxOQpAIiIi4nIUgERERMTlKACJiIiIy1EAEhEREZejACQiIiIuRwFIREREXI4CkIiIiLgcBaCb2LFjB2PHjiU0NBSLxcLGjRur9frLly8zadIkunbtioeHB+PGjbumz86dOxk4cCCtWrWiSZMmdO7cmUWLFtXOAEREROQaHmYX4OxKSkro3r07U6ZM4e677672661WK02aNOGJJ55gw4YNlfZp2rQp06dPp1u3bjRt2pSdO3fyyCOP0LRpUx5++OEfOwQRERH5AYtuhlp1FouFDz74wGEWp7S0lP/v//v/WLduHfn5+dx22228+OKLDB069JrXT5o0ifz8/CrNIt199900bdqUt956q/YGICIiIoAOgf1o06dPZ/fu3axfv56vvvqKe+65h1GjRpGWllbjbR48eJDPP/+cIUOG1GKlIiIicpUOgf0IWVlZrF69mqysLEJDQwF46qmn2LRpE6tXr+ZPf/pTtbbXrl07cnJyqKio4Nlnn+Whhx6qi7JFRERcngLQj/D1119jtVqJiYlxaC8tLaVVq1bV3t5nn31GcXExX3zxBc888wxRUVGMHz++tsoVERGR7ygA/QjFxcW4u7uzf/9+3N3dHZ5r1qxZtbcXEREBQNeuXTl79izPPvusApCIiEgdUAD6EXr27InVauXcuXMMHjy4Vrdts9koLS2t1W2KiIjIFQpAN1FcXEx6err9cWZmJsnJyQQEBBATE8P999/PhAkTWLBgAT179iQnJ4fExES6devGmDFjAPj2228pKyvj/PnzFBUVkZycDECPHj0AWL58Oe3bt6dz587AlWsPvfzyyzzxxBP1OlYRERFXodPgbyIpKYlhw4Zd0z5x4kTWrFlDeXk5zz//PGvXruXUqVMEBgZy++23M2/ePLp27QpAeHg4x48fv2YbV//ply5dymuvvUZmZiYeHh507NiRadOm8cgjj+DmphP1REREapsCkIiIiLgcTS+IiIiIy1EAEhEREZejRdCVsNlsnD59mubNm2OxWMwuR0RERKrAMAyKiooIDQ296RpaBaBKnD59mrCwMLPLEBERkRo4ceIE7dq1u2EfBaBKNG/eHLjyD+jn52dyNSIiIlIVhYWFhIWF2T/Hb0QBqBJXD3v5+fkpAImIiDQwVVm+okXQIiIi4nIUgERERMTlKACJiIiIy1EAEhEREZejACQiIiIuRwFIREREXI4CkIiIiLgcBSARERFxOQpAIiIi4nIUgERERMTl6FYY4lSO5hRz/PxFwls1JSKwqdnliIhII6UAJE4h/2IZT6xLZkdajr3tjugglo7vib+vp4mViYhIY6RDYOIUnliXzK70XIe2Xem5PL7uoEkViYhIY6YAJKY7mlPMjrQcrIbh0G41DHak5ZCZW2JSZSIi0lgpAInpjp+/eMPnj+UpAImISO1SABLTdQjwveHz4a20GFpERGqXApCYLjKoGXdEB+FusTi0u1ss3BEdpLPBRESk1ikAiVNYOr4nA6MCHdoGRgWydHxPkyoSEZHGTKfBi1Pw9/Vk7dR+ZOaWcCyvRNcBEhGROqUAJE4lIlDBR0RE6p4OgYmIiIjLUQASERERl6MAJCIiIi5HAUhERERcjgKQiIiIuBwFIBEREXE5CkAiIiLichSARERExOUoAImIiIjLUQASERERl2NqANqxYwdjx44lNDQUi8XCxo0bb9h/0qRJWCyWa766dOli7/Pss89e83znzp3reCQiIiLSkJgagEpKSujevTvLly+vUv8lS5Zw5swZ+9eJEycICAjgnnvucejXpUsXh347d+6si/JFRESkgTL1ZqijR49m9OjRVe7v7++Pv7+//fHGjRu5cOECkydPdujn4eFBSEhIrdUpIiIijUuDXgO0cuVK4uLi6NChg0N7WloaoaGhREZGcv/995OVlXXD7ZSWllJYWOjwJSIiIo1Xgw1Ap0+f5t///jcPPfSQQ3tsbCxr1qxh06ZNvPrqq2RmZjJ48GCKioquu6358+fbZ5f8/f0JCwur6/JFRETERBbDMAyziwCwWCx88MEHjBs3rkr958+fz4IFCzh9+jReXl7X7Zefn0+HDh1YuHAhU6dOrbRPaWkppaWl9seFhYWEhYVRUFCAn59ftcYhIiIi5igsLMTf379Kn9+mrgGqKcMwWLVqFQ8++OANww9AixYtiImJIT09/bp9vL298fb2ru0yRURExEk1yENg27dvJz09/bozOt9XXFxMRkYGbdq0qYfKREREpCEwNQAVFxeTnJxMcnIyAJmZmSQnJ9sXLc+ePZsJEyZc87qVK1cSGxvLbbfdds1zTz31FNu3b+fYsWN8/vnn/OxnP8Pd3Z3x48fX6VhERESk4TD1ENi+ffsYNmyY/XFCQgIAEydOZM2aNZw5c+aaM7gKCgrYsGEDS5YsqXSbJ0+eZPz48eTl5REUFMSgQYP44osvCAoKqruBiIiISIPiNIugnUl1FlGJiIiIc6jO53eDXAMkIiIi8mMoAImIiIjLUQASERERl6MAJCIiIi5HAUhERERcjgKQiIiIuBwFIBEREXE5CkAiIiLichSARERExOUoAImIiIjLUQASERERl6MAJCIiIi5HAUhERERcjgKQiIiIuBwFIBEREXE5CkAiIiLichSARERExOUoAImIiIjLUQASERERl6MAJCIiIi5HAUhERERcjgKQiIiIuBwFIBEREXE5CkAiIiLichSARERExOUoAImIiIjLUQASERERl6MAJCIiIi5HAUhERERcjgKQiIiIuBwFIBEREXE5CkAiIiLichSARERExOUoAImIiIjLMTUA7dixg7FjxxIaGorFYmHjxo037J+UlITFYrnmKzs726Hf8uXLCQ8Px8fHh9jYWPbu3VuHoxAREZGGxtQAVFJSQvfu3Vm+fHm1XpeSksKZM2fsX61bt7Y/984775CQkMDcuXM5cOAA3bt3Jz4+nnPnztV2+SIiItJAeZj55qNHj2b06NHVfl3r1q1p0aJFpc8tXLiQadOmMXnyZABWrFjBxx9/zKpVq3jmmWd+TLkiIiLSSDTINUA9evSgTZs2jBgxgl27dtnby8rK2L9/P3FxcfY2Nzc34uLi2L1793W3V1paSmFhocOXiIiINF4NKgC1adOGFStWsGHDBjZs2EBYWBhDhw7lwIEDAOTm5mK1WgkODnZ4XXBw8DXrhL5v/vz5+Pv727/CwsLqdBwiIiJiLlMPgVVXp06d6NSpk/3xgAEDyMjIYNGiRbz11ls13u7s2bNJSEiwPy4sLFQIEhERacQaVACqTL9+/di5cycAgYGBuLu7c/bsWYc+Z8+eJSQk5Lrb8Pb2xtvbu07rFBEREefRoA6BVSY5OZk2bdoA4OXlRe/evUlMTLQ/b7PZSExMpH///maVKCIiIk7G1Bmg4uJi0tPT7Y8zMzNJTk4mICCA9u3bM3v2bE6dOsXatWsBWLx4MREREXTp0oXLly/zxhtvsG3bNjZv3mzfRkJCAhMnTqRPnz7069ePxYsXU1JSYj8rTERERMTUALRv3z6GDRtmf3x1Hc7EiRNZs2YNZ86cISsry/58WVkZs2bN4tSpU/j6+tKtWze2bt3qsI17772XnJwc5syZQ3Z2Nj169GDTpk3XLIwWERER12UxDMMwuwhnU1hYiL+/PwUFBfj5+ZldjoiIiFRBdT6/G/waIBEREZHqUgASERERl6MAJCIiIi5HAUhERERcjgKQiIiIuBwFIBEREXE5CkAiIiLichSARERExOUoAImIiIjLUQASERERl6MAJCIiIi5HAUhERERcjgKQiIiIuBwFIBEREXE5CkAiIiLichSARERExOUoAImIiIjLUQASERERl6MAJCIiIi5HAUhERERcjgKQiIiIuBwFIBEREXE5CkAiIiLichSARERExOUoAImIiIjLUQASERERl6MAJCIiIi5HAUhERERcjgKQiIiI1KtLZVYMwzC1BgUgERERqReXy6288dlRBr24jR1puabW4mHqu4uIiEijV1ph5Z0vT7BsWzrnikoBePfLEwyJCTKtJgUgERERqRPlVhv/2H+SZdvSOZV/CYC2LZrwxPAo7u7VztTaFIBERESkVlltBhsPnmJJYhpZ5y8CEOznzfRhUfyybxjeHu4mV6gAJCIiIrXEZjP459dnWLw1laM5JQAENvPi10OjuD+2PT6e5gefq0xdBL1jxw7Gjh1LaGgoFouFjRs33rD/+++/z4gRIwgKCsLPz4/+/fvzySefOPR59tlnsVgsDl+dO3euw1GIiIi4NsMw2HQom5+88hlPrDvI0ZwSWvh68rtRndnx9DCmDopwqvADJs8AlZSU0L17d6ZMmcLdd9990/47duxgxIgR/OlPf6JFixasXr2asWPHsmfPHnr27Gnv16VLF7Zu3Wp/7OGhiS4REZHaZhgGSSk5LNyS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"},"metadata":{}}]},{"cell_type":"code","source":"# Remove the United States to see what happens with the linear regression model\ndf_2016[df_2016['Country Name'] != 'United States'].plot('population', 'gdp', kind='scatter')\n# plt.plot(inputs, predictions)\nmodel.fit(df_2016[df_2016['Country Name'] != 'United States']['population'].values.reshape(-1, 1), \n          df_2016[df_2016['Country Name'] != 'United States']['gdp'].values.reshape(-1, 1))\ninputs = np.linspace(1, 2000000000, num=50)\npredictions = model.predict(inputs.reshape(-1,1))\nplt.plot(inputs, predictions)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:48.541946Z","iopub.execute_input":"2024-08-19T06:45:48.543031Z","iopub.status.idle":"2024-08-19T06:45:48.872994Z","shell.execute_reply.started":"2024-08-19T06:45:48.542988Z","shell.execute_reply":"2024-08-19T06:45:48.871913Z"},"trusted":true},"execution_count":110,"outputs":[{"execution_count":110,"output_type":"execute_result","data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7e54ca6f60e0>]"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline \n\n# read in the projects data set and do basic wrangling \ngdp = pd.read_csv('../input/world-bank-datasets/gdp_data.csv', skiprows=4)\ngdp.drop(['Unnamed: 62', 'Country Code', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\npopulation = pd.read_csv('../input/world-bank-datasets/population_data.csv', skiprows=4)\npopulation.drop(['Unnamed: 62', 'Country Code', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\n\n\n# Reshape the data sets so that they are in long format\ngdp_melt = gdp.melt(id_vars=['Country Name'], \n                    var_name='year', \n                    value_name='gdp')\n\n# Use back fill and forward fill to fill in missing gdp values\ngdp_melt['gdp'] = gdp_melt.sort_values('year').groupby('Country Name')['gdp'].fillna(method='ffill').fillna(method='bfill')\n\npopulation_melt = population.melt(id_vars=['Country Name'], \n                                  var_name='year', \n                                  value_name='population')\n\n# Use back fill and forward fill to fill in missing population values\npopulation_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n\n# merge the population and gdp data together into one data frame\ndf_country = gdp_melt.merge(population_melt, on=('Country Name', 'year'))\n\n# filter data for the year 2016\ndf_2016 = df_country[df_country['year'] == '2016']\n\n# filter out values that are not countries\nnon_countries = ['World',\n 'High income',\n 'OECD members',\n 'Post-demographic dividend',\n 'IDA & IBRD total',\n 'Low & middle income',\n 'Middle income',\n 'IBRD only',\n 'East Asia & Pacific',\n 'Europe & Central Asia',\n 'North America',\n 'Upper middle income',\n 'Late-demographic dividend',\n 'European Union',\n 'East Asia & Pacific (excluding high income)',\n 'East Asia & Pacific (IDA & IBRD countries)',\n 'Euro area',\n 'Early-demographic dividend',\n 'Lower middle income',\n 'Latin America & Caribbean',\n 'Latin America & the Caribbean (IDA & IBRD countries)',\n 'Latin America & Caribbean (excluding high income)',\n 'Europe & Central Asia (IDA & IBRD countries)',\n 'Middle East & North Africa',\n 'Europe & Central Asia (excluding high income)',\n 'South Asia (IDA & IBRD)',\n 'South Asia',\n 'Arab World',\n 'IDA total',\n 'Sub-Saharan Africa',\n 'Sub-Saharan Africa (IDA & IBRD countries)',\n 'Sub-Saharan Africa (excluding high income)',\n 'Middle East & North Africa (excluding high income)',\n 'Middle East & North Africa (IDA & IBRD countries)',\n 'Central Europe and the Baltics',\n 'Pre-demographic dividend',\n 'IDA only',\n 'Least developed countries: UN classification',\n 'IDA blend',\n 'Fragile and conflict affected situations',\n 'Heavily indebted poor countries (HIPC)',\n 'Low income',\n 'Small states',\n 'Other small states',\n 'Not classified',\n 'Caribbean small states',\n 'Pacific island small states']\n\n# remove non countries from the data\ndf_2016 = df_2016[~df_2016['Country Name'].isin(non_countries)]\n\n\n# plot the data\nx = list(df_2016['population'])\ny = list(df_2016['gdp'])\ntext = df_2016['Country Name']\n\nfig, ax = plt.subplots(figsize=(15,10))\nax.scatter(x, y)\nplt.title('GDP vs Population')\nplt.xlabel('GDP')\nplt.ylabel('Population')\nfor i, txt in enumerate(text):\n    ax.annotate(txt, (x[i],y[i]))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:53.403619Z","iopub.execute_input":"2024-08-19T06:45:53.404673Z","iopub.status.idle":"2024-08-19T06:45:53.695366Z","shell.execute_reply.started":"2024-08-19T06:45:53.404620Z","shell.execute_reply":"2024-08-19T06:45:53.693695Z"},"trusted":true},"execution_count":111,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[111], line 7\u001b[0m\n\u001b[1;32m      4\u001b[0m get_ipython()\u001b[38;5;241m.\u001b[39mrun_line_magic(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmatplotlib\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124minline\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m      6\u001b[0m \u001b[38;5;66;03m# read in the projects data set and do basic wrangling \u001b[39;00m\n\u001b[0;32m----> 7\u001b[0m gdp \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m../input/world-bank-datasets/gdp_data.csv\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mskiprows\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m4\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      8\u001b[0m gdp\u001b[38;5;241m.\u001b[39mdrop([\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mUnnamed: 62\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCountry Code\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mIndicator Name\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mIndicator Code\u001b[39m\u001b[38;5;124m'\u001b[39m], inplace\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, axis\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n\u001b[1;32m      9\u001b[0m population \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m../input/world-bank-datasets/population_data.csv\u001b[39m\u001b[38;5;124m'\u001b[39m, skiprows\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m4\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[1;32m   1014\u001b[0m     dialect,\n\u001b[1;32m   1015\u001b[0m     delimiter,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[1;32m   1023\u001b[0m )\n\u001b[1;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[0;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[1;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[0;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m \u001b[43mTextFileReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[1;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[1;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1881\u001b[0m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1882\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1883\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1884\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcompression\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1885\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmemory_map\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1886\u001b[0m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1887\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding_errors\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstrict\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1888\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstorage_options\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1889\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[1;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[1;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[1;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[1;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[0;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[1;32m    874\u001b[0m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    875\u001b[0m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    876\u001b[0m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    877\u001b[0m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    878\u001b[0m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    879\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '../input/world-bank-datasets/gdp_data.csv'"],"ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '../input/world-bank-datasets/gdp_data.csv'","output_type":"error"}]},{"cell_type":"code","source":"# Write a function that uses the Tukey rule to detect outliers in a dataframe column \n# and then removes that entire row from the data frame. For example, if the United States \n# is detected to be a GDP outlier, then remove the entire row of United States data.\n# The function inputs should be a data frame and a column name.\n# The output is a data_frame with the outliers eliminated\n\n# HINT: Re-use code from the previous exercise\n\ndef tukey_rule(data_frame, column_name):\n    data = data_frame[column_name]\n    Q1 = data.quantile(0.25)\n    Q3 = data.quantile(0.75)\n\n    IQR = Q3 - Q1\n\n    max_value = Q3 + 1.5 * IQR\n    min_value = Q1 - 1.5 * IQR\n    \n    return data_frame[(data_frame[column_name] < max_value) & (data_frame[column_name] > min_value)]","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:54.442119Z","iopub.execute_input":"2024-08-19T06:45:54.442502Z","iopub.status.idle":"2024-08-19T06:45:54.449595Z","shell.execute_reply.started":"2024-08-19T06:45:54.442473Z","shell.execute_reply":"2024-08-19T06:45:54.448341Z"},"trusted":true},"execution_count":112,"outputs":[]},{"cell_type":"code","source":"# Use the tukey_rule() function to make a new data frame with gdp and population outliers removed\n# Put the results in the df_outlier_removed variable\n\ndf_outlier_removed = df_2016.copy()\n\nfor column in ['population','gdp']:\n    df_outlier_removed = tukey_rule(df_outlier_removed, column)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:55.329377Z","iopub.execute_input":"2024-08-19T06:45:55.329827Z","iopub.status.idle":"2024-08-19T06:45:55.341736Z","shell.execute_reply.started":"2024-08-19T06:45:55.329772Z","shell.execute_reply":"2024-08-19T06:45:55.340633Z"},"trusted":true},"execution_count":113,"outputs":[]},{"cell_type":"code","source":"# plot the data\nx = list(df_outlier_removed['population'])\ny = list(df_outlier_removed['gdp'])\ntext = df_outlier_removed['Country Name']\n\nfig, ax = plt.subplots(figsize=(15,10))\nax.scatter(x, y)\nplt.title('GDP vs Population')\nplt.xlabel('GDP')\nplt.ylabel('Population')\nfor i, txt in enumerate(text):\n    ax.annotate(txt, (x[i],y[i]))","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:56.081336Z","iopub.execute_input":"2024-08-19T06:45:56.081735Z","iopub.status.idle":"2024-08-19T06:45:57.435942Z","shell.execute_reply.started":"2024-08-19T06:45:56.081706Z","shell.execute_reply":"2024-08-19T06:45:57.434838Z"},"trusted":true},"execution_count":114,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x1000 with 1 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline \n\n# read in the projects data set and do basic wrangling \ngdp = pd.read_csv('../input/world-bank-datasets/gdp_data.csv', skiprows=4)\ngdp.drop(['Unnamed: 62', 'Country Code', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\npopulation = pd.read_csv('../input/world-bank-datasets/population_data.csv', skiprows=4)\npopulation.drop(['Unnamed: 62', 'Country Code', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\n\n\n# Reshape the data sets so that they are in long format\ngdp_melt = gdp.melt(id_vars=['Country Name'], \n                    var_name='year', \n                    value_name='gdp')\n\n# Use back fill and forward fill to fill in missing gdp values\ngdp_melt['gdp'] = gdp_melt.sort_values('year').groupby('Country Name')['gdp'].fillna(method='ffill').fillna(method='bfill')\n\npopulation_melt = population.melt(id_vars=['Country Name'], \n                                  var_name='year', \n                                  value_name='population')\n\n# Use back fill and forward fill to fill in missing population values\npopulation_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n\n# merge the population and gdp data together into one data frame\ndf_country = gdp_melt.merge(population_melt, on=('Country Name', 'year'))\n\n# filter data for the year 2016\ndf_2016 = df_country[df_country['year'] == '2016']\n\n# filter out values that are not countries\nnon_countries = ['World',\n 'High income',\n 'OECD members',\n 'Post-demographic dividend',\n 'IDA & IBRD total',\n 'Low & middle income',\n 'Middle income',\n 'IBRD only',\n 'East Asia & Pacific',\n 'Europe & Central Asia',\n 'North America',\n 'Upper middle income',\n 'Late-demographic dividend',\n 'European Union',\n 'East Asia & Pacific (excluding high income)',\n 'East Asia & Pacific (IDA & IBRD countries)',\n 'Euro area',\n 'Early-demographic dividend',\n 'Lower middle income',\n 'Latin America & Caribbean',\n 'Latin America & the Caribbean (IDA & IBRD countries)',\n 'Latin America & Caribbean (excluding high income)',\n 'Europe & Central Asia (IDA & IBRD countries)',\n 'Middle East & North Africa',\n 'Europe & Central Asia (excluding high income)',\n 'South Asia (IDA & IBRD)',\n 'South Asia',\n 'Arab World',\n 'IDA total',\n 'Sub-Saharan Africa',\n 'Sub-Saharan Africa (IDA & IBRD countries)',\n 'Sub-Saharan Africa (excluding high income)',\n 'Middle East & North Africa (excluding high income)',\n 'Middle East & North Africa (IDA & IBRD countries)',\n 'Central Europe and the Baltics',\n 'Pre-demographic dividend',\n 'IDA only',\n 'Least developed countries: UN classification',\n 'IDA blend',\n 'Fragile and conflict affected situations',\n 'Heavily indebted poor countries (HIPC)',\n 'Low income',\n 'Small states',\n 'Other small states',\n 'Not classified',\n 'Caribbean small states',\n 'Pacific island small states']\n\n# remove non countries from the data\ndf_2016 = df_2016[~df_2016['Country Name'].isin(non_countries)]\n\n\n# show the first ten rows\nprint('first ten rows of data')\ndf_2016.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:57.437925Z","iopub.execute_input":"2024-08-19T06:45:57.438274Z","iopub.status.idle":"2024-08-19T06:45:57.643809Z","shell.execute_reply.started":"2024-08-19T06:45:57.438244Z","shell.execute_reply":"2024-08-19T06:45:57.642235Z"},"trusted":true},"execution_count":115,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","Cell \u001b[0;32mIn[115], line 7\u001b[0m\n\u001b[1;32m      4\u001b[0m get_ipython()\u001b[38;5;241m.\u001b[39mrun_line_magic(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mmatplotlib\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124minline\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[1;32m      6\u001b[0m \u001b[38;5;66;03m# read in the projects data set and do basic wrangling \u001b[39;00m\n\u001b[0;32m----> 7\u001b[0m gdp \u001b[38;5;241m=\u001b[39m \u001b[43mpd\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mread_csv\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43m../input/world-bank-datasets/gdp_data.csv\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mskiprows\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m4\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[1;32m      8\u001b[0m gdp\u001b[38;5;241m.\u001b[39mdrop([\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mUnnamed: 62\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCountry Code\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mIndicator Name\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mIndicator Code\u001b[39m\u001b[38;5;124m'\u001b[39m], inplace\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mTrue\u001b[39;00m, axis\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m1\u001b[39m)\n\u001b[1;32m      9\u001b[0m population \u001b[38;5;241m=\u001b[39m pd\u001b[38;5;241m.\u001b[39mread_csv(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m../input/world-bank-datasets/population_data.csv\u001b[39m\u001b[38;5;124m'\u001b[39m, skiprows\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m4\u001b[39m)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1026\u001b[0m, in \u001b[0;36mread_csv\u001b[0;34m(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend)\u001b[0m\n\u001b[1;32m   1013\u001b[0m kwds_defaults \u001b[38;5;241m=\u001b[39m _refine_defaults_read(\n\u001b[1;32m   1014\u001b[0m     dialect,\n\u001b[1;32m   1015\u001b[0m     delimiter,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   1022\u001b[0m     dtype_backend\u001b[38;5;241m=\u001b[39mdtype_backend,\n\u001b[1;32m   1023\u001b[0m )\n\u001b[1;32m   1024\u001b[0m kwds\u001b[38;5;241m.\u001b[39mupdate(kwds_defaults)\n\u001b[0;32m-> 1026\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_read\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:620\u001b[0m, in \u001b[0;36m_read\u001b[0;34m(filepath_or_buffer, kwds)\u001b[0m\n\u001b[1;32m    617\u001b[0m _validate_names(kwds\u001b[38;5;241m.\u001b[39mget(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mnames\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m))\n\u001b[1;32m    619\u001b[0m \u001b[38;5;66;03m# Create the parser.\u001b[39;00m\n\u001b[0;32m--> 620\u001b[0m parser \u001b[38;5;241m=\u001b[39m \u001b[43mTextFileReader\u001b[49m\u001b[43m(\u001b[49m\u001b[43mfilepath_or_buffer\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwds\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    622\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m chunksize \u001b[38;5;129;01mor\u001b[39;00m iterator:\n\u001b[1;32m    623\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m parser\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1620\u001b[0m, in \u001b[0;36mTextFileReader.__init__\u001b[0;34m(self, f, engine, **kwds)\u001b[0m\n\u001b[1;32m   1617\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39moptions[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m] \u001b[38;5;241m=\u001b[39m kwds[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mhas_index_names\u001b[39m\u001b[38;5;124m\"\u001b[39m]\n\u001b[1;32m   1619\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles: IOHandles \u001b[38;5;241m|\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[0;32m-> 1620\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_make_engine\u001b[49m\u001b[43m(\u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mengine\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/parsers/readers.py:1880\u001b[0m, in \u001b[0;36mTextFileReader._make_engine\u001b[0;34m(self, f, engine)\u001b[0m\n\u001b[1;32m   1878\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m mode:\n\u001b[1;32m   1879\u001b[0m         mode \u001b[38;5;241m+\u001b[39m\u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m-> 1880\u001b[0m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;241m=\u001b[39m \u001b[43mget_handle\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   1881\u001b[0m \u001b[43m    \u001b[49m\u001b[43mf\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1882\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1883\u001b[0m \u001b[43m    \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1884\u001b[0m \u001b[43m    \u001b[49m\u001b[43mcompression\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mcompression\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1885\u001b[0m \u001b[43m    \u001b[49m\u001b[43mmemory_map\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mmemory_map\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1886\u001b[0m \u001b[43m    \u001b[49m\u001b[43mis_text\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mis_text\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1887\u001b[0m \u001b[43m    \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mencoding_errors\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstrict\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1888\u001b[0m \u001b[43m    \u001b[49m\u001b[43mstorage_options\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43moptions\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mstorage_options\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   1889\u001b[0m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1890\u001b[0m \u001b[38;5;28;01massert\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[1;32m   1891\u001b[0m f \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mhandles\u001b[38;5;241m.\u001b[39mhandle\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/io/common.py:873\u001b[0m, in \u001b[0;36mget_handle\u001b[0;34m(path_or_buf, mode, encoding, compression, memory_map, is_text, errors, storage_options)\u001b[0m\n\u001b[1;32m    868\u001b[0m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(handle, \u001b[38;5;28mstr\u001b[39m):\n\u001b[1;32m    869\u001b[0m     \u001b[38;5;66;03m# Check whether the filename is to be opened in binary mode.\u001b[39;00m\n\u001b[1;32m    870\u001b[0m     \u001b[38;5;66;03m# Binary mode does not support 'encoding' and 'newline'.\u001b[39;00m\n\u001b[1;32m    871\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mencoding \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mb\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m ioargs\u001b[38;5;241m.\u001b[39mmode:\n\u001b[1;32m    872\u001b[0m         \u001b[38;5;66;03m# Encoding\u001b[39;00m\n\u001b[0;32m--> 873\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mopen\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[1;32m    874\u001b[0m \u001b[43m            \u001b[49m\u001b[43mhandle\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    875\u001b[0m \u001b[43m            \u001b[49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    876\u001b[0m \u001b[43m            \u001b[49m\u001b[43mencoding\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mioargs\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mencoding\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    877\u001b[0m \u001b[43m            \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m    878\u001b[0m \u001b[43m            \u001b[49m\u001b[43mnewline\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[1;32m    879\u001b[0m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    880\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    881\u001b[0m         \u001b[38;5;66;03m# Binary mode\u001b[39;00m\n\u001b[1;32m    882\u001b[0m         handle \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mopen\u001b[39m(handle, ioargs\u001b[38;5;241m.\u001b[39mmode)\n","\u001b[0;31mFileNotFoundError\u001b[0m: [Errno 2] No such file or directory: '../input/world-bank-datasets/gdp_data.csv'"],"ename":"FileNotFoundError","evalue":"[Errno 2] No such file or directory: '../input/world-bank-datasets/gdp_data.csv'","output_type":"error"}]},{"cell_type":"code","source":"def x_min_max(data):\n    minimum = min(data)\n    maximum = max(data)\n    return minimum, maximum\n\nx_min_max(df_2016['gdp'])","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:57.711003Z","iopub.execute_input":"2024-08-19T06:45:57.711403Z","iopub.status.idle":"2024-08-19T06:45:57.719450Z","shell.execute_reply.started":"2024-08-19T06:45:57.711372Z","shell.execute_reply":"2024-08-19T06:45:57.718417Z"},"trusted":true},"execution_count":116,"outputs":[{"execution_count":116,"output_type":"execute_result","data":{"text/plain":"(36572611.8853148, 18624475000000.0)"},"metadata":{}}]},{"cell_type":"code","source":"def normalize(x, x_min, x_max):\n    # Complete this function\n    # The input is a single value \n    # The output is the normalized value\n    return (x - x_min) / (x_max - x_min)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:58.898728Z","iopub.execute_input":"2024-08-19T06:45:58.899150Z","iopub.status.idle":"2024-08-19T06:45:58.904455Z","shell.execute_reply.started":"2024-08-19T06:45:58.899117Z","shell.execute_reply":"2024-08-19T06:45:58.903342Z"},"trusted":true},"execution_count":117,"outputs":[]},{"cell_type":"code","source":"class Normalizer():\n    # Complete the normalizer class\n    # The normalizer class receives a dataframe as its only input for initialization\n    # For example, the data frame might contain gdp and population data in two separate columns\n    # Follow the TODOs in each section\n    \n    def __init__(self, dataframe):\n        \n        # complete the init function. \n        # Assume the dataframe has an unknown number of columns like [['gdp', 'population']] \n        # iterate through each column calculating the min and max for each column\n        # append the results to the params attribute list\n        \n        # For example, take the gdp column and calculate the minimum and maximum\n        # Put these results in a list [minimum, maximum]\n        # Append the list to the params variable\n        # Then take the population column and do the same\n        \n        # HINT: You can put your x_min_max() function as part of this class and use it\n        \n        self.params = []\n\n        for column in dataframe.columns:\n            self.params.append(x_min_max(dataframe[column]))\n            \n    def x_min_max(data):\n        # complete the x_min_max method\n        # HINT: You can use the same function defined earlier in the exercise\n        minimum = min(data)\n        maximum = max(data)\n        return minimum, maximum\n\n    def normalize_data(self, x):\n        # complete the normalize_data method\n        # The function receives a data point as an input and then outputs the normalized version\n        # For example, if an input data point of [gdp, population] were used. Then the output would\n        # be the normalized version of the [gdp, population] data point\n        # Put the results in the normalized variable defined below\n        \n        # Assume that the columns in the dataframe used to initialize an object are in the same\n        # order as this data point x\n        \n        # HINT: You cannot use the normalize_data function defined earlier in the exercise.\n        # You'll need to iterate through the individual values in the x variable        \n        # Use the params attribute where the min and max values are stored \n        normalized = []\n        for i, value in enumerate(x):\n            x_max = self.params[i][1]\n            x_min = self.params[i][0]\n            normalized.append((x[i] - x_min) / (x_max - x_min))\n        return normalized","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:45:59.715516Z","iopub.execute_input":"2024-08-19T06:45:59.715973Z","iopub.status.idle":"2024-08-19T06:45:59.726208Z","shell.execute_reply.started":"2024-08-19T06:45:59.715940Z","shell.execute_reply":"2024-08-19T06:45:59.725012Z"},"trusted":true},"execution_count":118,"outputs":[]},{"cell_type":"code","source":"gdp_normalizer = Normalizer(df_2016[['gdp', 'population']])","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:46:01.110692Z","iopub.execute_input":"2024-08-19T06:46:01.111478Z","iopub.status.idle":"2024-08-19T06:46:01.117849Z","shell.execute_reply.started":"2024-08-19T06:46:01.111444Z","shell.execute_reply":"2024-08-19T06:46:01.116629Z"},"trusted":true},"execution_count":119,"outputs":[]},{"cell_type":"code","source":"gdp_normalizer.params","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:46:01.654593Z","iopub.execute_input":"2024-08-19T06:46:01.655025Z","iopub.status.idle":"2024-08-19T06:46:01.664509Z","shell.execute_reply.started":"2024-08-19T06:46:01.654992Z","shell.execute_reply":"2024-08-19T06:46:01.663403Z"},"trusted":true},"execution_count":120,"outputs":[{"execution_count":120,"output_type":"execute_result","data":{"text/plain":"[(36572611.8853148, 18624475000000.0), (11097.0, 1378665000.0)]"},"metadata":{}}]},{"cell_type":"code","source":"gdp_normalizer.normalize_data([13424475000000.0, 1300000000])","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:46:02.231628Z","iopub.execute_input":"2024-08-19T06:46:02.232606Z","iopub.status.idle":"2024-08-19T06:46:02.239444Z","shell.execute_reply.started":"2024-08-19T06:46:02.232570Z","shell.execute_reply":"2024-08-19T06:46:02.238274Z"},"trusted":true},"execution_count":121,"outputs":[{"execution_count":121,"output_type":"execute_result","data":{"text/plain":"[0.7207969507229194, 0.9429407193285986]"},"metadata":{}}]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline \n\n# read in the projects data set and do basic wrangling \ngdp = pd.read_csv('../input/worldbank-dataset/gdp_data.csv', skiprows=4)\ngdp.drop(['Unnamed: 62', 'Country Code', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\npopulation = pd.read_csv('../input/worldbank-dataset/populationData.csv', skiprows=4)\npopulation.drop(['Unnamed: 62', 'Country Code', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\n\n\n# Reshape the data sets so that they are in long format\ngdp_melt = gdp.melt(id_vars=['Country Name'], \n                    var_name='year', \n                    value_name='gdp')\n\n# Use back fill and forward fill to fill in missing gdp values\ngdp_melt['gdp'] = gdp_melt.sort_values('year').groupby('Country Name')['gdp'].fillna(method='ffill').fillna(method='bfill')\n\npopulation_melt = population.melt(id_vars=['Country Name'], \n                                  var_name='year', \n                                  value_name='population')\n\n# Use back fill and forward fill to fill in missing population values\npopulation_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n\n# merge the population and gdp data together into one data frame\ndf_country = gdp_melt.merge(population_melt, on=('Country Name', 'year'))\n\n# filter data for the year 2016\ndf_2016 = df_country[df_country['year'] == '2016']\n\n# filter out values that are not countries\nnon_countries = ['World',\n 'High income',\n 'OECD members',\n 'Post-demographic dividend',\n 'IDA & IBRD total',\n 'Low & middle income',\n 'Middle income',\n 'IBRD only',\n 'East Asia & Pacific',\n 'Europe & Central Asia',\n 'North America',\n 'Upper middle income',\n 'Late-demographic dividend',\n 'European Union',\n 'East Asia & Pacific (excluding high income)',\n 'East Asia & Pacific (IDA & IBRD countries)',\n 'Euro area',\n 'Early-demographic dividend',\n 'Lower middle income',\n 'Latin America & Caribbean',\n 'Latin America & the Caribbean (IDA & IBRD countries)',\n 'Latin America & Caribbean (excluding high income)',\n 'Europe & Central Asia (IDA & IBRD countries)',\n 'Middle East & North Africa',\n 'Europe & Central Asia (excluding high income)',\n 'South Asia (IDA & IBRD)',\n 'South Asia',\n 'Arab World',\n 'IDA total',\n 'Sub-Saharan Africa',\n 'Sub-Saharan Africa (IDA & IBRD countries)',\n 'Sub-Saharan Africa (excluding high income)',\n 'Middle East & North Africa (excluding high income)',\n 'Middle East & North Africa (IDA & IBRD countries)',\n 'Central Europe and the Baltics',\n 'Pre-demographic dividend',\n 'IDA only',\n 'Least developed countries: UN classification',\n 'IDA blend',\n 'Fragile and conflict affected situations',\n 'Heavily indebted poor countries (HIPC)',\n 'Low income',\n 'Small states',\n 'Other small states',\n 'Not classified',\n 'Caribbean small states',\n 'Pacific island small states']\n\n# remove non countries from the data\ndf_2016 = df_2016[~df_2016['Country Name'].isin(non_countries)]\ndf_2016.reset_index(inplace=True, drop=True)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:46:38.667511Z","iopub.execute_input":"2024-08-19T06:46:38.668377Z","iopub.status.idle":"2024-08-19T06:46:38.887274Z","shell.execute_reply.started":"2024-08-19T06:46:38.668338Z","shell.execute_reply":"2024-08-19T06:46:38.886247Z"},"trusted":true},"execution_count":127,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/1506680836.py:19: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  gdp_melt['gdp'] = gdp_melt.sort_values('year').groupby('Country Name')['gdp'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/1506680836.py:19: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  gdp_melt['gdp'] = gdp_melt.sort_values('year').groupby('Country Name')['gdp'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/1506680836.py:26: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  population_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/1506680836.py:26: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  population_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n","output_type":"stream"}]},{"cell_type":"code","source":"# create a new feature called gdppercapita, \n#      which is the gdp value divided by the population value for each country\n\ndf_2016['gdppercapita'] = df_2016['gdp'] / df_2016['population']","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:46:50.230107Z","iopub.execute_input":"2024-08-19T06:46:50.230824Z","iopub.status.idle":"2024-08-19T06:46:50.236951Z","shell.execute_reply.started":"2024-08-19T06:46:50.230779Z","shell.execute_reply":"2024-08-19T06:46:50.235716Z"},"trusted":true},"execution_count":128,"outputs":[]},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n%matplotlib inline \n\n# read in the projects data set and do basic wrangling \ngdp = pd.read_csv('../input/worldbank-dataset/gdp_data.csv', skiprows=4)\ngdp.drop(['Unnamed: 62', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\npopulation = pd.read_csv('../input/worldbank-dataset/populationData.csv', skiprows=4)\npopulation.drop(['Unnamed: 62', 'Indicator Name', 'Indicator Code'], inplace=True, axis=1)\n\n\n# Reshape the data sets so that they are in long format\ngdp_melt = gdp.melt(id_vars=['Country Name', 'Country Code'], \n                    var_name='year', \n                    value_name='gdp')\n\n# Use back fill and forward fill to fill in missing gdp values\ngdp_melt['gdp'] = gdp_melt.sort_values('year').groupby(['Country Name', 'Country Code'])['gdp'].fillna(method='ffill').fillna(method='bfill')\n\npopulation_melt = population.melt(id_vars=['Country Name', 'Country Code'], \n                                  var_name='year', \n                                  value_name='population')\n\n# Use back fill and forward fill to fill in missing population values\npopulation_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n\n# merge the population and gdp data together into one data frame\ndf_indicator = gdp_melt.merge(population_melt, on=('Country Name', 'Country Code', 'year'))\n\n# filter out values that are not countries\nnon_countries = ['World',\n 'High income',\n 'OECD members',\n 'Post-demographic dividend',\n 'IDA & IBRD total',\n 'Low & middle income',\n 'Middle income',\n 'IBRD only',\n 'East Asia & Pacific',\n 'Europe & Central Asia',\n 'North America',\n 'Upper middle income',\n 'Late-demographic dividend',\n 'European Union',\n 'East Asia & Pacific (excluding high income)',\n 'East Asia & Pacific (IDA & IBRD countries)',\n 'Euro area',\n 'Early-demographic dividend',\n 'Lower middle income',\n 'Latin America & Caribbean',\n 'Latin America & the Caribbean (IDA & IBRD countries)',\n 'Latin America & Caribbean (excluding high income)',\n 'Europe & Central Asia (IDA & IBRD countries)',\n 'Middle East & North Africa',\n 'Europe & Central Asia (excluding high income)',\n 'South Asia (IDA & IBRD)',\n 'South Asia',\n 'Arab World',\n 'IDA total',\n 'Sub-Saharan Africa',\n 'Sub-Saharan Africa (IDA & IBRD countries)',\n 'Sub-Saharan Africa (excluding high income)',\n 'Middle East & North Africa (excluding high income)',\n 'Middle East & North Africa (IDA & IBRD countries)',\n 'Central Europe and the Baltics',\n 'Pre-demographic dividend',\n 'IDA only',\n 'Least developed countries: UN classification',\n 'IDA blend',\n 'Fragile and conflict affected situations',\n 'Heavily indebted poor countries (HIPC)',\n 'Low income',\n 'Small states',\n 'Other small states',\n 'Not classified',\n 'Caribbean small states',\n 'Pacific island small states']\n\n# remove non countries from the data\ndf_indicator  = df_indicator[~df_indicator['Country Name'].isin(non_countries)]\ndf_indicator.reset_index(inplace=True, drop=True)\n\ndf_indicator.columns = ['countryname', 'countrycode', 'year', 'gdp', 'population']\n\n# output the first few rows of the data frame\ndf_indicator.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:47:08.535189Z","iopub.execute_input":"2024-08-19T06:47:08.535690Z","iopub.status.idle":"2024-08-19T06:47:08.786615Z","shell.execute_reply.started":"2024-08-19T06:47:08.535651Z","shell.execute_reply":"2024-08-19T06:47:08.785629Z"},"trusted":true},"execution_count":130,"outputs":[{"name":"stderr","text":"/tmp/ipykernel_33/2823888318.py:19: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  gdp_melt['gdp'] = gdp_melt.sort_values('year').groupby(['Country Name', 'Country Code'])['gdp'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/2823888318.py:19: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  gdp_melt['gdp'] = gdp_melt.sort_values('year').groupby(['Country Name', 'Country Code'])['gdp'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/2823888318.py:26: FutureWarning: SeriesGroupBy.fillna is deprecated and will be removed in a future version. Use obj.ffill() or obj.bfill() for forward or backward filling instead. If you want to fill with a single value, use Series.fillna instead\n  population_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n/tmp/ipykernel_33/2823888318.py:26: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n  population_melt['population'] = population_melt.sort_values('year').groupby('Country Name')['population'].fillna(method='ffill').fillna(method='bfill')\n","output_type":"stream"},{"execution_count":130,"output_type":"execute_result","data":{"text/plain":"   countryname countrycode  year           gdp  population\n0        Aruba         ABW  1960  1.916242e+09     54211.0\n1  Afghanistan         AFG  1960  5.377778e+08   8996351.0\n2       Angola         AGO  1960  1.857319e+10   5643182.0\n3      Albania         ALB  1960  1.857319e+10   1608800.0\n4      Andorra         AND  1960  1.857319e+10     13411.0","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>countryname</th>\n      <th>countrycode</th>\n      <th>year</th>\n      <th>gdp</th>\n      <th>population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Aruba</td>\n      <td>ABW</td>\n      <td>1960</td>\n      <td>1.916242e+09</td>\n      <td>54211.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Afghanistan</td>\n      <td>AFG</td>\n      <td>1960</td>\n      <td>5.377778e+08</td>\n      <td>8996351.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Angola</td>\n      <td>AGO</td>\n      <td>1960</td>\n      <td>1.857319e+10</td>\n      <td>5643182.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Albania</td>\n      <td>ALB</td>\n      <td>1960</td>\n      <td>1.857319e+10</td>\n      <td>1608800.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Andorra</td>\n      <td>AND</td>\n      <td>1960</td>\n      <td>1.857319e+10</td>\n      <td>13411.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"!pip install pycountry\nfrom pycountry import countries\n\n# read in the projects data set with all columns type string\ndf_projects = pd.read_csv('../input/worldbank-dataset/projects_data.csv', dtype=str)\ndf_projects.drop(['Unnamed: 56'], axis=1, inplace=True)\n\ndf_projects['countryname'] = df_projects['countryname'].str.split(';').str.get(0)\n\n# set up the libraries and variables\nfrom collections import defaultdict\ncountry_not_found = [] # stores countries not found in the pycountry library\nproject_country_abbrev_dict = defaultdict(str) # set up an empty dictionary of string values\n\n# iterate through the country names in df_projects. \n# Create a dictionary mapping the country name to the alpha_3 ISO code\nfor country in df_projects['countryname'].drop_duplicates().sort_values():\n    try: \n        # look up the country name in the pycountry library\n        # store the country name as the dictionary key and the ISO-3 code as the value\n        project_country_abbrev_dict[country] = countries.lookup(country).alpha_3\n    except:\n        # If the country name is not in the pycountry library, then print out the country name\n        # And store the results in the country_not_found list\n        country_not_found.append(country)\n        \n# run this code cell to load the dictionary\n\ncountry_not_found_mapping = {'Co-operative Republic of Guyana': 'GUY',\n             'Commonwealth of Australia':'AUS',\n             'Democratic Republic of Sao Tome and Prin':'STP',\n             'Democratic Republic of the Congo':'COD',\n             'Democratic Socialist Republic of Sri Lan':'LKA',\n             'East Asia and Pacific':'EAS',\n             'Europe and Central Asia': 'ECS',\n             'Islamic  Republic of Afghanistan':'AFG',\n             'Latin America':'LCN',\n              'Caribbean':'LCN',\n             'Macedonia':'MKD',\n             'Middle East and North Africa':'MEA',\n             'Oriental Republic of Uruguay':'URY',\n             'Republic of Congo':'COG',\n             \"Republic of Cote d'Ivoire\":'CIV',\n             'Republic of Korea':'KOR',\n             'Republic of Niger':'NER',\n             'Republic of Kosovo':'XKX',\n             'Republic of Rwanda':'RWA',\n              'Republic of The Gambia':'GMB',\n              'Republic of Togo':'TGO',\n              'Republic of the Union of Myanmar':'MMR',\n              'Republica Bolivariana de Venezuela':'VEN',\n              'Sint Maarten':'SXM',\n              \"Socialist People's Libyan Arab Jamahiriy\":'LBY',\n              'Socialist Republic of Vietnam':'VNM',\n              'Somali Democratic Republic':'SOM',\n              'South Asia':'SAS',\n              'St. Kitts and Nevis':'KNA',\n              'St. Lucia':'LCA',\n              'St. Vincent and the Grenadines':'VCT',\n              'State of Eritrea':'ERI',\n              'The Independent State of Papua New Guine':'PNG',\n              'West Bank and Gaza':'PSE',\n              'World':'WLD'}\n\nproject_country_abbrev_dict.update(country_not_found_mapping)\n\ndf_projects['countrycode'] = df_projects['countryname'].apply(lambda x: project_country_abbrev_dict[x])\n\ndf_projects['boardapprovaldate'] = pd.to_datetime(df_projects['boardapprovaldate'])\n\ndf_projects['year'] = df_projects['boardapprovaldate'].dt.year.astype(str).str.slice(stop=4)\n\ndf_projects['totalamt'] = pd.to_numeric(df_projects['totalamt'].str.replace(',',\"\"))\n\ndf_projects = df_projects[['id', 'countryname', 'countrycode', 'totalamt', 'year']]\n\ndf_projects.head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:17.248642Z","iopub.execute_input":"2024-08-19T06:48:17.249410Z","iopub.status.idle":"2024-08-19T06:48:32.480403Z","shell.execute_reply.started":"2024-08-19T06:48:17.249374Z","shell.execute_reply":"2024-08-19T06:48:32.479032Z"},"trusted":true},"execution_count":132,"outputs":[{"name":"stdout","text":"Requirement already satisfied: pycountry in /opt/conda/lib/python3.10/site-packages (24.6.1)\n","output_type":"stream"},{"execution_count":132,"output_type":"execute_result","data":{"text/plain":"        id                       countryname countrycode   totalamt  year\n0  P162228                             World         WLD          0  2018\n1  P163962  Democratic Republic of the Congo         COD  200000000  2018\n2  P167672   People's Republic of Bangladesh         BGD   58330000  2018\n3  P158768  Islamic  Republic of Afghanistan         AFG   20000000  2018\n4  P161364       Federal Republic of Nigeria         NGA  100000000  2018","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>countryname</th>\n      <th>countrycode</th>\n      <th>totalamt</th>\n      <th>year</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>P162228</td>\n      <td>World</td>\n      <td>WLD</td>\n      <td>0</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>P163962</td>\n      <td>Democratic Republic of the Congo</td>\n      <td>COD</td>\n      <td>200000000</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>P167672</td>\n      <td>People's Republic of Bangladesh</td>\n      <td>BGD</td>\n      <td>58330000</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>P158768</td>\n      <td>Islamic  Republic of Afghanistan</td>\n      <td>AFG</td>\n      <td>20000000</td>\n      <td>2018</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>P161364</td>\n      <td>Federal Republic of Nigeria</td>\n      <td>NGA</td>\n      <td>100000000</td>\n      <td>2018</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_merged = df_projects.merge(df_indicator, how='left', on=['countrycode', 'year'])","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:32.482718Z","iopub.execute_input":"2024-08-19T06:48:32.483112Z","iopub.status.idle":"2024-08-19T06:48:32.513868Z","shell.execute_reply.started":"2024-08-19T06:48:32.483077Z","shell.execute_reply":"2024-08-19T06:48:32.512740Z"},"trusted":true},"execution_count":133,"outputs":[]},{"cell_type":"code","source":"df_merged[(df_merged['year'] == '2017') & (df_merged['countryname_y'] == 'Jordan')]","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:32.515129Z","iopub.execute_input":"2024-08-19T06:48:32.515438Z","iopub.status.idle":"2024-08-19T06:48:32.541106Z","shell.execute_reply.started":"2024-08-19T06:48:32.515412Z","shell.execute_reply":"2024-08-19T06:48:32.539926Z"},"trusted":true},"execution_count":134,"outputs":[{"execution_count":134,"output_type":"execute_result","data":{"text/plain":"          id                countryname_x countrycode   totalamt  year  \\\n256  P161982  Hashemite Kingdom of Jordan         JOR          0  2017   \n301  P162407  Hashemite Kingdom of Jordan         JOR  147700000  2017   \n318  P160103  Hashemite Kingdom of Jordan         JOR          0  2017   \n464  P161905  Hashemite Kingdom of Jordan         JOR   50000000  2017   \n495  P163387  Hashemite Kingdom of Jordan         JOR   36100000  2017   \n515  P163241  Hashemite Kingdom of Jordan         JOR          0  2017   \n\n    countryname_y           gdp  population  \n256        Jordan  4.006831e+10   9702353.0  \n301        Jordan  4.006831e+10   9702353.0  \n318        Jordan  4.006831e+10   9702353.0  \n464        Jordan  4.006831e+10   9702353.0  \n495        Jordan  4.006831e+10   9702353.0  \n515        Jordan  4.006831e+10   9702353.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>countryname_x</th>\n      <th>countrycode</th>\n      <th>totalamt</th>\n      <th>year</th>\n      <th>countryname_y</th>\n      <th>gdp</th>\n      <th>population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>256</th>\n      <td>P161982</td>\n      <td>Hashemite Kingdom of Jordan</td>\n      <td>JOR</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>Jordan</td>\n      <td>4.006831e+10</td>\n      <td>9702353.0</td>\n    </tr>\n    <tr>\n      <th>301</th>\n      <td>P162407</td>\n      <td>Hashemite Kingdom of Jordan</td>\n      <td>JOR</td>\n      <td>147700000</td>\n      <td>2017</td>\n      <td>Jordan</td>\n      <td>4.006831e+10</td>\n      <td>9702353.0</td>\n    </tr>\n    <tr>\n      <th>318</th>\n      <td>P160103</td>\n      <td>Hashemite Kingdom of Jordan</td>\n      <td>JOR</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>Jordan</td>\n      <td>4.006831e+10</td>\n      <td>9702353.0</td>\n    </tr>\n    <tr>\n      <th>464</th>\n      <td>P161905</td>\n      <td>Hashemite Kingdom of Jordan</td>\n      <td>JOR</td>\n      <td>50000000</td>\n      <td>2017</td>\n      <td>Jordan</td>\n      <td>4.006831e+10</td>\n      <td>9702353.0</td>\n    </tr>\n    <tr>\n      <th>495</th>\n      <td>P163387</td>\n      <td>Hashemite Kingdom of Jordan</td>\n      <td>JOR</td>\n      <td>36100000</td>\n      <td>2017</td>\n      <td>Jordan</td>\n      <td>4.006831e+10</td>\n      <td>9702353.0</td>\n    </tr>\n    <tr>\n      <th>515</th>\n      <td>P163241</td>\n      <td>Hashemite Kingdom of Jordan</td>\n      <td>JOR</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>Jordan</td>\n      <td>4.006831e+10</td>\n      <td>9702353.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"df_merged.to_json('countrydata.json', orient='records')","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:32.544087Z","iopub.execute_input":"2024-08-19T06:48:32.544440Z","iopub.status.idle":"2024-08-19T06:48:32.618509Z","shell.execute_reply.started":"2024-08-19T06:48:32.544410Z","shell.execute_reply":"2024-08-19T06:48:32.617568Z"},"trusted":true},"execution_count":135,"outputs":[]},{"cell_type":"code","source":"df_merged.to_csv('countrydata.csv', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:32.620202Z","iopub.execute_input":"2024-08-19T06:48:32.620617Z","iopub.status.idle":"2024-08-19T06:48:32.777063Z","shell.execute_reply.started":"2024-08-19T06:48:32.620580Z","shell.execute_reply":"2024-08-19T06:48:32.776076Z"},"trusted":true},"execution_count":136,"outputs":[]},{"cell_type":"code","source":"import sqlite3\n\n# connect to the database\n# the database file will be worldbank.db\n# note that sqlite3 will create this database file if it does not exist already\nconn = sqlite3.connect('worldbank.db')\n\ndf_merged.to_sql('merged', con = conn, if_exists='replace', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:32.778355Z","iopub.execute_input":"2024-08-19T06:48:32.778662Z","iopub.status.idle":"2024-08-19T06:48:32.894621Z","shell.execute_reply.started":"2024-08-19T06:48:32.778636Z","shell.execute_reply":"2024-08-19T06:48:32.893538Z"},"trusted":true},"execution_count":137,"outputs":[{"execution_count":137,"output_type":"execute_result","data":{"text/plain":"18248"},"metadata":{}}]},{"cell_type":"code","source":"pd.read_sql('SELECT * FROM merged WHERE year = \"2017\" AND countrycode = \"BRA\"', con = conn).head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:32.895941Z","iopub.execute_input":"2024-08-19T06:48:32.896272Z","iopub.status.idle":"2024-08-19T06:48:32.917426Z","shell.execute_reply.started":"2024-08-19T06:48:32.896243Z","shell.execute_reply":"2024-08-19T06:48:32.916345Z"},"trusted":true},"execution_count":138,"outputs":[{"execution_count":138,"output_type":"execute_result","data":{"text/plain":"        id                  countryname_x countrycode   totalamt  year  \\\n0  P162033  Federative Republic of Brazil         BRA  125000000  2017   \n1  P158000  Federative Republic of Brazil         BRA          0  2017   \n2  P163868  Federative Republic of Brazil         BRA  250000000  2017   \n3  P152285  Federative Republic of Brazil         BRA          0  2017   \n4  P147158  Federative Republic of Brazil         BRA   50000000  2017   \n\n  countryname_y           gdp   population  \n0        Brazil  2.055506e+12  209288278.0  \n1        Brazil  2.055506e+12  209288278.0  \n2        Brazil  2.055506e+12  209288278.0  \n3        Brazil  2.055506e+12  209288278.0  \n4        Brazil  2.055506e+12  209288278.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>countryname_x</th>\n      <th>countrycode</th>\n      <th>totalamt</th>\n      <th>year</th>\n      <th>countryname_y</th>\n      <th>gdp</th>\n      <th>population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>P162033</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>125000000</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>P158000</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>P163868</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>250000000</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>P152285</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>P147158</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>50000000</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"import sqlite3\n\n# connect to the database\n# the database file will be worldbank.db\n# note that sqlite3 will create this database file if it does not exist already\nconn = sqlite3.connect('worldbank.db')\n\ndf_indicator.to_sql('indicator', con = conn, if_exists='replace', index=False)\ndf_projects.to_sql('projects', con = conn, if_exists='replace', index=False)","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:32.919018Z","iopub.execute_input":"2024-08-19T06:48:32.919749Z","iopub.status.idle":"2024-08-19T06:48:33.072184Z","shell.execute_reply.started":"2024-08-19T06:48:32.919710Z","shell.execute_reply":"2024-08-19T06:48:33.071093Z"},"trusted":true},"execution_count":139,"outputs":[{"execution_count":139,"output_type":"execute_result","data":{"text/plain":"18248"},"metadata":{}}]},{"cell_type":"code","source":"pd.read_sql('SELECT * FROM projects LEFT JOIN indicator ON \\\nprojects.countrycode = indicator.countrycode AND \\\nprojects.year = indicator.year WHERE \\\nprojects.year = \"2017\" AND projects.countrycode = \"BRA\"', con = conn).head()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:33.073466Z","iopub.execute_input":"2024-08-19T06:48:33.073818Z","iopub.status.idle":"2024-08-19T06:48:33.110390Z","shell.execute_reply.started":"2024-08-19T06:48:33.073775Z","shell.execute_reply":"2024-08-19T06:48:33.109417Z"},"trusted":true},"execution_count":140,"outputs":[{"execution_count":140,"output_type":"execute_result","data":{"text/plain":"        id                    countryname countrycode   totalamt  year  \\\n0  P162033  Federative Republic of Brazil         BRA  125000000  2017   \n1  P158000  Federative Republic of Brazil         BRA          0  2017   \n2  P163868  Federative Republic of Brazil         BRA  250000000  2017   \n3  P152285  Federative Republic of Brazil         BRA          0  2017   \n4  P147158  Federative Republic of Brazil         BRA   50000000  2017   \n\n  countryname countrycode  year           gdp   population  \n0      Brazil         BRA  2017  2.055506e+12  209288278.0  \n1      Brazil         BRA  2017  2.055506e+12  209288278.0  \n2      Brazil         BRA  2017  2.055506e+12  209288278.0  \n3      Brazil         BRA  2017  2.055506e+12  209288278.0  \n4      Brazil         BRA  2017  2.055506e+12  209288278.0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>id</th>\n      <th>countryname</th>\n      <th>countrycode</th>\n      <th>totalamt</th>\n      <th>year</th>\n      <th>countryname</th>\n      <th>countrycode</th>\n      <th>year</th>\n      <th>gdp</th>\n      <th>population</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>P162033</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>125000000</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>BRA</td>\n      <td>2017</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>P158000</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>BRA</td>\n      <td>2017</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>P163868</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>250000000</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>BRA</td>\n      <td>2017</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>P152285</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>0</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>BRA</td>\n      <td>2017</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>P147158</td>\n      <td>Federative Republic of Brazil</td>\n      <td>BRA</td>\n      <td>50000000</td>\n      <td>2017</td>\n      <td>Brazil</td>\n      <td>BRA</td>\n      <td>2017</td>\n      <td>2.055506e+12</td>\n      <td>209288278.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"# commit any changes to the database and close the database\nconn.commit()\nconn.close()","metadata":{"execution":{"iopub.status.busy":"2024-08-19T06:48:33.113189Z","iopub.execute_input":"2024-08-19T06:48:33.113521Z","iopub.status.idle":"2024-08-19T06:48:33.119146Z","shell.execute_reply.started":"2024-08-19T06:48:33.113493Z","shell.execute_reply":"2024-08-19T06:48:33.117851Z"},"trusted":true},"execution_count":141,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}